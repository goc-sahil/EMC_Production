<apex:page showHeader="false" title="Admin Driver Details" lightningStylesheets="false" sidebar="false" controller="DriverDashboardFromAdminManager" action="{!getRedirected}">
    <html lang="en">

    <head>
        <apex:include pageName="EMC_Common_Head" />
        <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.EmcCSS, 'emc-design/assets/css/CustomStyle.css')}" />
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v6.1.1/css/all.css"/>
        <apex:include pageName="EMC_Common_Scripts" />
        <script src="{!URLFOR($Resource.modelJs)}"></script>
        <script src="{!URLFOR($Resource.dirPagination)}"></script>
        <script src="../../soap/ajax/44.0/connection.js"
          type="text/javascript"></script>
        <style>
            @keyframes roundB {
                0% {
                    opacity: 0;
                }
                100% {
                    opacity: 1;
                }
            }

            @keyframes xA {
                0% {
                    box-shadow:  #78bc427a 0px 0px 0px 10px;
                }

                70% {
                    box-shadow: rgb(106 120 209 / 0%) 0px 0px 0px 6px;
                } 

                100% {
                    box-shadow: rgb(106 120 209 / 0%) 0px 0px 0px 10px;
                }
            }
            /* Large screens ----------- */
            @media (min-width: 2560px)  {
                .fuel_td{
                    width: 15rem;
                }
                .month_td{
                    width: 15rem;
                }
            }
            @media (min-width: 1800px) and (max-width: 2559px) {
                .fuel_td{
                    width: 9rem;
                }
                .month_td{
                    width: 9rem;
                }
            }

            /* Desktops and laptops ----------- */
            @media (min-width : 1600px) and (max-width : 1799px){
                .fuel_td{
                    width: 8rem;
                }
                .month_td{
                    width: 8rem;
                }
            }
            @media (min-width : 1224px) and (max-width : 1600px){
                .fuel_td{
                    width: 5rem;
                }
                .month_td{
                    width: 6rem;
                }
            }

             /* For Desktop View ----------- */
             @media  (min-width: 1024px) and (max-width: 1224px){
                .fuel_td{
                    width: 6rem;
                }
                .month_td{
                    width: 6rem;
                }
             }

             /* For Tablet View ----------- */
            @media screen and (min-device-width: 768px)
            and (max-device-width: 1024px) {
                .fuel_td{
                    width: 6rem;
                }
            }

            /* For iPhone 4 Portrait or Landscape View ----------- */
            @media screen and (min-device-width: 320px)
            and (-webkit-min-device-pixel-ratio: 2) {
                .fuel_td{
                    width: 6rem;
                }
            }

            /* For iPhone 5 Portrait or Landscape View ----------- */
            @media (device-height: 568px) and (device-width: 320px)
            and (-webkit-min-device-pixel-ratio: 2) {
                .fuel_td{
                    width: 6rem;
                }
            }

            .card-inner-text{
                display: flow-root;
                padding-right: 51px;
            }
            .f-btn{
                float: right;
            }
            .font-16 {
                font-size: 16px !important;
            }
            .syncMileageBtn {
                font-size: 12px !important;
                padding: 2px 8px !important;
            }

            .vw-8 {
                width: 8vw;
            }

            .vw-7 {
                width: 7vw;
            }

            .vw-9 {
                width: 9vw;
            }

            .font-14 {
                font-size: 14px !important;
            }

            .cursor-type {
                cursor: pointer;
            }

            .vw-6 {
                width: 6vw;
            }

            .expenseBtn {
                font-size: 12px !important;
                padding: 2px 8px !important;
            }

            .check-in-info {
                margin-top: 9px;
            }

            .left-style {
                left: 25% !important;
            }

            .sMessage-load {
                font-size: 20px;
                position: fixed;
                top: 60%;
                left: 41%;
                z-index: 1000000;
            }

            .margin_top-5 {
                margin-top: 5px;
            }

            .pad-0 {
                padding-top: 0rem;
            }

            .mr-15{
                margin-right: 15px !important;
            }

            .pl-15{
                padding-left: 15px;
            }

            table#driver-dashbord-month-model th {
                position: relative;
            }

            table#driver-dashbord-month-model span.sort-icon {
                position: absolute;
                top: 36px;
                font-size: 14px;
            }
            table.dataTable thead th{
                padding: 10px 10px !important;
            }
            .card-footer{
                padding: 0.35rem 1.15rem !important;
            }
            .tips-button{
                border-radius: 50%;
                padding: 0px;
                background: #78bc42 !important;
                border: 0px;
                color: rgb(255, 255, 255);
                font-weight: 500;
                opacity: 0;
                width: 27px;
                height: 27px;
                font-size: 12px;
                line-height: 27px;
                box-shadow: rgb(106 120 209 / 0%) 0px 0px 0px 0px;
                animation: 2s ease 2.1s infinite normal none running xA, 0.5s ease 1.4s 1 normal forwards running roundB;
            }

            .tips-button::selection {
                background: none !important;
                text-shadow: none !important;
                color: none !important;
            }

            .tips-button:focus-visible{
                outline: none !important;
            }

            .tips-button:focus{
                outline: none !important;
            }

        </style>
        <script>
             window.onload = function () {
                 var iframeurl;
                var siteUrl = location.href;
                var siteUrlString = new URL(siteUrl);
                var accountId = siteUrlString.searchParams.get("accid");
                var emcDriverId = siteUrlString.searchParams.get("id");
                iframeurl = 'https://'+window.location.host+'/app/newdriverdashboard?accid=' + accountId + '&id=' + emcDriverId;
                document.getElementById("vfFrame").setAttribute("src", iframeurl);
                if (window.screen.width > 2391) { // 1824 // "345"
                    if (window.screen.width > 2560) { 
                        document.getElementById("vfFrame").height = "350"; 
                    }else{
                        document.getElementById("vfFrame").height = "340";
                    }
                }else{
                    if (window.screen.width != 1366) { 
                        document.getElementById("vfFrame").height = "338"; 
                    } else {
                        document.getElementById("vfFrame").height = "342"; 
                    }
                }
                if (window.screen.width != 1366) { 
                    addHeight();
                }
             }
             addHeight = function(){
                    let vfFrameheight;
                    vfFrameheight  = document.getElementById('vfFrame').contentWindow.document.body.scrollHeight;
                    document.getElementById("vfFrame").height = `${(vfFrameheight)}px`;
            }
            window.onresize = function(){
                let height;
                height = document.getElementById('vfFrame').contentWindow.document.body.offsetHeight;
                document.getElementById("vfFrame").height = `${(height)}px`
                // console.log(document.getElementById('vfFrame').contentWindow.document.body);
            }
        </script>
        <script>
            var app = angular.module('drivermanagerDashboardModule', ['ui.bootstrap', 'angularUtils.directives.dirPagination']);
            var MileagesofReimbursements = function (visible) {
                this.visible = visible;
            };

            MileagesofReimbursements.prototype.open = function (name, fileName, month, selectedYear, mileageList, emailofemployee, modalType) {
                this.fileName = fileName;
                this.visible = true;
                this.mileageList = mileageList;
                this.name = name;
                this.clickedMonth = month;
                this.clickedYear = selectedYear;
                this.emailofemployee = emailofemployee;
                this.modalType = modalType;
            };

            MileagesofReimbursements.prototype.close = function () {
                this.visible = false;
            };

            app.directive('driverReimbursementsDialogDirective', ['$filter',
                function ($filter) {
                    return {
                        restrict: 'E',
                        scope: {
                            model: '=',
                            data: "&exportData",
                            someCtrlFn: '&callbackFn',
                            modalformsg: '&modalOpen'
                        },
                        link: function (scope, element, attributes) {
                            scope.$watch('model.visible', function (newValue) {
                                var modalElement = element.find('.modal');
                                modalElement.modal(newValue ? 'show' : 'hide');
                                if (newValue == true) {
                                    scope.callfn('');
                                }
                                else {
                                    scope.IsAllChecked = false;
                                    scope.IsAllCheckedFlag = false;
                                    scope.checkAllShowApprove = false;
                                    scope.checkAllShowFlag = false;
                                }
                                console.log(scope.model.modalType)
                                angular.forEach(scope.model.mileageList, function (item) {
                                    if (item.isSelected || item.isChecked) {
                                        scope.selectedmonth = scope.model.clickedMonth;
                                        scope.selectedyear = scope.model.clickedYear;
                                        scope.selecteddid = item.driverid;
                                    }
                                });
                            });

                            scope.totalMileage = 0;
                            scope.totalVariableAmount = 0;
                            scope.showmanagermodalsearchbar = false;
                            scope.selecteddid = '';
                            scope.displayBtn = false;
                            scope.IsAllChecked = false;
                            scope.IsAllCheckedFlag = false;
                            scope.checkAllShowApprove = false;
                            scope.checkAllShowFlag = false;
                            scope.selectedmileageidlist = [];
                            scope.selectedrejectedmileageidlist = [];
                            scope.selectednotapprovemileageidlist = [];
                            scope.showData = [];
                            scope.total = 0;
                            scope.totalvariablerate = 0;
                            scope.currentPage = 1;
                            scope.lastIndex = 0;
                            scope.totalRecords;
                            scope.reverse = false;
                            scope.maxPage = 0;
                            scope.search = "";
                            scope.itemPerPage = 8;
                            scope.searchedArray = [];
                            scope.init = function () {
                                scope.showData = [];
                                scope.total = 0.0;
                                scope.totalvariablerate = 0.0;
                                scope.maxPage = 0;
                                scope.totalRecords = scope.model.mileageList.length;
                                scope.model.mileageList
                                let tl = 0;
                                let tv = 0;
                                scope.maxPage = Math.ceil(scope.totalRecords / scope.itemPerPage)
                                scope.totalRecords
                                for (var i = 0; i < scope.itemPerPage; i++) {
                                    scope.currentPage = 1;
                                    if (scope.model.mileageList[i]) {
                                        /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);*/
                                        tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                                        tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                                        /*scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                        scope.showData.push(scope.model.mileageList[i])
                                    }
                                    scope.lastIndex = i + 1;
                                }
                                scope.total = tl.toFixed(2);
                                scope.totalvariablerate = tv.toFixed(2);
                            }
                            scope.next = function () {
                                scope.showData = [];
                                scope.total = 0;
                                scope.totalvariablerate = 0;
                                var lstInd = scope.lastIndex;
                                var count = 0;
                                let lockdatecount = 0;
                                let tl = 0;
                                let tv = 0;

                                for (var i = scope.lastIndex; i < lstInd + scope.itemPerPage; i++) {
                                    let isSearch = scope.searchedArray.length > 0 ? true : false
                                    if (isSearch) {
                                        if (scope.searchedArray[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                            scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            tl = tl + parseFloat(scope.searchedArray[i].mileage);
                                            tv = tv + parseFloat(scope.searchedArray[i].variableamount);
                                            scope.showData.push(scope.searchedArray[i])
                                        }
                                    } else {
                                        if (scope.model.mileageList[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                            scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                                            tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                                            scope.showData.push(scope.model.mileageList[i])
                                        }
                                    }
                                    scope.lastIndex = i + 1;
                                }

                                //AI-000427 --> Starts
                                let _flagged = $filter("filter")(scope.showData, { isLockDate: false , isChecked: true});
                                let _approved = $filter("filter")(scope.showData, {isLockDate: false, isSelected:true});
                                var mileageLen = scope.showData.length;
                                angular.forEach(scope.showData, function (item) {
                                    if (item.isSelected || item.isChecked) {
                                        count++;
                                    }
                                    if (item.isLockDate) {
                                        lockdatecount++;
                                    }
                                });

                                if (lockdatecount === 0) {
                                    if (count === 0) {
                                        scope.displayBtn = false;
                                    }
                                    else {
                                        scope.displayBtn = true;
                                    }
                                }
                                else {
                                    if (mileageLen === lockdatecount) {
                                        scope.displayBtn = false;
                                    } else {
                                        if (_flagged.length > 0 || _approved.length > 0) {
                                            scope.displayBtn = true;
                                        } else {
                                            scope.displayBtn = false;
                                        }
                                        //scope.displayBtn = true;
                                    }
                                   // scope.displayBtn = false;
                                }


                                //AI-000427 --> Ends
                                scope.total = tl.toFixed(2);
                                scope.totalvariablerate = tv.toFixed(2);
                                scope.currentPage++;
                            }
                            scope.previous = function () {
                                scope.showData = [];
                                scope.total = 0;
                                scope.totalvariablerate = 0;
                                let tl = 0;
                                let tv = 0;
                                var lstInd = scope.lastIndex;
                                var count = 0;
                                let lockdatecount = 0;
                                for (var i = scope.lastIndex - (scope.itemPerPage * 2); i < lstInd - scope.itemPerPage; i++) {
                                    let isSearch = scope.searchedArray.length > 0 ? true : false
                                    if (isSearch) {
                                        if (scope.searchedArray[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                            scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            tl = tl + parseFloat(scope.searchedArray[i].mileage);
                                            tv = tv + parseFloat(scope.searchedArray[i].variableamount);
                                            scope.showData.push(scope.searchedArray[i])
                                        }
                                    } else {
                                        if (scope.model.mileageList[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                            scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                                            tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                                            scope.showData.push(scope.model.mileageList[i])
                                        }
                                    }
                                    scope.lastIndex = i + 1;

                                }
                                //AI-000427 --> Starts

                                let _flagged = $filter("filter")(scope.showData, { isLockDate: false , isChecked: true});
                                let _approved = $filter("filter")(scope.showData, {isLockDate: false, isSelected:true});
                                var mileageLen = scope.showData.length;
                                angular.forEach(scope.showData, function (item) {
                                    if (item.isSelected || item.isChecked) {
                                        count++;
                                    }
                                    if (item.isLockDate) {
                                        lockdatecount++;
                                    }
                                });

                                if (lockdatecount === 0) {
                                    if (count === 0) {
                                        scope.displayBtn = false;
                                    }
                                    else {
                                        scope.displayBtn = true;
                                    }
                                }
                                else {
                                    if (mileageLen === lockdatecount) {
                                        scope.displayBtn = false;
                                    } else {
                                        if (_flagged.length > 0 || _approved.length > 0) {
                                            scope.displayBtn = true;
                                        } else {
                                            scope.displayBtn = false;
                                        }
                                     //   scope.displayBtn = true;
                                    }
                                   // scope.displayBtn = false;
                                }

                                //AI-000427 --> Ends
                                scope.total = tl.toFixed(2);
                                scope.totalvariablerate = tv.toFixed(2);
                                scope.currentPage--;

                            }
                            scope.sortKey = 'tripdate';
                            scope.sort = function (keyName) {

                                //$scope.reverse = !$scope.reverse;
                                scope.reverse = (scope.sortKey === keyName) ? !scope.reverse : false;
                                scope.sortKey = keyName;

                                if (keyName === 'mileage' || keyName === 'variableamount') {
                                    scope.model.mileageList.sort(function (a, b) {

                                        var nameA = (a[keyName] == null) ? '' :  parseInt(a[keyName]),
                                            nameB = (b[keyName] == null) ? '' :  parseInt(b[keyName]);

                                        if (scope.reverse) {
                                            if (nameA < nameB) //sort string ascending
                                                return -1
                                            if (nameA > nameB)
                                                return 1
                                            return 0 //default return valuscope.model.mileageList=e (no sorting)
                                        } else {
                                            if (nameA < nameB) //sort string ascending
                                                return 1
                                            if (nameA > nameB)
                                                return -1
                                            return 0 //default return value (no sorting)
                                        }
                                    })
                                }
                                if (keyName === 'originname' || keyName === 'destinationname' || keyName === 'tripActivity') {
                                    scope.model.mileageList.sort(function (a, b) {
                                        var nameA = (a[keyName] == null) ? '' :  a[keyName].toLowerCase(),
                                            nameB = (b[keyName] == null) ? '' :  b[keyName].toLowerCase()
                                        if (scope.reverse) {
                                            if (nameA < nameB) //sort string ascending
                                                return -1
                                            if (nameA > nameB)
                                                return 1
                                            return 0 //default return value (no sorting)
                                        } else {
                                            if (nameA < nameB) //sort string ascending
                                                return 1
                                            if (nameA > nameB)
                                                return -1
                                            return 0 //default return value (no sorting)
                                        }
                                    })
                                }

                                if (keyName === 'tripdate' || keyName === 'submitteddate' || keyName === 'approveddate') {
                                    scope.model.mileageList.sort(function (a, b) {
                                        var dateA = (a[keyName] == null) ? '' :  new Date(a[keyName].toLowerCase()),
                                            dateB = (b[keyName] == null) ? '' :  new Date(b[keyName].toLowerCase())
                                        if (scope.reverse) {
                                            if (dateA < dateB)
                                                return -1
                                            if (dateA > dateB)
                                                return 1
                                            return 0
                                        }
                                        else {
                                            if (dateA < dateB)
                                                return 1
                                            if (dateA > dateB)
                                                return -1
                                            return 0
                                        }
                                    })
                                }

                                scope.showData = [];
                                scope.total = 0;
                                scope.totalvariablerate = 0;
                                var lstInd = scope.lastIndex;
                                let tl = 0;
                                let tv = 0;

                                for (var i = scope.lastIndex - scope.itemPerPage; i < lstInd; i++) {
                                    if (scope.model.mileageList[i]) {
                                        /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                        scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                        tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                                        tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                                        scope.showData.push(scope.model.mileageList[i])
                                    }
                                    scope.lastIndex = i + 1;
                                }

                                scope.total = tl.toFixed(2);
                                scope.totalvariablerate = tv.toFixed(2);
                            }

                            scope.callfn = function (flagstatus) {
                                if (flagstatus == "") {
                                    scope.init();
                                }
                                scope.totalMileage = 0;
                                scope.totalVariableAmount = 0;
                                scope.model.mileageList

                                let approvedcount = 0, flagcount = 0, approvedchkcount = 0, lockdatecount = 0;
                                let countapprovemil = 0;
                                if (scope.model.mileageList.length == 0) {
                                    scope.checkAllShowApprove = false;
                                    scope.checkAllShowFlag = false;
                                    scope.displayBtn = false;
                                    scope.displayDownloadBtn = false;
                                }
                                if (scope.showData.length > 0) {
                                    if (scope.model.mileageList.length > 8)
                                        scope.showmanagermodalsearchbar = true;
                                    else
                                        scope.showmanagermodalsearchbar = false;

                                    scope.displayDownloadBtn = true;
                                    scope.displayBtn = false;
                                    scope.totalMileage = 0;
                                    scope.totalVariableAmount = 0
                                    let tv = 0;
                                    let tm = 0;
                                    angular.forEach(scope.model.mileageList, function (item) {
                                        /*scope.totalMileage =  scope.totalMileage + parseFloat(item.mileage);*/
                                        /*scope.totalVariableAmount = scope.totalVariableAmount + parseFloat(item.variableamount);*/
                                        if (item.isLockDate === true) {
                                            lockdatecount++;
                                        }
                                        if (item.variableamount)
                                            tv = tv + parseFloat(item.variableamount);
                                        scope.totalVariableAmount = tv.toFixed(2);
                                        if (item.mileage)
                                            tm = tm + parseFloat(item.mileage);
                                        scope.totalMileage = tm.toFixed(2);

                                        if ((item.status != 'None' && item.status != '') && item.mileage >= 0) {

                                            approvedchkcount++;
                                            scope.checkAllShowApprove = true;
                                            scope.checkAllShowFlag = true;

                                            if (item.isSelected) {
                                                approvedcount++;
                                            } else if (item.isChecked) {
                                                flagcount++;
                                            }
                                        }
                                        if (item.status == 'Approved') {
                                            countapprovemil++;
                                        }
                                    });

                                    if ((scope.model.mileageList.length - countapprovemil) > 0) {
                                        scope.checkAllShowApprove = true;
                                    }
                                    else if ((scope.model.mileageList.length - countapprovemil) == 0) {
                                        scope.checkAllShowApprove = false;
                                    }
                                    if (approvedchkcount == 0 && approvedcount == 0) {
                                        scope.checkAllShowApprove = false;
                                    }
                                    else {
                                        if (approvedchkcount == approvedcount && lockdatecount >= 0) {
                                            scope.IsAllChecked = true;
                                            scope.IsAllCheckedFlag = false;
                                        }
                                    }
                                    if (approvedchkcount == 0 && flagcount == 0) {
                                        scope.checkAllShowFlag = false;
                                    }
                                    else {
                                        if (approvedchkcount == flagcount) {
                                            scope.IsAllCheckedFlag = true;
                                            scope.IsAllChecked = false;
                                        }
                                    }
                                    if (lockdatecount == 0) {
                                        scope.IsAllEnable = false;
                                        scope.checkAllShowApprove = true;
                                        scope.checkAllShowFlag = true;
                                        // if (approvedcount != 0 || flagcount != 0) {
                                        //     scope.displayBtn = true;
                                        // }
                                        // else {
                                        //     scope.displayBtn = false;
                                        // }
                                    }
                                    else {
                                        scope.displayBtn = false;
                                        scope.IsAllEnable = true;
                                        scope.checkAllShowApprove = true;
                                        scope.checkAllShowFlag = true;
                                    }
                                }
                                var checktrues = $filter("filter")(scope.showData, { isChecked: true });
                                var selectedtrues = $filter("filter")(scope.showData, { isSelected: true });
                                var _flagged = $filter("filter")(scope.showData, { isLockDate: false , isChecked: true});
                                var _approved = $filter("filter")(scope.showData, {isLockDate: false, isSelected:true});
                                var pendingReq = $filter("filter")(scope.showData, { isLockDate: false , isChecked: false , isSelected: false});
                                var mileageLen = scope.model.mileageList.length;
                                if (checktrues.length > 0 || selectedtrues.length > 0) {
                                    if (lockdatecount > 0) {
                                        if (lockdatecount === mileageLen) {
                                            scope.displayBtn = false;
                                        } else {
                                            if (_flagged.length > 0 || _approved.length > 0) {
                                                scope.displayBtn = true;
                                            } else {
                                                scope.displayBtn = false;
                                            }
                                        }
                                    } else {
                                        scope.displayBtn = true;
                                    }
                                }
                                if (flagstatus != '') {
                                    scope.modalformsg({ status: flagstatus });
                                }
                            }
                            scope.CheckUncheckAll = function () {
                                if (scope.IsAllChecked == true)
                                    scope.displayBtn = true;
                                else
                                    scope.displayBtn = false;

                                scope.countMileag = 0;
                                //scope.showData = [];
                                scope.selectedmileageidlist = [];
                                angular.forEach(scope.model.mileageList, function (item) {
                                    item.isSelected = scope.IsAllChecked;
                                    scope.countMileag = scope.countMileag + parseFloat(item.mileage);
                                    scope.selectedmileageidlist.push(item.id);
                                    if (item.isChecked) {
                                        item.isChecked = !item.isChecked;
                                        if (scope.IsAllCheckedFlag) {
                                            scope.IsAllCheckedFlag = false;
                                        }
                                    }
                                });
                                if (scope.currentPage == 1) {
                                    scope.showData = [];
                                    for (var i = 0; i < scope.itemPerPage; i++) {
                                        if (scope.model.mileageList[i]) {
                                            scope.showData.push(scope.model.mileageList[i])
                                        }
                                    }
                                }else{
                                    angular.forEach(scope.showData, function (item) {
                                        item.isSelected = scope.IsAllChecked;
                                        if (item.isChecked) {
                                            item.isChecked = !item.isChecked;
                                            if (scope.IsAllCheckedFlag) {
                                                scope.IsAllCheckedFlag = false;
                                            }
                                        }
                                    });
                                }
                                // for (var i = 0; i < scope.itemPerPage; i++) {
                                //     scope.currentPage = 1;
                                //     if (scope.model.mileageList[i]) {
                                //         scope.showData.push(scope.model.mileageList[i])
                                //     }
                                //     scope.lastIndex = i + 1;
                                // }
                            };

                            scope.CheckUncheckHeader = function (bool, milId) {
                                scope.selectedmonth = '';
                                scope.selecteddid = '';
                                scope.selectedyear = '';
                                scope.selectedmileageidlist = [];
                                scope.selectednotapprovemileageidlist = [];
                                scope.countMileag = 0;
                                var total = scope.model.mileageList.length;
                                var count = 0;
                                var perpagecount = 0;
                                var lockdatecount = 0;
                                angular.forEach(scope.showData, function (item) {
                                    if (item.isSelected) {
                                        perpagecount++;
                                        scope.countMileag = scope.countMileag + parseFloat(item.mileage);
                                        scope.selectedmileageidlist.push(item.id);
                                        scope.selectedmonth = scope.model.clickedMonth;
                                        scope.selectedyear = scope.model.clickedYear;
                                        scope.selecteddid = item.driverid;
                                        if (item.isChecked) {
                                            item.isChecked = !item.isChecked;
                                        }
                                    }
                                    if(item.isUnapprove){
                                        scope.selectednotapprovemileageidlist.push(item.id);
                                    }
                                    if(item.isLockDate){
                                        lockdatecount++;
                                    }
                                });

                                angular.forEach(scope.model.mileageList, function (em) {
                                    em.isSelected = (em.id == milId) ? bool : em.isSelected;
                                    em.isChecked = (em.id == milId && em.isSelected == true) ? false : em.isChecked;
                                    if (em.isSelected) {
                                            count++;
                                    }
                                });
                    
                                if (total == perpagecount && (total != 0 && perpagecount != 0)) {
                                    scope.model.mileageList = scope.showData;
                                    scope.IsAllChecked = true;
                                    scope.IsAllCheckedFlag = false;
                                }
                                else {
                                    if (total == count && (total != 0 && count != 0)) {
                                        scope.IsAllChecked = true;
                                        scope.IsAllCheckedFlag = false;
                                    } else {
                                        scope.IsAllChecked = false;
                                        scope.IsAllCheckedFlag = false;
                                    }
                                }

                                var trues = $filter("filter")(scope.showData, { isChecked: true });
                                var pReq = $filter("filter")(scope.showData, { isLockDate: false, isChecked: true});
                                var pSelect = $filter("filter")(scope.showData, {  isLockDate: false, isSelected: true});
                                scope.chkselectcount = trues.length;
                                if (perpagecount == 0 && scope.chkselectcount == 0){
                                    scope.displayBtn = false;
                                }
                                else{
                                    if(lockdatecount > 0){
                                        if(pSelect.length > 0 || pReq.length > 0){
                                            scope.displayBtn = true;
                                        }else{
                                            scope.displayBtn = false;
                                        }
                                    }else{
                                        scope.displayBtn = true;
                                    }
                                }
                            }

                            scope.CheckUncheckAllForFlag = function () {
                                scope.selectedrejectedmileageidlist = [];
                                scope.selectednotapprovemileageidlist = [];
                                scope.selectedmonth = '';
                               // scope.showData = [];
                                if (scope.IsAllCheckedFlag == true)
                                    scope.displayBtn = true;
                                else
                                    scope.displayBtn = false;

                                angular.forEach(scope.model.mileageList, function (item) {
                                    if (item.isChecked) {
                                        scope.selectedmonth = scope.model.clickedMonth;
                                    }
                                    item.isChecked = scope.IsAllCheckedFlag;
                                    scope.selectedrejectedmileageidlist.push(item.id);
                                    if (item.isSelected) {
                                        item.isSelected = !item.isSelected;
                                        if (scope.IsAllChecked) {
                                            scope.IsAllChecked = false;
                                        }
                                    }
                                });
                                if (scope.currentPage == 1) {
                                    scope.showData = [];
                                    for (var i = 0; i < scope.itemPerPage; i++) {
                                        if (scope.model.mileageList[i]) {
                                            scope.showData.push(scope.model.mileageList[i])
                                        }
                                    }
                                }else{
                                    angular.forEach(scope.showData, function (item) {
                                        item.isChecked = scope.IsAllCheckedFlag;
                                        if (item.isSelected) {
                                            item.isSelected = !item.isSelected;
                                            if (scope.IsAllChecked) {
                                                scope.IsAllChecked = false;
                                            }
                                        }
                                    });
                                }
                                // for (var i = 0; i < scope.itemPerPage; i++) {
                                //     scope.currentPage = 1;
                                //     if (scope.model.mileageList[i]) {
                                //         scope.showData.push(scope.model.mileageList[i])
                                //     }
                                //     scope.lastIndex = i + 1;
                                // }
                            };

                            scope.CheckUncheckHeaderForFlag = function (boolval, mId) {
                                scope.selectedmonth = '';
                                scope.selecteddid = '';
                                scope.selectedyear = '';
                                scope.selectedrejectedmileageidlist = [];
                                scope.selectednotapprovemileageidlist = [];
                                var total = scope.model.mileageList.length;
                                var count = 0;
                                var perpagecount = 0;
                                var lockdatecount = 0; 
                                angular.forEach(scope.showData, function (item) {
                                    if (item.isChecked) {
                                        perpagecount++;
                                        scope.selectedrejectedmileageidlist.push(item.mileage);
                                        scope.selectedmonth = scope.model.clickedMonth;
                                        scope.selectedyear = scope.model.clickedYear;
                                        scope.selecteddid = item.driverid;
                                        if (item.isSelected) {
                                            item.isSelected = !item.isSelected;
                                        }
                                    }
                                    if(item.isUnapprove){
                                        perpagecount++;
                                        scope.selectednotapprovemileageidlist.push(item.mileage);
                                    }
                                    if(item.isLockDate){
                                        lockdatecount++;
                                    }
                                });

                                angular.forEach(scope.model.mileageList, function (em) {
                                    em.isChecked = (em.id == mId) ? boolval : em.isChecked;
                                    em.isSelected = (em.id == mId && em.isSelected === true) ? false : em.isSelected;
                                    if (em.isChecked) {
                                            count++;
                                    }
                                });
                                 
                                if (total == perpagecount && (total != 0 && perpagecount != 0)) {
                                    scope.model.mileageList = scope.showData;
                                    scope.IsAllCheckedFlag = true;
                                    scope.IsAllChecked = false;
                                }
                                else {
                                    if (total == count && (total != 0 && count != 0)) {
                                        scope.IsAllCheckedFlag = true;
                                        scope.IsAllChecked = false;
                                    } else {
                                        scope.IsAllCheckedFlag = false;
                                        scope.IsAllChecked = false;
                                    }
                                }

                                var trues = $filter("filter")(scope.showData, { isSelected: true });
                                var pReq = $filter("filter")(scope.showData, { isLockDate: false, isChecked: true});
                                var pSelect = $filter("filter")(scope.showData, {  isLockDate: false, isSelected: true});
                                scope.chkselectcount = trues.length;

                                if (perpagecount == 0 && scope.chkselectcount == 0){
                                    scope.displayBtn = false;
                                }
                                else{
                                    if(lockdatecount > 0){
                                        if(pSelect.length > 0 || pReq.length > 0){
                                            scope.displayBtn = true;
                                        }else{
                                            scope.displayBtn = false;
                                        }
                                    }else{
                                        scope.displayBtn = true;
                                    }
                                }
                            }
                            
                            scope.refreshpage = function (mileages) {
                                scope.someCtrlFn({ updatedmileagelist: mileages });
                            }

                            scope.updatePagination = function () {

                                if (scope.search.length > 0) {
                                    scope.itemPerPage = 8;

                                    var filteredArray = scope.model.mileageList.filter(function (number) {

                                        if (number.originname != '' && number.originname != null && number.originname != undefined && number.destinationname != '' && number.destinationname != null && number.destinationname != undefined) {

                                            return number.originname.toLowerCase().indexOf(scope.search.toLowerCase()) !== -1 || number.destinationname.toLowerCase().indexOf(scope.search.toLowerCase()) !== -1;
                                        }
                                        return number.originname, number.destinationname;
                                    });

                                    scope.searchedArray = filteredArray;
                                    scope.showData = [];
                                    scope.total = 0.0;
                                    scope.totalvariablerate = 0.0;
                                    scope.maxPage = 0;
                                    scope.totalRecords = filteredArray.length;

                                    let tl = 0;
                                    let tv = 0;
                                    scope.maxPage = Math.ceil(scope.totalRecords / scope.itemPerPage)
                                    scope.totalRecords
                                    for (var i = 0; i < scope.itemPerPage; i++) {
                                        scope.currentPage = 1;
                                        if (filteredArray[i]) {

                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);*/
                                            tl = tl + parseFloat(filteredArray[i].mileage);
                                            tv = tv + parseFloat(filteredArray[i].variableamount);
                                            /*scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            scope.showData.push(filteredArray[i])
                                        }

                                        scope.lastIndex = i + 1;
                                    }
                                    if (scope.showData.length == 0) {
                                        scope.displayDownloadBtn = false;
                                    }
                                    else {
                                        scope.displayDownloadBtn = true;
                                    }
                                    scope.total = tl.toFixed(2);
                                    scope.totalvariablerate = tv.toFixed(2);


                                } else {
                                    scope.itemPerPage = 8;
                                    scope.init();
                                    scope.searchedArray.length = 0;
                                    scope.displayDownloadBtn = true;
                                }


                            }
                            element.on('shown.bs.modal', function () {
                                scope.$apply(function () {
                                    scope.model.visible = true;
                                });
                            });
                            element.on('hidden.bs.modal', function () {
                                scope.$apply(function () {
                                    scope.model.visible = false;
                                    scope.search = "";
                                    scope.searchedArray.length = 0;
                                });
                            });

                            $('input[type=search]').on('search', function () {
                                scope.search = "";
                                scope.searchedArray.length = 0;
                            });

                            scope.onClick = function () {
                                $('#spinner').show();
                                scope.updateformileagelist = [];

                                var arr = [];
                                if (scope.IsAllChecked || scope.IsAllCheckedFlag) {
                                    arr = scope.model.mileageList;
                                } else {
                                    arr = scope.showData;
                                }
                                angular.forEach(arr, function (item) {
                                    if (item.isChecked == true || item.isSelected == true) {
                                        item.isUnapprove = false;
                                        scope.updateformileagelist.push(item);
                                    }
                                    if(item.isChecked == false && item.isSelected == false) {
                                        item.isUnapprove = true;
                                        scope.updateformileagelist.push(item);
                                    }
                                });
                                var truecheck = $filter("filter")(arr, { isChecked: true });
                                scope.chkcount = truecheck.length;
                                var trueselect = $filter("filter")(arr, { isSelected: true });
                                scope.selectcount = trueselect.length;
                                var trueunapprove = $filter("filter")(arr, { isUnapprove: true });
                                Visualforce.remoting.Manager.invokeAction(
                                    '{!$RemoteAction.DriverDashboardFromAdminManager.approveMileages}', JSON.stringify(truecheck), JSON.stringify(trueselect), JSON.stringify(trueunapprove),scope.model.name, scope.model.emailofemployee,
                                    function (result, event) {
                                        if (event.status && result == 'success') {
                                            /*let resultArray = result;
                                            scope.model.mileageList = JSON.parse(resultArray);
                                            */
                                            var tempArray = JSON.parse(JSON.stringify(scope.model.mileageList));
                                            tempArray.forEach(function (item) {
                                                scope.updateformileagelist.forEach(function (ui) {
                                                    if (item.id == ui.id) {
                                                        if ((item.isChecked != ui.isChecked) || ui.isChecked == true) {
                                                            if (ui.isChecked) {
                                                                item.status = 'Rejected'
                                                                item.approveddate = '';
                                                                item.isChecked = true;
                                                                item.isSelected = false;
                                                            }
                                                        }
                                                        if ((item.isSelected != ui.isSelected) || (item.isSelected == true && ui.isSelected == true)) {
                                                            if (ui.isSelected) {

                                                                item.isChecked = false;
                                                                item.isSelected = true;
                                                                item.status = 'Approved'
                                                                var dt = $filter('date')(new Date(), "MM/dd/yy");
                                                                item.approveddate = dt;
                                                            }
                                                        }
                                                        if(ui.isUnapprove == true){
                                                            // console.log("Is not approve")
                                                                item.isChecked = false;
                                                                item.isSelected = false;
                                                                item.status = 'Not Approved Yet' 
                                                        }
                                                    }
                                                })
                                            })
                                            scope.model.mileageList = JSON.parse(JSON.stringify(tempArray));
                                            var flagstatus = '';
                                            if (scope.selectedmileageidlist.length == 0 && scope.selectedrejectedmileageidlist.length == 0 && scope.selectednotapprovemileageidlist.length == 0) {
                                                $('#spinner').hide();
                                                toastr.success('This Mileage has already approved/flagged.');
                                            }
                                           
                                            if (scope.selectcount > 0 && scope.selectedmileageidlist.length > 0) {
                                                flagstatus = flagstatus + 'Approved';
                                                scope.refreshpage(scope.model.mileageList);
                                                scope.selectedmileageidlist = [];
                                            }
                                            if (scope.chkcount > 0 && scope.selectedrejectedmileageidlist.length > 0) {
                                                flagstatus = flagstatus + 'Rejected';
                                                scope.refreshpage(scope.model.mileageList);
                                                scope.selectedrejectedmileageidlist = [];
                                            }
                                            scope.callfn(flagstatus);
                                        }
                                        else {
                                            $('#spinner').hide();
                                            toastr.error('Something went wrong');
                                        }
                                        scope.$apply();
                                    });

                            };
                        },
                        template: '<div class="modal fade driver-dashboard-monthrecord show in" tabindex="-1" role="dialog"aria-labelledby="driver-dashboard-monthrecord" id="driver-dashboard-monthrecord"><div class="modal-dialog modal-xl modal-dialog-centered"><div class="modal-content rounded-0"><button type="button" ng-click="cancel()" class="close popup-close-btn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><div class="modal-body"><h4 ng-model="month">{{model.clickedMonth}}</h4><div class="modal-divider"></div><div class="table-responsive"><div id="example_filter" class="dataTables_filter pull-right d-block" ng-show="showmanagermodalsearchbar"><div class="input-group w-85" ><i id="filtericon" class="fa fa-search" ng-if="search.length===0"></i><input class="form-control py-2 border-right-0 border" type="search" ng-model="search" ng-change="updatePagination()" placeholder="Search..." aria-controls="example" id="example-search-input" /></div></div><table id="driver-dashbord-month-model" class="table table-striped dt-responsive nowrap no-footer dataTable" cellspacing="0" width="100%"><thead><tr><th ng-click="sort(\'tripdate\')">Trip Date<span ng-show="sortKey == \'tripdate\'" class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}"></span></th><th ng-click="sort(\'originname\')">Origin<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'originname\'"></span></th><th ng-click="sort(\'destinationname\')">Dest.<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'destinationname\'"></span></th><th ng-click="sort(\'submitteddate\')">Submitted<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'submitteddate\'"></span></th><th ng-click="sort(\'approveddate\')">Approved<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'approveddate\'"></span></th><th ng-click="sort(\'mileage\')">Mileage<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'mileage\'"></span></th><th ng-if="model.modalType === \'Monthly\' " ng-click="sort(\'variableamount\')">Variable Amount<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'variableamount\'"></span></th><th ng-if="model.modalType === \'Biweekly\' " ng-click="sort(\'variableamount\')">Variable<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'variableamount\'"></span></th><th ng-if="model.modalType === \'Biweekly\' " ng-click="sort(\'tripActivity\')">Trip Type<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'tripActivity\'"></span></th><th><button class="btn btn-primary pull-right1">Approve <input type="checkbox" ng-click="CheckUncheckAll()" ng-model="IsAllChecked" ng-show="checkAllShowApprove" ng-disabled="IsAllEnable"/></button></th><th><button class="btn btn-third pull-right1">Flag </span><input type="checkbox" ng-show="checkAllShowFlag" ng-click="CheckUncheckAllForFlag()" ng-model="IsAllCheckedFlag" ng-disabled="IsAllEnable"></button></th></tr></thead><tbody class="table-a-link"><tr ng-repeat="mil in showData |itemsPerPage:itemPerPage|filter:search" current-page:"currentPage"><td ng-model="mil.tripdate">{{ mil.tripdate}}</td><td ng-model="mil.originname" ng-if="mil.originname != \'null\' ">{{ mil.originname}}</td><td ng-model="mil.originname" ng-if="mil.originname === \'null\' "></td><td ng-model="mil.destinationname" ng-if="mil.destinationname != \'null\' ">{{ mil.destinationname }}</td><td ng-model="mil.destinationname" ng-if="mil.destinationname === \'null\' "></td><td ng-model="mil.submitteddate">{{ mil.submitteddate }}</td><td ng-model="mil.approveddate">{{mil.approveddate }}</td><td ng-model="mil.mileage">{{ mil.mileage }}</td><td ng-model="mil.variableamount" id="modalvariableid">${{ mil.variableamount }}</td><td ng-if="model.modalType === \'Biweekly\' " ng-model="mil.tripActivity" id="tripActivityid">{{ mil.tripActivity }}</td><td ng-model="mil.status"><div ng-model="mil.status" ng-if="mil.status !=\'Approved\' && mil.mileage > \'0\'"></div><div class="pull-right1 mr-15" ng-if="mil.mileage > \'0\'"><input type="checkbox" ng-model="mil.isSelected" class="myteamcheck" ng-click="CheckUncheckHeader(mil.isSelected, mil.id);" ng-disabled="mil.isLockDate"></div></td><td ng-model="mil.status"><div ng-model="mil.status" ng-if="mil.mileage > \'0\'"></div><div class="pull-right1 mr-15" ng-if="mil.mileage > \'0\'"><input type="checkbox" ng-model="mil.isChecked" class="flagcheck" ng-click="CheckUncheckHeaderForFlag(mil.isChecked, mil.id);" ng-disabled="mil.isLockDate"></div></td></tr><tr ng-if="showData.length==0"><td ng-if="model.modalType === \'Monthly\' " colspan="9" class="table-nodata">No Records Available</td><td ng-if="model.modalType === \'Biweekly\' " colspan="10" class="table-nodata">No Records Available</td></tr></tbody><tfoot ng-if="displayDownloadBtn"><tr><th scope="row">Total</th><th colspan="4"> </th><th>{{total | number:2 }} / {{totalMileage | number:2 }}</th><th>${{totalvariablerate}} / ${{totalVariableAmount}}</th><th ng-if="model.modalType === \'Monthly\' " colspan="2"></th><th ng-if="model.modalType === \'Biweekly\' " colspan="3"></th></tr></tfoot></table></div></div><div class="modal-footer"><div class="col-md-6" ng-if="displayDownloadBtn">Page {{currentPage}} of {{maxPage}} </div><div class="col-md-6"><ul ng-if="displayDownloadBtn" class="pagination float-right paginationformodal"><li class="page-item " ng-class="{\'disable-pagination\':currentPage === 1}"><a class="page-link" ng-click="previous()">Previous</a></li><li class="page-item"><a class="page-link" >{{currentPage}}</a></li><li class="page-item" ng-class="{\'disable-pagination\':currentPage === maxPage}"><a class="page-link" ng-click="next()" href="#">Next</a></li></ul><div class="paginationformodaldownloadbutton"><div excel-export="true" export-data="data()" ng-show="displayDownloadBtn" file-name="{{model.fileName}}"/><button class="btn btn-secondary float-right" ng-click="onClick();" ng-show="displayBtn">Submit</button></div></div></div></div></div></div><div>'
                    };
                }
            ]);

            app.directive('excelExport', function () {
                return {
                    restrict: 'A',
                    scope: {
                        fileName: "@",
                        data: "&exportData"
                    },
                    replace: true,
                    template: '<button class="btn btn-primary float-right mr-11" ng-click="download()">Download <i class="fa fa-download"></i></button>',
                    link: function (scope, element) {

                        scope.download = function () {

                            function datenum(v, date1904) {
                                if (date1904) v += 1462;
                                var epoch = Date.parse(v);
                                return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);
                            };

                            function getSheet(data, opts) {
                                var ws = {};
                                var range = { s: { c: 10000000, r: 10000000 }, e: { c: 0, r: 0 } };
                                for (var R = 0; R != data.length; ++R) {
                                    for (var C = 0; C != data[R].length; ++C) {
                                        if (range.s.r > R) range.s.r = R;
                                        if (range.s.c > C) range.s.c = C;
                                        if (range.e.r < R) range.e.r = R;
                                        if (range.e.c < C) range.e.c = C;
                                        var cell = { v: data[R][C] };
                                        if (cell.v == null) continue;
                                        var cell_ref = XLSX.utils.encode_cell({ c: C, r: R });

                                        if (typeof cell.v === 'number') cell.t = 'n';
                                        else if (typeof cell.v === 'boolean') cell.t = 'b';
                                        else if (cell.v instanceof Date) {
                                            cell.t = 'n'; cell.z = XLSX.SSF._table[14];
                                            cell.v = datenum(cell.v);
                                        }
                                        else cell.t = 's';

                                        ws[cell_ref] = cell;
                                    }
                                }
                                if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);
                                return ws;
                            };

                            function Workbook() {
                                if (!(this instanceof Workbook)) return new Workbook();
                                this.SheetNames = [];
                                this.Sheets = {};
                            }

                            var wb = new Workbook(), ws = getSheet(scope.data());

                            /* add worksheet to workbook */
                            wb.SheetNames.push(scope.fileName);
                            wb.Sheets[scope.fileName] = ws;

                            var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'binary' });
                            function s2ab(s) {
                                var buf = new ArrayBuffer(s.length);
                                var view = new Uint8Array(buf);
                                for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
                                return buf;
                            }
                            saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), scope.fileName + '.xlsx');
                        };
                    }
                };
            });
            app.controller('drivermanagerDashboardController', ['$scope', '$filter', '$modal',
                function ($scope, $filter, $modal) {
                    var url_string = $(location).attr("href");
                    var url = new URL(url_string);
                    var daymonth = new Array();
                    daymonth[0] = "January";
                    daymonth[1] = "February";
                    daymonth[2] = "March";
                    daymonth[3] = "April";
                    daymonth[4] = "May";
                    daymonth[5] = "June";
                    daymonth[6] = "July";
                    daymonth[7] = "August";
                    daymonth[8] = "September";
                    daymonth[9] = "October";
                    daymonth[10] = "November";
                    daymonth[11] = "December";


                    let currDate = new Date();
                    let compareDate = currDate.getDate();
                    $scope.preYear = (currDate.getFullYear() - 1).toString();
                    $scope.syncMonth = (currDate.getMonth() > 0) ? (compareDate >= 18) ? (daymonth[currDate.getMonth()]) : (daymonth[currDate.getMonth() - 1]) : (compareDate >= 18) ? (daymonth[currDate.getMonth()]) : (daymonth[11]);
                    console.log($scope.syncMonth);
                    $scope.driverType = "";
                    $scope.clickName = "Back";
                    $scope.adminid = url.searchParams.get("adminid");
                    $scope.accid = url.searchParams.get("accid");
                    $scope.id = url.searchParams.get("id");
                    $scope.showteam = url.searchParams.get("showteam");
                    $scope.admindriver = false;
                    $scope.syncHeader = false;
                    $scope.isWorking = false;
                    $scope.syncMileageLabel = '{!($Label.unapproveMileageMessage)}';
                    $scope.approvalTopMsg = '{!($Label.mileageApprovalTopMsg)}';
                    $scope.approvalBottomMsg = '{!($Label.mileageApprovalBottomMsg)}';
                    $scope.PLMarketing = '{!($Label.PL_Marketing)}';
                    $scope.emailofemployee = '{!emailofEmployee}';
                    $scope.SPBSAcc = '{!($Label.SPBS_Account)}';
                    $scope.EngGypAcc = '{!($Label.NewEnglandGypsum)}';
                    $scope.ERMIAcc = '{!($Label.ERMI_Account)}';
                    $scope.adminname = '{!nameofEmployee}';
                    $scope.WeiserAccID = '{!($Label.Weiser_Account)}';
                    $scope.admindriver = url.searchParams.get("admindriver");
                    $scope.modalType = "Monthly";
                    $scope.showCarousel = false;
                    if ($scope.admindriver == undefined || $scope.admindriver == '') {
                        $scope.admindriver = false;
                    }
                    $('#processSpinner').hide();
                    // var d = new Date();
                    // var n = d.getFullYear();
                    // var m = n-1;
                    $scope.years = {!Last2Years
                };
            $scope.years.sort(function (a, b) {

                var numA = parseInt(a),
                    numB = parseInt(b);

                if (numA < numB) {
                    return 1;
                } else if (numA > numB) {
                    return -1;
                } else {
                    return 0; //default return value (no sorting)
                }
            })

            $scope.lastYear = _.first($scope.years);
            $scope.reimbursementDialog = new MileagesofReimbursements(false);
            $scope.FromDate = $filter('date')(new Date(), "MMddyyyyHHmmss");
            $scope.IsAllChecked = false;
            $scope.model = { isChecked: false };
            $scope.displayTeamRecordBtnUnapprove = true;
            $scope.displayTeamRecordBtn = false;
            $scope.search = "";
            $('#spinner').hide();

            $scope.tabs = [{ active: true }, { active: false }, { active: false }, { active: false }];
            this.setOptions = function () {
                toastr.options.positionClass = "toast-bottom-right";
                toastr.options.closeButton = true;
                toastr.options.progressBar = true;
            };
            $scope.importedFileErrors = {};
            $scope.waiting = false;
            this.setOptions();
            this.clear = function () {
                toastr.clear();
            };

            function escapeSpecialChars(str){
                return str
                .replace(/\\'/g, "\'")
                .replace(/\\&#39;/g, "\'")
                .replace(/(&quot\;)/g,"\"");
            }

            $scope.packetandMeeting = function () {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.getPacketandMeeting}', $scope.id,
                    function (result, event) {
                        if (event.status && result != null && result != '') {
                            $scope.pacektstatus = [];
                            $scope.pacektstatus = JSON.parse(result);
                            $scope.pacekt = $scope.pacektstatus[0].Packet__c;
                            $scope.meeting = $scope.pacektstatus[0].Meeting__c;
                            if ($scope.pacekt == 'Sent to Driver') {
                                if (document.getElementById("downloadbtn")) {
                                    document.getElementById("downloadbtn").style.visibility = "hidden";
                                }
                                angular.element(document.querySelector("#beinggenratedsignature")).addClass(" active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforadminsignature")).removeClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("active");
                                angular.element(document.querySelector("#beinggenratedsignature")).addClass("btn.btn-secondary.pull-right");
                            }
                            // else if ($scope.pacekt == 'Sent for Signature') {
                            //     if (document.getElementById("downloadbtn")) {
                            //         document.getElementById("downloadbtn").style.visibility = "hidden";
                            //     }
                            //     angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                            //     angular.element(document.querySelector("#sentforsignature")).addClass("active");
                            //     angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                            //     angular.element(document.querySelector("#waitingforadminsignature")).removeClass("active");
                            //     angular.element(document.querySelector("#completesignature")).removeClass("active");
                            //     angular.element(document.querySelector("#sentforsignature")).addClass("btn.btn-secondary.pull-right");

                            // }
                            // else if ($scope.pacekt == 'Waiting for Signature') {
                            //     document.getElementById("downloadbtn").style.visibility = "hidden";
                            //     angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                            //     angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                            //     angular.element(document.querySelector("#waitingforsignature")).addClass(" active");
                            //     angular.element(document.querySelector("#completesignature")).removeClass("active");
                            // }
                            else if ($scope.pacekt == 'Driver Signed') {
                                if (document.getElementById("downloadbtn")) {
                                    document.getElementById("downloadbtn").style.visibility = "hidden";
                                }
                                angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforsignature")).addClass(" active");
                                angular.element(document.querySelector("#waitingforadminsignature")).removeClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("active");
                            }
                            else if ($scope.pacekt == 'Admin Signed') {
                                if(document.getElementById("downloadbtn")){
                                    document.getElementById("downloadbtn").style.visibility = "hidden";
                                }
                                angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforadminsignature")).addClass(" active");
                                angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("active");
                            }
                            else if ($scope.pacekt == 'Completed') {
                                angular.element(document.querySelector("#beinggenratedsignature")).removeClass("active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                               angular.element(document.querySelector("#waitingforadminsignature")).removeClass("active");
                                angular.element(document.querySelector("#completesignature")).addClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("btn-secondary");
                            }
                            else {
                                angular.element(document.querySelector("#beinggenratedsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#sentforsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#waitingforsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#waitingforadminsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#completesignature")).addClass("blank-stepper");
                            }

                            if ($scope.meeting == 'Scheduled') {
                                angular.element(document.querySelector("#scheduledsignature")).addClass(" active");
                                angular.element(document.querySelector("#sentsignature")).removeClass("active");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");
                                angular.element(document.querySelector("#didnotattendsignature")).removeClass("active");
                                angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                            }
                            else if ($scope.meeting == 'Sent') {
                                angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                angular.element(document.querySelector("#sentsignature")).addClass(" active");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");
                                angular.element(document.querySelector("#didnotattendsignature")).removeClass("active");
                                angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                            }
                            else if ($scope.meeting == 'Attended') {
                                angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                angular.element(document.querySelector("#sentsignature")).removeClass("active");
                                angular.element(document.querySelector("#completedsignature")).addClass(" active");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed"); //mobio
                                angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend-blank"); //mobio
                                angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                            }
                            else if ($scope.meeting == 'Did Not Attend') {
                                angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                angular.element(document.querySelector("#scheduledsignature")).addClass("schedule");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");//mobio:to hide Completed div
                                angular.element(document.querySelector("#span-didnotattend")).addClass("span-did-not-attend");//mobio:to color specific span red
                                angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend");//mobio:to make "Did Not Attended" colored red
                            } else {
                                angular.element(document.querySelector("#scheduledsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#sentsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#completedsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed");
                                angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend");//mobio
                                angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend-blank");
                            }
                        }
                    }, { escape: false }
                );
            }
            $scope.packetandMeeting();

            $scope.sortKey = 'intmonth';    //set the sortKey to the param passed   
            $scope.reverse = true;
            $scope.sort = function (keyname) {
                $scope.reverse = ($scope.sortKey === keyname) ? !$scope.reverse : false;
                $scope.sortKey = keyname;
            }
            $scope.sortKey1 = 'intmonth';   //set the sortKey to the param passed   
            $scope.reverse1 = true;
            $scope.sort1 = function (keyname) {
                $scope.reverse1 = ($scope.sortKey1 === keyname) ? !$scope.reverse1 : false;
                $scope.sortKey1 = keyname;
            }
            $scope.approveFunction = function () {
                var count = 0;
                $scope.checkAllShowForMyTeam = false;
                angular.forEach($scope.mileages, function (item, key) {
                    if (item.totalReimbursements > '0.00' && item.status != 'Approved') {
                        count++;
                    }
                });
                if (count > 0) {
                    $scope.checkAllShowForMyTeam = true;
                }
            }
            $scope.approveBiweeklyFunction = function () {
                var Bicount = 0;
                $scope.checkAllShowForBiweekly = false;
                angular.forEach($scope.reimbMileages, function (item, key) {
                    if (item.checkPendingTrip === true && item.totalPending > '0.00') {
                        Bicount++;
                    }
                });
                if (Bicount > 0) {
                    $scope.checkAllShowForBiweekly = true;
                }
            }
            $scope.myTeamCheckUncheckAll = function () {
                var flag = false;
                if ($scope.IsAllChecked == true) {
                    $scope.displayTeamRecordBtn = true;
                    flag = true;
                }
                else {
                    $scope.displayTeamRecordBtn = false;
                    flag = false;
                }
                if ($scope.IsAllCheckedForUnapprove == true) {
                    $scope.displayTeamRecordBtnUnapprove = true;
                    flag = true;
                }
                else {
                    $scope.displayTeamRecordBtnUnapprove = false;
                    flag = false;
                }
                angular.forEach($scope.mileages, function (item) {
                    item.isSelected = flag;
                });
            }
            $scope.fetchEmpReimList = function (result) {
                $scope.empReimList = result;
                if ($scope.empReimList == 0) {
                    $scope.showunapprove = false;
                    $scope.$apply(function () {
                        $scope.unapprovemileage = 0;
                        $scope.showunapprove = true;
                    });
                }
                else {
                    var count = 0;
                    $scope.showunapprove = false;
                    angular.forEach($scope.empReimList, function (item, key) {
                        count = count + item.Total_Pending__c;
                    });
                    $scope.$apply(function () {
                        $scope.unapprovemileage = count;
                        $scope.showunapprove = true;
                    });
                }
            }

            $scope.syncMileages = function (month, fuel, maintainsAndTyres, empReID, mpg) {
                $('#processSpinner').show();
                document.getElementById('messageContainer').classList.add('left-style');
                document.getElementById('processMessage').innerHTML = 'Reimbursement status is updating to pending and deleting unapprove mileages.'
                $scope.getMonth = month;
                $scope.getYear = $scope.selectedYear;
                $scope.getFuel = fuel;
                $scope.getmaintTyre = maintainsAndTyres;
                $scope.empReID = empReID;
                $scope.mpg = mpg;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.UpdateReimbursementStatus}', $scope.empReID,
                    function (result, event) {
                        if (event.status) {
                            document.getElementById('messageContainer').classList.remove('left-style');
                            document.getElementById('processMessage').innerHTML = 'Synching mileage....'
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.TripCallout}', $scope.id, $scope.getMonth, $scope.getYear, $scope.getFuel, $scope.getmaintTyre, $scope.empReID, $scope.mpg, 'U',
                                function (result, event) {
                                    if (event.status) {
                                        document.getElementById('processMessage').innerHTML = 'Synching mileage....'
                                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.TripCallout}', $scope.id, $scope.getMonth, $scope.getYear, $scope.getFuel, $scope.getmaintTyre, $scope.empReID, $scope.mpg, 'S',
                                            function (result, event) {
                                                if (event.status) {
                                                    $scope.$modalInstance = $modal.open({
                                                        template: '<button type="button" ng-click="cancel()" class="close popup-close-btn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="modal-body text-center"><div class="checkhead"><h4>{{syncMileageLabel}}</h4></div><div class="check-in-info"><p></p></div><div class="check-submit"><button type="button" ng-click="okforSync()" class="btn btn-primary" data-dismiss="modal">OK</button></div></div>',

                                                        scope: $scope
                                                    });
                                                    $('#processSpinner').hide();
                                                }
                                                else {
                                                    toastr.error('Something went wrong');
                                                }
                                            });
                                    }
                                    else {
                                        toastr.error('Something went wrong');
                                    }
                                }, { escape: false }
                            );
                        }
                        else {
                            toastr.error('Something went wrong');
                        }
                    }, { escape: false }
                );
            }

            $scope.okforSync = function () {
                $scope.$modalInstance.close();
                location.reload();
            }
            $scope.timeConversion = function (number) {
                var time;
                var hours = Math.floor(number / 60);
                var min = number % 60;
                hours = hours < 10 ? "0" + hours : hours;
                min = min < 10 ? "0" + min : min;
                time = hours + ':' + min;
                //var time = (hours < 12) ? (hours-12 + ':' + min +' PM') : (hours + ':' + min +' AM');
                return time;
            }

            //Summary Report For Monthly Reimbursement
            $scope.exportToMonthSummary = function () {
                    var summaryFile;
                    $scope.excelSummary = [];
                    $scope.excelSummary.push(["Month", "Fuel Rate", "Total Mileage", "Approved Mileage","Fixed Amount", "Variable Amount", "Total Reimbursement"]);
                    angular.forEach($scope.mileages, function (item) {
                        let variableFixed = item.varibleAndFixedReimbursements;
                        let fixedAndVariable = variableFixed.split(/[\s$+ ]+/);
                        $scope.excelSummary.push([item.month, item.fuel, item.mileage, item.approveMileage, fixedAndVariable[1], fixedAndVariable[2], item.totalReimbursements]);
                    })

                    summaryFile = $scope.adminname + '\'s  Summary Report';
                    $scope.downloadToExcel($scope.excelSummary, summaryFile);
            }
              //Summary Report For Reimbursement
              $scope.exportToSummary = function () {
                    var summaryFile;
                    $scope.excelSummary = [];
                    $scope.excelSummary.push(["Start Date", "End Date", "Gas Prices", "Mileage", "Variable Rate", "Variable Amount", "Fixed Amount", "Total Reimbursement"]);
                    angular.forEach($scope.reimbMileages, function (item) {
                        $scope.excelSummary.push([$filter('date')(item.startDate, 'MM/dd/yyyy'), $filter('date')(item.endDate, 'MM/dd/yyyy'), item.fuel, item.mileage, item.variableRate, item.variable, item.fixedAmount, item.totalReim]);
                    })

                    summaryFile = $scope.adminname + '\'s  Summary Report';
                    $scope.downloadToExcel($scope.excelSummary, summaryFile);
            }

            // Detail Report For Reimbursement

            function compareArray(a, b) {
                var dateA = (a.startDate == null) ? '' : new Date(a.startDate.toLowerCase()),
                        dateB = (b.startDate == null) ? '' : new Date(b.startDate.toLowerCase())
                    if (dateA < dateB) {
                        return -1;
                    }
                    if (dateA > dateB) {
                        return 1;
                    }
                    return 0;
            }
            $scope.exportToDetail = function (){
                var lenOfReimb, stDate, enDate, detailFileName;
                $scope.exportReimDetailList = [];
                $scope.reimbMileages.sort(compareArray);
                lenghtOfReimb = $scope.reimbMileages.length;
                stDate = $scope.reimbMileages[0].startDate;
                enDate = $scope.reimbMileages[lenghtOfReimb - 1].endDate;
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardFromAdminManager.getAllMileages}', stDate,  enDate, $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                let escapeChar = escapeSpecialChars(result[0]);
                                var biDetailList = JSON.parse(escapeChar);
                                if (biDetailList.length > 0) {
                                    $scope.exportReimDetailList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable", "Fixed Amount", "Trip Type", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                    angular.forEach(biDetailList, function (item, key) {
                                        $scope.exportReimDetailList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.halfFixedAmount, item.tripActivity, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                    });
                                    detailFileName = $scope.adminname + '\'s Detail Report';
                                    $scope.downloadToExcel($scope.exportReimDetailList, detailFileName);
                                }else{
                                    toastr.error("No Mileages Found");
                                }
                              
                            }
                            else {
                                toastr.error(result);
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }
             // Biweekly modal 
            $scope.openbiweeklymodal = function (stDate, enDate, biweekId) {
                $('#spinner').show();
                let stArr = stDate.split('-');
                let enArr = enDate.split('-');
                $scope.modalType = 'Biweekly';
                $scope.emailofemployee = '{!emailofEmployee}';
                $scope.nameofEmployee = '{!nameofEmployee}';
                $scope.bStartDate = stArr[1] + '/' + stArr[2] + '/' + stArr[0].substring(2,4);
                $scope.bEndDate = enArr[1] + '/' + enArr[2] + '/' + enArr[0].substring(2,4);
                $scope.clickedPeriod = "Pay Period" + " " +  $scope.bStartDate + " - " +  $scope.bEndDate
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardFromAdminManager.getBiweekMileages}', biweekId,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                //console.log("Biweekly result", JSON.parse(result[0]));
                                var mileageList = JSON.parse(result[0]);
                                console.log("Biweekly result 2", mileageList);
                                // $scope.totalMileage = JSON.parse(result[1]);
                                // $scope.totalVariableAmount = JSON.parse(result[2]);
                                angular.forEach(mileageList, function (item) {
                                    item.drivingtime = $scope.timeConversion(item.drivingtime);
                                    item.staytime = $scope.timeConversion(item.staytime);
                                    item.totaltime = $scope.timeConversion(item.totaltime);
                                    if (item.lockdate != null) {
                                        item.isLockDate = true;
                                        if (item.status === "Approved") {
                                            item.isSelected = true;
                                        }
                                        else if (item.status === "Rejected") {
                                            item.isChecked = true;
                                        }
                                        else if (item.status === "Not Approved Yet") {
                                            item.isSelected = false;
                                            item.isChecked = false;
                                        }
                                    }
                                    else if (item.lockdate === null) {
                                        item.isLockDate = false;
                                        if (item.status === "Approved") {
                                            item.isSelected = true;
                                        }
                                        else if (item.status === "Rejected") {
                                            item.isChecked = true;
                                        }
                                        else if (item.status === "Not Approved Yet") {
                                            item.isSelected = false;
                                            item.isChecked = false;
                                        }
                                    }
                                })
                                $scope.exportReimList = [];
                                $scope.exportReimList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable",  "Trip Type", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageList, function (item, key) {
                                    $scope.exportReimList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.tripActivity, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.bFileName = $scope.adminname + '\'s Mileage' + ' ' + $scope.FromDate;
                                $scope.reimbursementDialog.open($scope.nameofEmployee, $scope.bFileName, $scope.clickedPeriod, $scope.selectedYear, mileageList, $scope.emailofemployee, $scope.modalType);
                                $('#spinner').hide();
                            }
                            else {
                                var mileageList = [];
                                $scope.totalMileage = JSON.parse(result[1]);
                                $scope.totalVariableAmount = JSON.parse(result[2]);
                                $scope.exportReimList = [];
                                $scope.exportReimList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable", "Trip Type", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageList, function (item, key) {
                                    $scope.exportReimList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.tripActivity, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.bFileName = $scope.adminname + '\'s Mileage' + ' ' + $scope.FromDate;
                                $scope.reimbursementDialog.open($scope.nameofEmployee, $scope.bFileName, $scope.clickedPeriod, $scope.selectedYear, mileageList, $scope.emailofemployee, $scope.modalType);
                                $('#spinner').hide();
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }

            $scope.openmodal = function (clickedMonth) {
                $('#spinner').show();
                $scope.emailofemployee = '{!emailofEmployee}';
                $scope.nameofEmployee = '{!nameofEmployee}';
                $scope.clickedMonth = clickedMonth;
                $scope.modalType = 'Monthly';
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardFromAdminManager.getMileages}', $scope.clickedMonth, $scope.selectedYear, $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                var resultdata = result.replace(/\\/g, '');
                                var mileageList = JSON.parse(resultdata);
                                console.log("mileageList", mileageList)
                                angular.forEach(mileageList, function (item) {
                                    item.drivingtime = $scope.timeConversion(item.drivingtime);
                                    item.staytime = $scope.timeConversion(item.staytime);
                                    item.totaltime = $scope.timeConversion(item.totaltime);
                                    if (item.lockdate != null) {
                                        item.isLockDate = true;
                                        if (item.status === "Approved") {
                                            item.isSelected = true;
                                        }
                                        else if (item.status === "Rejected") {
                                            item.isChecked = true;
                                        }
                                        else if (item.status === "Not Approved Yet") {
                                            item.isSelected = false;
                                            item.isChecked = false;
                                        }
                                    }
                                    else if (item.lockdate === null) {
                                        item.isLockDate = false;
                                        if (item.status === "Approved") {
                                            item.isSelected = true;
                                        }
                                        else if (item.status === "Rejected") {
                                            item.isChecked = true;
                                        }
                                        else if (item.status === "Not Approved Yet") {
                                            item.isSelected = false;
                                            item.isChecked = false;
                                        }
                                    }
                                });
                                $scope.exportReimList = [];
                                $scope.exportReimList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable Amount", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageList, function (item, key) {
                                    $scope.exportReimList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.fileName = $scope.adminname + '\'s Mileage ' + $scope.FromDate;
                                $scope.reimbursementDialog.open($scope.nameofEmployee, $scope.fileName, clickedMonth, $scope.selectedYear, mileageList, $scope.emailofemployee, $scope.modalType);
                                $('#spinner').hide();
                            }
                            else {
                                var mileageList = [];
                                $scope.exportReimList = [];
                                $scope.exportReimList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable Amount", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageList, function (item, key) {
                                    $scope.exportReimList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.fileName = $scope.adminname + '\'s Mileage ' + $scope.FromDate;
                                $scope.reimbursementDialog.open($scope.nameofEmployee, $scope.fileName, clickedMonth, $scope.selectedYear, mileageList, $scope.emailofemployee, $scope.modalType);
                                $('#spinner').hide();
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            };

            $scope.empContact = {!obj_current_contact_details};
            console.log("Emp Details", $scope.empContact);
            $scope.driverConDetails = $scope.empContact[0];
            $scope.biWeekContact = $scope.empContact[0].Account.Bi_Weekly_Pay_Period__c;
            $scope.driverType = $scope.empContact[0].Driver_Type__c;
            if ($scope.empContact[0].Car_Image__c == null || $scope.empContact[0].Car_Image__c == '' || $scope.empContact[0].Car_Image__c == undefined) {
                $scope.empContact[0].Car_Image__c = '';
            }
            if ($scope.empContact[0].Account.Logo_Document_Id__c == null || $scope.empContact[0].Account.Logo_Document_Id__c == '' || $scope.empContact[0].Account.Logo_Document_Id__c == undefined) {
                $scope.empContact[0].Account.Logo_Document_Id__c = '';
            }
            $scope.gasrate = {!gasVariableRatePreviosMonth}
            $scope.gaspricedata = {!gaspriceforpreviosmonth};

            if ($scope.gasrate != null && $scope.gasrate != '') {
                if ($scope.gasrate[0] != undefined) {
                    if ($scope.gasrate[0].Fuel_Price__c == null) {
                        $scope.variablefuelprice = JSON.stringify($scope.gasrate);
                    } else {
                        $scope.variablefuelprice = null
                    }
                }else{
                    $scope.variablefuelprice = $scope.gasrate
                }
            }else{
                $scope.variablefuelprice = null;
            }
            /*$scope.fuelprice = JSON.stringify($scope.gaspricedata[0].Fuel_Price__c);*/
            if ($scope.gaspricedata != null && $scope.gaspricedata != '') {
                if ($scope.gaspricedata[0].Fuel_Price__c != '' && $scope.gaspricedata[0].Fuel_Price__c != null) {
                    $scope.fuelprice = JSON.stringify($scope.gaspricedata[0].Fuel_Price__c);
                } else {
                    $scope.fuelprice = '';
                }
            } else {
                $scope.fuelprice = '';
            }
            $scope.adminname = $scope.empContact[0].Name;
            $scope.empReimList = JSON.parse('{!ReimbursementsList}');
            var Maintenance, Tires;
            Maintenance = ($scope.empContact[0].Maintenance__c === null || $scope.empContact[0].Maintenance__c === undefined) ? 0 : $scope.empContact[0].Maintenance__c;
            Tires =  ($scope.empContact[0].Tires__c === null || $scope.empContact[0].Tires__c === undefined) ? 0 : $scope.empContact[0].Tires__c;
             if($scope.variablefuelprice != null){
                $scope.miles = parseFloat($scope.variablefuelprice) + Maintenance + Tires;
            }else{
                $scope.miles = Maintenance + Tires;
            }
            $scope.businessUse = $scope.empContact[0].Total_Monthly_Costs__c * ($scope.empContact[0].Business_Use__c / 100);
            $scope.totalMonthlyAmount = $scope.businessUse / 12;
            if($scope.empContact[0].Fixed_Cost_Adjustment__c == null || $scope.empContact[0].Fixed_Cost_Adjustment__c == "" || $scope.empContact[0].Fixed_Cost_Adjustment__c == undefined){
                $scope.fixedcostadjustment = null
            }else{
                $scope.fixedcostadjustment = $scope.empContact[0].Fixed_Cost_Adjustment__c
                $scope.totalMonthlyFixedCost = $scope.fixedcostadjustment + $scope.totalMonthlyAmount;
            }
            $scope.showunapprove = false;
            if ($scope.empReimList == 0) {
                $scope.unapprovemileage = JSON.stringify($scope.empReimList);
                $scope.showunapprove = true;

            }
            else {

                var count = 0;
                angular.forEach($scope.empReimList, function (item, key) {
                    count = count + item.Total_Pending__c;
                });
                $scope.unapprovemileage = count;
                $scope.showunapprove = true;
            }
            $scope.mileageList = '';


            $scope.selectedYear = '';

            $scope.fetchMileage = function (clickedyear) {
                $('#spinner').show();
                $scope.mileages = [];
                $scope.selectedYear = clickedyear;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.getAllReimbursements}', $scope.selectedYear, $scope.id, $scope.accid,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                $scope.mileages = [];
                                $scope.mileages = JSON.parse(result);
                                console.log("Mileages", $scope.mileages);
                                $scope.resultMonth = [];

                                angular.forEach($scope.mileages, function (o) {
                                    if (o.month) {
                                        $scope.resultMonth.push(o.month);
                                        // $scope.syncHeader = true;
                                    }
                                });
                                var monthCheck = $scope.resultMonth.includes($scope.syncMonth);
                                if ($scope.syncMonth === 'December') {
                                    if ($scope.lastYear === $scope.selectedYear) {
                                        if (monthCheck == false) {
                                            if ($scope.selectedYear === $scope.preYear) {
                                                $scope.syncHeader = true;
                                            } else {
                                                $scope.syncHeader = false;
                                            }
                                        }else{
                                            $scope.syncHeader = true;
                                        }
                                    } else {
                                        if ($scope.selectedYear === $scope.preYear) {
                                            $scope.syncHeader = true;
                                        } else {
                                            $scope.syncHeader = false;
                                        }
                                    }
                                }
                                else {
                                    if ($scope.lastYear === $scope.selectedYear) {
                                        if (monthCheck) {
                                            $scope.syncHeader = true;
                                        } else {
                                            $scope.syncHeader = false;
                                        }
                                    }else{
                                        $scope.syncHeader = false;
                                    }
                                }
                            }
                            else {
                                $scope.mileages = [];
                            }
                            $('#spinner').hide();
                            $scope.approveFunction();
                        }
                        else {
                            $('#spinner').hide();
                            toastr.error('Something went wrong');
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }

            // excel download
            $scope.downloadToExcel = function (sheetData, excelfile) {

                function datenum(v, date1904) {
                    if (date1904) v += 1462;
                    var epoch = Date.parse(v);
                    return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);
                };

                function getSheet(sheetData, opts) {
                    var ws = {};
                    var range = { s: { c: 10000000, r: 10000000 }, e: { c: 0, r: 0 } };
                    for (var R = 0; R != sheetData.length; ++R) {
                        for (var C = 0; C != sheetData[R].length; ++C) {
                            if (range.s.r > R) range.s.r = R;
                            if (range.s.c > C) range.s.c = C;
                            if (range.e.r < R) range.e.r = R;
                            if (range.e.c < C) range.e.c = C;
                            var cell = { v: sheetData[R][C] };
                            if (cell.v == null) continue;
                            var cell_ref = XLSX.utils.encode_cell({ c: C, r: R });

                            if (typeof cell.v === 'number') cell.t = 'n';
                            else if (typeof cell.v === 'boolean') cell.t = 'b';
                            else if (cell.v instanceof Date) {
                                cell.t = 'n'; cell.z = XLSX.SSF._table[14];
                                cell.v = datenum(cell.v);
                            }
                            else cell.t = 's';
                            ws[cell_ref] = cell;
                        }
                    }
                    if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);
                    return ws;
                };

                function Workbook() {
                    if (!(this instanceof Workbook)) return new Workbook();
                    this.SheetNames = [];
                    this.Sheets = {};
                }
                var wb = new Workbook(), ws = getSheet(sheetData);
                /* add worksheet to workbook */
                wb.SheetNames.push(excelfile);
                wb.Sheets[excelfile] = ws;
                var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'binary' });
                function s2ab(s) {
                    var buf = new ArrayBuffer(s.length);
                    var view = new Uint8Array(buf);
                    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF;
                    return buf;
                }
                saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), excelfile + '.xlsx');
            };
            // Time and Attendence Report
            $scope.fetchTimeAttendence = function (clickedyear) {
                $('#spinner').show();
                $scope.timeAttendence = [];
                $scope.selectedYear = clickedyear;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.TimeAttendance}', $scope.id, $scope.selectedYear,
                    function (result, event) {
                        if (event.status && result != null) {
                            $scope.timeAttendence = result;
                            console.log($scope.timeAttendence);
                            $('#spinner').hide();
                        }
                        else {
                            $('#spinner').hide();
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );

            }

              // Reimbursement Link 
            $scope.fetchReimbMileage = function (clickedyear) {
                $('#spinner').show();
                $scope.reimbMileages = [];
                $scope.selectedYear = clickedyear;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.biweeklyMileage}', $scope.id, $scope.selectedYear,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                $scope.reimbMileages = [];
                                $scope.reimb = result;
                                angular.forEach($scope.reimb, function (rb) {
                                    rb.isSelected = false;
                                });
                                $scope.reimbMileages = $filter('orderBy')($scope.reimb, 'startDate', true);

                                console.log("biweeklyMileage ->", $scope.reimbMileages);
                            }
                            else {
                                $scope.reimbMileages = [];
                            }
                            $('#spinner').hide();
                            $scope.approveBiweeklyFunction();
                        }
                        else {
                            $('#spinner').hide();
                            toastr.error('Something went wrong');
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }
             // Total Reimbursemnt For Reimbursement For ERMI Account
             function calculateReimb(fixed1, fixed2, fixed3, variable){
                let nfixed1, nfixed2, nfixed3, nVariable, f1, f2, f3, vr, totalReim;
                nfixed1 = (fixed1 != "null") ? fixed1.split(" $") : fixed1;
                nfixed2 = (fixed2 != "null") ? fixed2.split(" $") : fixed2;
                nfixed3 = (fixed3 != "null") ? fixed3.split(" $") : fixed3;
                nVariable = (variable != "null") ? variable.split(" $") : variable;
                f1 = (nfixed1 != "null") ? parseFloat(nfixed1[1]) : 0.00;
                f2 = (nfixed2 != "null") ? parseFloat(nfixed2[1]) : 0.00;
                f3 = (nfixed3 != "null") ? parseFloat(nfixed3[1]) : 0.00;
                vr = (nVariable != "null") ? parseFloat(nVariable[1]) : 0.00;
                totalReim = f1 + f2 + f3 + vr;
                return totalReim.toFixed(2).toString();
            }

            $scope.fetchErmiReimbMileage = function (clickedyear) {
                $('#spinner').show();
                $scope.reimbMileages = [];
                $scope.selectedYear = clickedyear;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.getAllReimbursements}', $scope.selectedYear, $scope.id, $scope.accid,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                $scope.reimbMileages = [];
                                $scope.reimbMileages = JSON.parse(result);
                                angular.forEach($scope.reimbMileages, function(item){
                                    item.totalForReimbursement = calculateReimb(item.fixed1, item.fixed2, item.fixed3, item.varibleAmount)
                                })
                                console.log($scope.reimbMileages);
                                $scope.resultMonth = [];
                                        angular.forEach($scope.reimbMileages, function (o) {
                                            if (o.month) {
                                                $scope.resultMonth.push(o.month);
                                                // $scope.syncHeader = true;
                                            }
                                        });
                                        var monthCheck = $scope.resultMonth.includes($scope.syncMonth);
                                        if ($scope.syncMonth === 'December') {
                                            if ($scope.lastYear === $scope.selectedYear) {
                                                if (monthCheck == false) {
                                                    if ($scope.selectedYear === $scope.preYear) {
                                                        $scope.syncHeader = true;
                                                    } else {
                                                        $scope.syncHeader = false;
                                                    }
                                                }else{
                                                    $scope.syncHeader = true;
                                                }
                                            } else {
                                                if ($scope.selectedYear === $scope.preYear) {
                                                    $scope.syncHeader = true;
                                                } else {
                                                    $scope.syncHeader = false;
                                                }
                                            }
                                        }
                                        else {
                                            if ($scope.lastYear === $scope.selectedYear) {
                                                if (monthCheck) {
                                                    $scope.syncHeader = true;
                                                } else {
                                                    $scope.syncHeader = false;
                                                }
                                            }else{
                                                $scope.syncHeader = false;
                                            }
                                        }
                            }
                            else {
                                $scope.reimbMileages = [];
                            }
                            $('#spinner').hide();
                        }
                        else {
                            $('#spinner').hide();
                            toastr.error('Something went wrong');
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }
            // download time and attendance detail report or reimbursement report
            $scope.downloadReport = function (startDt, endDt) {
                $scope.timePeriodList = [];
                $scope.empObj = {!obj_current_contact_details};
                $scope.driverName = $scope.empObj[0].Name;
                $scope.TDate = $filter('date')(new Date(), "MMddyyyyHHmmss");
                $scope.excelFileName = $scope.driverName + '\'s Time And Attendance Report ' + $scope.TDate;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.getMileagesBasedTandAtt}', startDt, endDt, $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                let escapeChar = escapeSpecialChars(result);
                                var detailedList = JSON.parse(escapeChar);
                                console.log(detailedList);
                                $scope.exportPeriodList = [];
                                $scope.exportPeriodList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable Amount", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(detailedList, function (item, key) {
                                    $scope.exportPeriodList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });

                                $scope.downloadToExcel($scope.exportPeriodList, $scope.excelFileName);
                            } else {
                                $scope.exportPeriodList = [];
                                toastr.error("No mileage found between "+ startDt + " to " + endDt);
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }

            $scope.downloadReimbReport = function (stDate, enDate, biweekId) {
                $scope.exportReimbusList = [];
                $scope.bStartDate = $filter('date')(new Date(stDate), "yyyy-MM-dd");
                $scope.bEndDate = $filter('date')(new Date(enDate), "yyyy-MM-dd");
                $scope.clickedPeriod = "Pay Period" + " " + $filter('date')(new Date(stDate), "MM/dd/yy") + " - " + $filter('date')(new Date(enDate), "MM/dd/yy")
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardFromAdminManager.getBiweekMileages}', biweekId,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                // console.log("Biweekly result", JSON.parse(result[0]));
                                let escapeChar = escapeSpecialChars(result[0]);
                                var biweeklyList = JSON.parse(escapeChar);
                                angular.forEach(biweeklyList, function (item) {
                                    item.drivingtime = $scope.timeConversion(item.drivingtime);
                                    item.staytime = $scope.timeConversion(item.staytime);
                                    item.totaltime = $scope.timeConversion(item.totaltime);
                                })
                                $scope.exportReimbusList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable", "Trip Type", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(biweeklyList, function (item, key) {
                                    $scope.exportReimbusList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount,  item.tripActivity, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.excelFileName = $scope.adminname + '\'s Mileage' + ' ' + $scope.FromDate;
                                $scope.downloadToExcel($scope.exportReimbusList, $scope.excelFileName);
                            }
                            else {
                                toastr.error(result);
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );

            }
            
            $scope.downloadReimbReportForERMI = function (reimYear , reimonth) {
                $scope.exportReimbusList = [];
                $scope.empObj = {!obj_current_contact_details};
                $scope.driverName = $scope.empObj[0].Name;
                $scope.TDate = $filter('date')(new Date(), "MMddyyyyHHmmss");
                $scope.excelFileName = $scope.driverName + '\'s Reimbursement Report ' + $scope.TDate;
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardFromAdminManager.getMileages}', reimonth, reimYear, $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                let escapeChar = escapeSpecialChars(result);
                                var mileageReimbList = JSON.parse(escapeChar);
                                console.log(mileageReimbList)
                                $scope.exportReimbusList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable Amount", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageReimbList, function (item, key) {
                                    $scope.exportReimbusList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.downloadToExcel($scope.exportReimbusList, $scope.excelFileName);
                            }else{
                                $scope.exportReimbusList = [];
                                toastr.error("No mileage found for "+reimonth);
                            }
                        }
                    });
             }
            $scope.modalshowforapproved = function (status) {
                $('#spinner').hide();
                if (status == 'Approved')
                    $scope.flagstatus = 'Approved';
                if (status == 'Rejected')
                    $scope.flagstatus = 'Rejected';
                if (status == 'ApprovedRejected')
                    $scope.flagstatus = 'Approved and Rejected';

                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.getReimbursementsListClone}', $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            var rs = JSON.parse(result);
                            $scope.fetchEmpReimList(rs);
                        }
                    }, { escape: false }
                );

                $scope.$modalInstance = $modal.open({
                    template: '<button type="button" ng-click="cancel()" class="childcls close popup-close-btn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="modal-body text-center"><div class="checkhead"><h4>{{approvalTopMsg}}</h4></div><div class="check-in-info"><p>{{approvalBottomMsg}}</p></div><div class="check-submit"><button type="button" ng-click="ok()" class="btn btn-primary" data-dismiss="modal">OK</button></div></div>',
                    scope: $scope
                });
            }
            $scope.ok = function () {
                $scope.$modalInstance.close();
            };
            $scope.okForWeekly = function () {
                $scope.$modalInstance.close();
                location.reload();
            }
            $scope.cancel = function () {
                $scope.$modalInstance.dismiss('cancel');
            };
            $scope.refreshpage = function (updatedmileagelist) {
                $scope.mileages = [];
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.getAllReimbursements}', $scope.selectedYear, $scope.id, $scope.accid,
                    function (result, event) {
                        if (event.status && result != '') {
                            if (result != '') {
                                $scope.mileages = [];
                                $scope.mileages = JSON.parse(result);
                            }
                            else {
                                $scope.mileages = [];
                            }
                            $scope.approveFunction();
                            $scope.approveBiweeklyFunction();
                            $('#spinner').hide();
                        }
                        else {
                            $('#spinner').hide();
                            toastr.error('Something went wrong');
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
                $scope.exportReimList = []
                $scope.exportReimList.push(["Contact Email", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Tracing Style"]);
                angular.forEach(updatedmileagelist, function (item, key) {
                    $scope.exportReimList.push([item.emailaddress, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.tracingstyle]);
                });
            }
            $scope.CheckUncheckHeader = function (status) {
                var totalforcurrentyear = $('.approveChkForcurrentyear').length;
                var totalforpriviosyear = $('.approveChkforpriviousyear').length;
                var count = 0;
                angular.forEach($scope.mileages, function (item) {
                    if (item.isSelected) {
                        count++;
                    }
                });
                if (totalforcurrentyear == count)
                    $scope.IsAllChecked = true;
                else
                    $scope.IsAllChecked = false;

                if (count > 0)
                    $scope.displayTeamRecordBtn = true;
                else
                    $scope.displayTeamRecordBtn = false;

                if (totalforpriviosyear == count)
                    $scope.IsAllChecked = true;
                else
                    $scope.IsAllChecked = false;
            }

            $scope.myTeamCheckUncheckTripAll = function () {
                if ($scope.model.isChecked == true)
                    $scope.displayBiWeeklyTeamRecordBtn = true;
                else
                    $scope.displayBiWeeklyTeamRecordBtn = false;

                angular.forEach($scope.reimbMileages, function (item) {
                    if(item.checkPendingTrip  && item.totalPending > '0.00'){
                        item.isSelected = $scope.model.isChecked;
                    }
                });
            }

            $scope.CheckUncheckPendingTrip = function (ch, index) {
                var totalfortrip = 0;
                var tripcount = 0;
                angular.forEach($scope.reimbMileages, function (item, m) {
                    item.isSelected = (index === m) ? ch : item.isSelected;
                    if (item.isSelected) {
                        tripcount++;
                    }
                    if(item.checkPendingTrip && item.totalPending > '0.00'){
                        totalfortrip ++;
                    }
                });
                if (totalfortrip == tripcount)
                    $scope.model.isChecked = true;
                else
                    $scope.model.isChecked = false;

                if (tripcount > 0)
                    $scope.displayBiWeeklyTeamRecordBtn = true;
                else
                    $scope.displayBiWeeklyTeamRecordBtn = false;
            }

            $scope.approveReimbursementsofManager = function () {
                $scope.reimbursements = [];
                for (var i = 0; i < $scope.mileages.length; i++) {
                    if ($scope.mileages[i].isSelected == true) {
                        $scope.reimbursements.push($scope.mileages[i]);
                    }
                }
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.approveReimbursements}', $scope.selectedYear, $scope.id, $scope.accid, JSON.stringify($scope.reimbursements),
                    function (result, event) {
                        if (event.status && result != null) {
                            $scope.mileages = JSON.parse(result);
                            $scope.approveFunction();
                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.getReimbursementsListClone}', $scope.id,
                                function (result, event) {
                                    if (event.status && result != null) {
                                        var rs = JSON.parse(result);
                                        //toastr.success('Mileage approve process is running in background.It will take couple of time so please wait until data gets refresh.once it complete we will send you email for the same.');
                                        $scope.fetchEmpReimList(rs);
                                    }
                                }, { escape: false });
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );

                $scope.$modalInstance = $modal.open({
                    template: '<button type="button" ng-click="cancel()" class="childcls close popup-close-btn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="modal-body text-center"><div class="checkhead"><h4>{{approvalTopMsg}}</h4></div><div class="check-in-info"><p>{{approvalBottomMsg}}</p></div><div class="check-submit"><button type="button" ng-click="ok()" class="btn btn-primary" data-dismiss="modal">OK</button></div></div>',
                    scope: $scope
                });
            }

            $scope.processApproval = function (biweekId) {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.ApproveBiweekMileages}', biweekId,
                            function (result, event) {
                                if (event.status) {
                                    $('#spinner').hide();
                                    $scope.approveBiweeklyFunction();
                                    $scope.$modalInstance = $modal.open({
                                        template: '<button type="button" ng-click="okForWeekly()" class="childcls close popup-close-btn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button><div class="modal-body text-center"><div class="checkhead"><h4>{{approvalTopMsg}}</h4></div><div class="check-in-info"><p>{{approvalBottomMsg}}</p></div><div class="check-submit"><button type="button" ng-click="okForWeekly()" class="btn btn-primary" data-dismiss="modal">OK</button></div></div>',
                                        scope: $scope
                                    });
                                    //$scope.mileages = JSON.parse(result);
                                    //toastr.success('Mileage approve process is running in background.It will take couple of time so please wait until data gets refresh.once it complete we will send you email for the same.');
                                }
                                $scope.$apply();
                            },
                            { escape: false }
                        );
            }
            $scope.approveBiweeklyofManager = function () {
                $('#spinner').show();
               // $scope.biweeklyreimbursements = [];
                for (var i = 0; i < $scope.reimbMileages.length; i++) {
                    if ($scope.reimbMileages[i].isSelected == true) {
                        // $scope.biweeklyreimbursements.push($scope.reimbMileages[i]);
                        $scope.processApproval($scope.reimbMileages[i].biweekId);
                    }
                }
                // var firstList = _.head($scope.biweeklyreimbursements);
                // var lastList = _.last($scope.biweeklyreimbursements);
               // $scope.biStartDate = firstList.startDate;
              //  $scope.biEndDate = lastList.endDate;
                // console.log("First Element-> ", _.head($scope.biweeklyreimbursements));
                // console.log("Last Element-> ", _.last($scope.biweeklyreimbursements));
                // console.log("start date: ", firstList.startDate);
                // console.log("end date: ", lastList.endDate);
                
            }

            $scope.submitExpense = function (month, conEmail, totalReim) {
                        $('#spinner').show();
                        $scope.empReMonth = month;
                        $scope.contactEmail = conEmail;
                        $scope.totalReimb = totalReim;
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.postExpenseReimbursement}', $scope.accid, $scope.empReMonth, $scope.contactEmail, $scope.totalReimb,
                            function (result, event) {
                                if (event.status) {
                                    toastr.success('Expense is successfully send to triplog.');
                                    $('#spinner').hide();
                                    setTimeout(function () {
                                        location.reload();
                                    }, 2000);
                                }
                                else {
                                    toastr.error('Something went wrong');
                                }
                            }, { escape: false }
                        );
            }
            
            $scope.complianceCalculation = function () {
                $('#spinner').show();
                $scope.detailreportfordownload = [];
                $scope.summaryreportfordownload = [];
                $scope.filenamefordetail = $scope.adminname + ' Annual Tax Liability Detail Report';
                $scope.fileNameforsummary = $scope.adminname + ' Annual Tax Liability Summary Report';

                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardFromAdminManager.getCompliance}', $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            $scope.messageofcompliance = JSON.parse(result[1]);
                            if (result.length > 2) {
                                $scope.$apply(function () {
                                    $scope.compliancedata = JSON.parse(result[2]);
                                    $scope.detailreport = JSON.parse(result[3]);
                                    $scope.summaryreport = JSON.parse(result[4]);
                                    $scope.Reimbursements = JSON.parse(result[5]);
                                    $scope.maxallow = JSON.parse(result[6]);
                                    $scope.taxliablity = JSON.parse(result[7]);
                                });

                                $scope.detailreportfordownload.push(["Driver Name","Email", "Employee Id", "Month", "Year", "Total Reimbursement", "IRS allowable", "Imputed Income"]);
                                angular.forEach($scope.detailreport, function (item) {
                                    $scope.detailreportfordownload.push([ item.drivername, item.emailid, item.employeeid, item.month,  item.year,  "$" + item.totalreim, "$" + item.iRSallowable, "$" + item.imputedincome]);

                                });
                                $scope.detailreportfordownload.push([" ", " ", " ", " ", " ", "$" + $scope.Reimbursements, "$" + $scope.maxallow, "$" + $scope.taxliablity]);

                                $scope.summaryreportfordownload.push(["Driver Name",  "Email", "Employee Id", "Total Reimbursement", "IRS allowable", "Imputed Income"]);
                                angular.forEach($scope.summaryreport, function (item) {
                                    $scope.summaryreportfordownload.push([item.drivername, item.emailid, item.employeeid,  "$" + $scope.Reimbursements, "$" + $scope.maxallow, "$" + item.imputedincome]);
                                });
                                $scope.$apply(function () {
                                    $scope.summrylenth = $scope.summaryreportfordownload.length
                                });
                                $('#spinner').hide();
                            }
                            else {
                                $scope.$apply(function () {
                                    $scope.compliancedata = [];
                                    $scope.summrylenth = 0;
                                });
                                $('#spinner').hide();
                            }
                        }
                    },
                    { escape: false }
                );
            }
                        
                    }
            ]);
        </script>
    </head>

    <body ng-app="drivermanagerDashboardModule" ng-controller="drivermanagerDashboardController" ng-cloak="true">
        <div class="align-items-center justify-content-center" id="processSpinner">
            <div class="spinner-background" style="opacity:0.8"></div>
            <div class="spinner-load">
                <div class="spinner-border text-success" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
            <div class="sMessage-load text-white" id="messageContainer">
                <div id="processMessage"></div>
            </div>
        </div>
        <div id="spinner">
            <div class="spinner-background"></div>
            <div class="spinner-load">
                <div class="spinner-border text-light" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        </div>
        <header>
            <div class="main-header sticky" id="myHeader">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12">
                            <nav class="navbar navbar-expand-md my-0 my-md-1 px-0">
                                <a class="navbar-brand col-6 col-sm-6 col-md-3 col-lg-3 col-xl-3 px-0" href="/app/admindriverdashboard?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">
                                    <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/logo/mBurse-logo_rev.png')}" class="img-fluid" href="javascript:void(0)"
                                        alt="logo" />
                                </a>
                                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
                                    <span class="navbar-toggler-icon">
                                        <i class="fa fa-bars"></i>
                                    </span>
                                </button>
                                <div class="collapse navbar-collapse flex-column col-12 col-sm-6 col-md-9 col-lg-9 col-xl-9 ml-3 ml-sm-0 ml-lg-0 align-items-end"
                                    id="collapsibleNavbar">
                                    <ul class="navbar-nav flex-row">
                                        <li class="nav-item active">
                                            <a class="nav-link text-white" ng-show="!admindriver" href="/app/admindriverdashboard?accid={{accid}}&id={{adminid}}&showteam={{showteam}}">Dashboard</a>
                                            <a class="nav-link text-white" ng-show="admindriver" href="/app/admindriverdashboard?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">Dashboard</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link text-white" ng-show="!admindriver" href="/app/MileageDashboard?accid={{accid}}&id={{adminid}}&showteam={{showteam}}">Mileage</a>
                                            <a class="nav-link text-white" ng-show="admindriver" href="/app/MileageDashboard?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">Mileage</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link text-white" ng-show="!admindriver" href="/app/roster?accid={{accid}}&id={{adminid}}&showteam={{showteam}}">Drivers</a>
                                            <a class="nav-link text-white" ng-show="admindriver" href="/app/roster?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">Drivers</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link text-white" ng-show="!admindriver"  href="/app/ManageNotification?accid={{accid}}&id={{adminid}}&showteam={{showteam}}">Communications</a>
                                            <a class="nav-link text-white" ng-show="admindriver"  href="/app/ManageNotification?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">Communications</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link text-white" ng-show="!admindriver" href="/app/reportlist?accid={{accid}}&id={{adminid}}&showteam={{showteam}}">Reports</a>
                                            <a class="nav-link text-white" ng-show="admindriver" href="/app/reportlist?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">Reports</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link text-white" ng-show="!admindriver" href="/app/driveradminmanagermydetail?accid={{accid}}&id={{adminid}}&showteam={{showteam}}">My Details</a>
                                            <a class="nav-link text-white" ng-show="admindriver" href="/app/driveradminmanagermydetail?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">My Details</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link text-white" href="/app/secur/logout.jsp">Logout</a>
                                        </li>

                                    </ul>
                                </div>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </header>
        <section class="container-fluid">
            <div class="row">
                <div class="font-s mb-2 pr-2 pl-15">
                    <a href="/app/admindriverdashboard?accid={{accid}}&id={{adminid}}&showteam={{showteam}}&admindriver={{admindriver}}">
                        <i class="fas fa-chevron-left"></i> Back</a>
                </div>
                <!-- <div>
                    <button class="tips-button" ng-click="publishMC()"><i class="fa-solid fa-info"></i></button>
                </div> -->
            </div>
           
            <!-- <div class="font-s my-3">
                <h1 class="form-heading mb-30">{{empContact[0].Name}}</h1>
            </div> -->
              <div id="pills-admin-dashbord-myteamprofile" class="myteamprofile" >
                <iframe id="vfFrame" height="345" width="100%" style="border: 0" class="vf-iframe"></iframe>
            </div>
            <!-- <div class="row">
                <div class="col-md-12 col-sm-12 col-xl-9 col-lg-9">
                    <div class="row">
                        <div class="col-12 col-md-4 col-sm-12 col-xl-4 col-lg-4">
                            <div class="admin-driver-detail-dashboard">
                                <div class="location-info">
                                    <div class="admin-driver-dashboard-address">
                                        <h5>Location</h5>
                                        <p>{{ empContact[0].MailingCity + "," + empContact[0].MailingState + " " + empContact[0].MailingPostalCode}}</p>
                                    </div>
                                    <div class="admin-driver-dashboard-address">
                                        <h5>Fixed Rate</h5>
                                        <p>${{ empContact[0].Fixed_Amount__c }}</p>
                                    </div>
                                    <div class="admin-driver-dashboard-address">
                                        <h5>Compliance</h5>
                                        <p>{{ empContact[0].compliancestatus__c }}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-md-5 col-sm-12 col-xl-4 col-lg-5 ">
                            <div class="col-12 col-md-12 col-lg-12 col-xl-12 pl-sm-0">
                                <div class="admin-driver-dashboard-milagedetail">
                                    <div class="row">
                                        <div class="col-3 col-sm-3 col-md-4 col-lg-3 col-xl-3 ">
                                            <div class="fuel-icon">
                                                <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/fuelpump-icon.png')}" alt="icon" />
                                            </div>
                                        </div>
                                        <div class="col-9 col-sm-9 col-md-8 col-lg-9 col-xl-9">
                                            <div class="fuel-icon-detail">
                                                <h5>Fuel Price</h5>
                                                <p ng-if="fuelprice == ''"></p>
                                                <p ng-if="fuelprice != ''">${{fuelprice}}</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="admin-driver-dashboard-milagedetail mt-2">
                                    <div class="row">
                                        <div class="col-3 col-sm-3 col-md-3">
                                            <div class="fuel-icon">
                                                <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/car-icon.png')}" alt="icon" />
                                            </div>
                                        </div>
                                        <div class="col-9 col-sm-9 col-md-9">
                                            <div class="fuel-icon-detail">
                                                <h5>Unapproved Mileage</h5>
                                                <p ng-if="showunapprove">{{unapprovemileage}}</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12 col-xl-4 col-lg-3 mb-3 mb-sm-0 mb-md-0 mt-3 mt-sm-0 mt-md-0">
                            <div class="col-6 col-sm-6 col-md-6 float-right" ng-if="empContact.Account.Logo_Document_Id__c != ''  ">
                                <img class="img-fluid" ng-src="{{ empContact[0].Account.Logo_Document_Id__c }}" alt="company name" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-sm-12 col-xl-3 col-lg-3">
                    <div class="admin-driver-dashboard-card">
                        <div ng-if="empContact.Car_Image__c != ''">
                            <img class="img-fluid" ng-src="{{empContact[0].Car_Image__c}}"></img>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">{{ empContact[0].Vehicle_Type__c }}</h5>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-divider"></div> -->
            <div class="my-5 admin-roster-tab-section">
                <ul class="nav nav-pills">
                    <li class="nav-item mb-3">
                        <a class="nav-link active" data-toggle="pill" href="#pills-admin-dashbord-myteam">My Trips</a>
                    </li>
                    <li class="nav-item mb-3">
                        <a class="nav-link" data-toggle="pill" href="#pills-admin-dashbord-mileage">Plan Info</a>
                    </li>
                </ul>
                <div class="tab-content timeline" style="padding-bottom: 3rem">
                    <div class="tab-pane active" id="pills-admin-dashbord-myteam">
                        <div id="accordion" role="tablist">
                            <div class="card insurance-declatarion-card" ng-repeat="yr in years">
                                <div class="card-header" role="tab" id="Cardheading">
                                    <h5 class="mb-0">
                                        <a  ng-show="driverConDetails.Monthly_Reimbursement__c" class="collapsed" data-toggle="collapse" href="#collapseCard{{$index}}" aria-expanded="false" aria-controls="collapseCard{{$index}}"
                                            ng-click="fetchMileage(yr)" role="button">
                                            {{yr}}
                                        </a>
                                        <!-- Year Link For Pl Marketing Account -->
                                        <a ng-show="driverConDetails.Biweek_Reimbursement__c && biWeekContact" class="collapsed" data-toggle="collapse" href="#collapseReimbPLCard{{$index}}" aria-expanded="false" aria-controls="collapseReimbPLCard{{$index}}"
                                        ng-click="fetchReimbMileage(yr)" role="button">
                                        {{yr}}
                                        </a>
                                        <!-- Year Link For ERMI Account-->
                                        <a ng-show="driverConDetails.Biweek_Reimbursement__c && !biWeekContact" class="collapsed" data-toggle="collapse" href="#collapseReimbCard{{$index}}" aria-expanded="false" aria-controls="collapseReimbCard{{$index}}"
                                        ng-click="fetchErmiReimbMileage(yr)" role="button">
                                        {{yr}}
                                        </a>
                                    </h5>
                                    <!-- Time And Attendance For Account-->
                                      <h5 class="mb-0 ml-5" ng-show="driverConDetails.Time_Attandance__c"> <!--  ng-if="accid === ERMIAcc && driverType != 'Driver - Salary' " -->
                                        <a class="collapsed" data-toggle="collapse" href="#collapseTimeCard{{$index}}" aria-expanded="false" aria-controls="collapseTimeCard{{$index}}"
                                            ng-click="fetchTimeAttendence(yr)" role="button">
                                            T &amp; A
                                        </a>
                                    </h5>
                                   <!-- <h5 class="mb-0 ml-5" ng-if="accid == PLMarketing">
                                        <a class="collapsed" data-toggle="collapse" href="#collapseReimbCard{{$index}}" aria-expanded="false" aria-controls="collapseReimbCard"
                                            ng-click="fetchReimbMileage(yr)">
                                            Reimbursement
                                        </a>
                                    </h5>
                                      <h5 class="mb-0 ml-5"  ng-if="accid === ERMIAcc && driverType != 'Driver - Salary' ">
                                        <a class="collapsed" data-toggle="collapse" href="#collapseReimbCard{{$index}}" aria-expanded="false" aria-controls="collapseReimbCard"
                                            ng-click="fetchErmiReimbMileage(yr)">
                                            Reimbursement
                                        </a>
                                    </h5> -->
                                </div>
                                <div  ng-show="driverConDetails.Monthly_Reimbursement__c" id="collapseCard{{$index}}" class="collapse" role="tabpanel" aria-labelledby="Cardheading" data-parent="#accordion">
                                    <!--  ng-show="fetchMileageClicked" -->
                                    <div class="card-body pad-0">
                                        <div class="table-responsive">
                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th ng-if="yr == lastYear || yr == preYear" ng-show="syncHeader">Sync</th>
                                                        <!-- <th ng-if="yr == lastYear && accid == SPBSAcc">Concur Sync</th>-->
                                                        <th>Month
                                                            <span class="sort-icon pull-right"></span>
                                                        </th>
                                                        <th>Fuel
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='Fuel'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Total Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='mileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th> Approved Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='approveMileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Fixed + Variable
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='Reimbursements'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Total Reimbursement
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalReimbursements'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <!-- <th ng-if="yr == lastYear && accid == SPBSAcc">
                                    
                                                                                                </th> -->
                                                        <th>
                                                            <!--  ng-click="sort('status')" -->
                                                            <button class="btn btn-primary pull-right1">Approve
                                                                <!--  <input ng-show="checkAllShowForMyTeam" type="checkbox" ng-model="IsAllChecked" ng-click="myTeamCheckUncheckAll()" />  -->
                                                            </button>
                                                            <!-- <span class="sort-icon pull-right" ng-show="sortKey=='status'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span> -->
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody class="driver-dashboard-table table-a-link">
                                                    <tr dir-paginate="ml in mileages |orderBy:sortKey:reverse |itemsPerPage:12">
                                                        <td class="w-10rem" ng-if="yr == lastYear || yr == preYear" ng-show="syncHeader">
                                                            <button class="btn btn-primary syncMileageBtn" ng-click="syncMileages(ml.month,ml.fuel,ml.maintainsAndTyres,ml.employeeReimbursementId,ml.mpg)"
                                                                ng-if="ml.month === syncMonth">Mileage</button>
                                                            <button class="btn btn-primary expenseBtn" ng-click="submitExpense(ml.month,ml.contactEmail,ml.totalReimbursements)" ng-if="$first && (accid == SPBSAcc || accid === EngGypAcc)">Concur</button>
                                                        </td>

                                                        <td ng-click="openmodal(ml.month)" class="month_td">
                                                            <a>{{ml.month}}</a>
                                                        </td>
                                                        <td ng-if="ml.fuel != null && ml.fuel != ''" class="fuel_td">${{ml.fuel}}</td>
                                                        <td ng-if="ml.fuel == null || ml.fuel == ''" class="fuel_td"></td>
                                                        <td>{{ml.mileage | currency:value=""}}</td>
                                                        <td>{{ml.approveMileage | currency:value=""}}</td>
                                                        <td>{{ml.varibleAndFixedReimbursements}}</td>
                                                        <td>${{ml.totalReimbursements}}</td>
                                                        <!-- <td ng-if="yr == lastYear && accid == SPBSAcc"><button class="btn btn-primary expenseBtn" ng-click="submitExpense(ml.month,ml.contactEmail,ml.totalReimbursements)" ng-if="$first && yr == lastYear">Concur Sync</button></td> -->
                                                        <td>
                                                            <div class="pull-right1" ng-model="ml.status" ng-if="ml.status=='Approved' && ml.mileage > '0.00'"> {{ml.status}} on {{ml.approveddate}}
                                                            </div>
                                                            <div ng-model="ml.status" ng-if="ml.status=='Rejected' "> {{ml.status}} on {{ml.approveddate}}
                                                            </div>
                                                            <div class="pull-right1 mr-11 margin_top-5" ng-if="ml.status !='Approved' && ml.pendingMileage > '0.00'">
                                                                <input type="checkbox" ng-model="ml.isSelected" ng-change="CheckUncheckHeader()" class="approveChkForcurrentyear" />
                                                            </div>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <button class="btn btn-secondary float-right" ng-show="displayTeamRecordBtn" ng-click="approveReimbursementsofManager();">Submit</button>
                                            <!-- <dir-pagination-controls max-size="5" direction-links="true" boundary-links="true" autoHide="true" responsive="true" class="pull-right"></dir-pagination-controls> -->
                                        </div>
                                    </div>
                                    <!-- <div class="card-footer text-muted" ng-if="mileages.length > 0">
                                        <div class="card-inner-text">
                                            <button class="btn btn-primary font-16 mr-11 cursor-type f-btn" ng-click="exportToMonthSummary()">Summary
                                                <i class="fa fa-download"></i>
                                            </button>
                                            <button class="btn btn-primary font-16 mr-11 cursor-type f-btn" ng-click="exportToMonthDetail()">Detail
                                                <i class="fa fa-download"></i>
                                            </button>
                                        </div>
                                    </div> -->
                                </div>
                                <!--  ng-if="accid == PLMarketing" -->
                                <div ng-show="driverConDetails.Biweek_Reimbursement__c && biWeekContact" id="collapseReimbPLCard{{$index}}" class="collapse" role="tabpanel" aria-labelledby="Cardheading" data-parent="#accordion">
                                    <div class="card-body pad-0">
                                        <div class="table-responsive">
                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th>Start Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='startDate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>End Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='endDate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Gas Prices
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='fuel'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Fixed Total
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='fixedAmount'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Total Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='mileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Approved Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalApproved'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Variable Amount
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='variable'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Total Reimbursement
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalReim'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>
                                                            <button class="btn btn-primary pull-right1">Approve
                                                                <input type="checkbox" ng-show="checkAllShowForBiweekly" ng-model="model.isChecked" ng-change="myTeamCheckUncheckTripAll()" />
                                                            </button>
                                                        </th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody class="driver-dashboard-table table-a-link">
                                                    <tr ng-repeat="reimbml in reimbMileages | orderBy : '-startDate'">
                                                        <td ng-click="openbiweeklymodal(reimbml.startDate, reimbml.endDate, reimbml.biweekId)">
                                                            <a>{{reimbml.startDate | date : "'MM/dd/yy"}}</a>
                                                        </td>
                                                        <td>{{reimbml.endDate | date : "'MM/dd/yy"}}</td>
                                                        <td ng-if="reimbml.fuel != null && reimbml.fuel != ''">${{reimbml.fuel}}</td>
                                                        <td ng-if="reimbml.fuel == null || reimbml.fuel == ''"></td>
                                                        <td>{{reimbml.fixedAmount}}</td>
                                                        <td>{{reimbml.mileage | currency:value=""}}</td>
                                                        <td>{{reimbml.totalApproved | currency:value=""}}</td>
                                                        <td>{{reimbml.variable | currency:value=""}}</td>
                                                        <td>{{reimbml.totalReim}}</td>
                                                        <td>
                                                            <div class="pull-right1" ng-if="reimbml.checkPendingTrip === true && reimbml.totalPending > '0.00'" style="margin-right: 14px !important">
                                                                <input type="checkbox" ng-model="reimbml.isSelected" ng-change="CheckUncheckPendingTrip(reimbml.isSelected, $index)" class="approveChkForTrip"
                                                                />
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <i class="fa fa-download fa-lg cursor-type" ng-click="downloadReimbReport(reimbml.startDate, reimbml.endDate, reimbml.biweekId)"></i>
                                                        </td>
                                                    </tr>
                                                    <tr ng-if="reimbMileages.length == 0">
                                                        <td colspan="9" class="table-nodata">No Data Available</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                            <button class="btn btn-secondary float-right mr-5 mt-1" ng-show="displayBiWeeklyTeamRecordBtn" ng-click="approveBiweeklyofManager();">Submit</button>
                                        </div>

                                    </div>
                                    <div class="card-footer text-muted" ng-if="reimbMileages.length > 0">
                                        <div class="card-inner-text">
                                            <button class="btn btn-primary font-16 mr-11 cursor-type f-btn" ng-click="exportToSummary()">Summary
                                                <i class="fa fa-download"></i>
                                            </button>
                                            <button class="btn btn-primary font-16 mr-11 cursor-type f-btn" ng-click="exportToDetail()">Detail
                                                <i class="fa fa-download"></i>
                                            </button>
                                        </div>
                                      </div>
                                </div>
                                <!-- ng-if="accid === ERMIAcc && driverType != 'Driver - Salary' " -->
                                 <div  ng-show="driverConDetails.Time_Attandance__c"  id="collapseTimeCard{{$index}}" class="collapse" role="tabpanel" aria-labelledby="Cardheading"
                                    data-parent="#accordion">
                                    <div class="card-body pad-0">
                                        <div class="table-responsive">
                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th>Start Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='startDate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>End Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='endDate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Drive Time
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='driveTime'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Stay Time
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='stayTime'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Total Time
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalTime'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Approval Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='approvalDate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody class="driver-dashboard-table table-a-link">
                                                    <tr ng-repeat="time in timeAttendence | orderBy : '-startDate'">
                                                        <td>{{time.startDate}}</td>
                                                        <td>{{time.endDate}}</td>
                                                        <td>{{time.totaldrivingTime}}</td>
                                                        <td>{{time.totalStayTime}}</td>
                                                        <td>{{time.totalTime}}</td>
                                                        <td>{{time.approvalDate}}</td>
                                                        <td class="vw-4">
                                                            <button class="btn btn-primary font-14 mr-11 cursor-type" ng-click="downloadReport(time.startDate,time.endDate)">Download
                                                                <i class="fa fa-download"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                    <tr ng-if="timeAttendence.length == 0">
                                                        <td colspan="7" class="table-nodata">No Data Available</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                                <!-- ng-if="accid === ERMIAcc && driverType != 'Driver - Salary' " -->
                               <div ng-show="driverConDetails.Biweek_Reimbursement__c && !biWeekContact"  id="collapseReimbCard{{$index}}" class="collapse" role="tabpanel" aria-labelledby="Cardheading"
                                    data-parent="#accordion">
                                    <div class="card-body pad-0">
                                        <div class="table-responsive">
                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th ng-if="yr == lastYear || yr == preYear" ng-show="syncHeader">Sync</th>
                                                        <th>Month
                                                            <span class="sort-icon pull-right"></span>
                                                        </th>
                                                        <th>Fuel
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='Fuel'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='mileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Mi Rate
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='variableRate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Variable
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='varibleAmount'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Fixed 1
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='fixed1'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Fixed 2
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='fixed2'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Fixed 3
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='fixed3'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Total Reimbursement
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalFixedAmount'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody class="driver-dashboard-table table-a-link">
                                                    <tr ng-repeat="reimbml in reimbMileages |orderBy:sortKey:reverse">
                                                        <td class="w-10rem" ng-if="yr == lastYear || yr == preYear" ng-show="syncHeader">
                                                            <button class="btn btn-primary syncMileageBtn" ng-click="syncMileages(reimbml.month,reimbml.fuel,reimbml.maintainsAndTyres,reimbml.employeeReimbursementId,reimbml.mpg)"
                                                                ng-if="reimbml.month === syncMonth">Mileage</button>
                                                        </td>
                                                        <td ng-click="openmodal(reimbml.month)">
                                                            <a>{{reimbml.month}}</a>
                                                        </td>
                                                        <td ng-if="reimbml.fuel != null && reimbml.fuel != ''" >${{reimbml.fuel}}</td>
                                                        <td ng-if="reimbml.fuel == null || reimbml.fuel == ''" ></td>
                                                        <td>{{reimbml.mileage | currency:value=""}}</td>
                                                        <td>{{reimbml.variableRate}}</td>
                                                        <td>{{reimbml.varibleAmount}}</td>
                                                        <td ng-if="reimbml.fixed1 != 'null' && reimbml.fixed1 != ''">{{reimbml.fixed1}}</td>
                                                        <td ng-if="reimbml.fixed1 == 'null' || reimbml.fixed1 == ''"></td>
                                                        <td ng-if="reimbml.fixed2 != 'null' && reimbml.fixed2 != ''">{{reimbml.fixed2}}</td>
                                                        <td ng-if="reimbml.fixed2 == 'null' || reimbml.fixed2 == ''"></td>
                                                        <td ng-if="reimbml.fixed3 != 'null' && reimbml.fixed3 != ''">{{reimbml.fixed3}}</td>
                                                        <td ng-if="reimbml.fixed3 == 'null' || reimbml.fixed3 == ''"></td>
                                                        <td ng-if="reimbml.totalForReimbursement != null && reimbml.totalForReimbursement != ''" class="vw-8">${{reimbml.totalForReimbursement}}</td>
                                                        <td ng-if="reimbml.totalForReimbursement == null || reimbml.totalForReimbursement == '0'" class="vw-8"></td>
                                                        <td class="vw-4">
                                                            <button class="btn btn-primary font-14 mr-11 cursor-type" ng-click="downloadReimbReportForERMI(yr,reimbml.month)">Download
                                                                <i class="fa fa-download"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                    <tr ng-if="reimbMileages.length == 0">
                                                        <td colspan="9" class="table-nodata">No Data Available</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                               </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="pills-admin-dashbord-mileage">
                        <c:PlanInfoComponent driverPacketDocCount="{!obj_driverpacket_attachementsize}" insuranceDocCount="{!obj_attachementsize}" 
                            contentVersionUrl="{!obj_content_version}"  mvrCheckDocCount="{!obj_driverpacket_attachMVRsize}" driverPacketId="{!If(obj_driverpacket_attachementsize > 0, obj_driver_driverpacket[0], null)}"
                            insuranceId="{!If(obj_attachementsize > 0, obj_driver_insurance[0], null)}" mvrCheckId="{!If(obj_driverpacket_attachMVRsize > 0, obj_driver_driverMVR[0], null)}"
                        />
                    </div>
                </div>
                <!-- EMC - 324 Introduce mBurse Support Chat On Existing System -->
                <c:mBurseChatBot />
                <!-- EMC - 324 Ends -->
            </div>
        </section>
        <driver-reimbursements-dialog-directive model="reimbursementDialog" modal-Open="modalshowforapproved(status)" callback-Fn="refreshpage(updatedmileagelist)"
            export-data="exportReimList"></driver-reimbursements-dialog-directive>
        <apex:include pageName="EMC_Common_footer" />
           <script>
            var iFrame = document.getElementById('vfFrame');
            console.log("Screen Width: " + window.screen.width);
            let iFrameheight;
            window.onmessage = function (event) {
                if (window.screen.width > 1366) {
                    if (event.data == 'slds-is-open') {
                        iFrameheight = document.getElementById('vfFrame').contentWindow.document.body.offsetHeight;
                        iFrame.height = `${(iFrameheight)}px`
                        console.log('Reply received!');
                    } else if (event.data == 'slds-is-close') {
                        iFrameheight = document.getElementById('vfFrame').contentWindow.document.body.offsetHeight;
                        iFrame.height = `${(iFrameheight)}px`
                        console.log('Reply received!');
                    }
                } else {
                    if (event.data == 'slds-is-open') {
                        iFrame.height = "680"
                        console.log('Reply received!');
                    } else if (event.data == 'slds-is-close') {
                        iFrame.height = "345";
                        console.log('Reply received!');
                    }
                }

            };
        </script> 
    </body>

    </html>
</apex:page>