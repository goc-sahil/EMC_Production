<apex:page showHeader="false" title="My Information" lightningStylesheets="false" sidebar="false" controller="DriverDashboardController"
    action="{!getRedirected}">
    <html lang="en">

    <head>
        <apex:include pageName="EMC_Common_Head" />
        <link rel="stylesheet" href="{!URLFOR($Resource.EMC_Header_Scripts,'EMC_Header_Scripts/css/bootstrap.min.css')}" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.13.3/css/selectize.css" crossorigin="anonymous"
            referrerpolicy="no-referrer" />
        <apex:include pageName="EMC_Common_Scripts" />
        <script src="{!URLFOR($Resource.dirPagination)}"></script>
        <!-- <script src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/js/moment.min.js')}"></script> -->
        <style type="text/css">
            /*Media Queries*/

            /* Large screens ----------- */
            @-webkit-keyframes slide-menu {
                from {
                    -webkit-transform: scaleX(0);
                            transform: scaleX(0);
                }
                to {
                    -webkit-transform: scaleX(1);
                            transform: scaleX(1);
                }
            }
            @keyframes slide-menu {
                from {
                    -webkit-transform: scaleX(0);
                            transform: scaleX(0);
                }
                to {
                    -webkit-transform: scaleX(1);
                            transform: scaleX(1);
                }
            }
            @-webkit-keyframes show-x {
                from {
                    opacity: 0;
                }
                to {
                    opacity: 1;
                }
            }
            @keyframes show-x {
                from {
                    opacity: 0;
                }
                to {
                    opacity: 1;
                }
            }
            @-webkit-keyframes menu-item-anim {
                from {
                    -webkit-transform: translateY(70%);
                            transform: translateY(70%);
                    opacity: 0;
                }
                to {
                    -webkit-transform: translateY(0);
                            transform: translateY(0);
                    opacity: 1;
                }
            }
            @keyframes menu-item-anim {
                from {
                    -webkit-transform: translateY(70%);
                            transform: translateY(70%);
                    opacity: 0;
                }
                to {
                    -webkit-transform: translateY(0);
                            transform: translateY(0);
                    opacity: 1;
                }
            }

            @media (min-width: 2560px) {
                .fuel_td {
                    width: 19rem;
                }
                .month_td {
                    width: 19rem;
                }
            }

            @media (min-width: 1800px) and (max-width: 2559px) {
                .fuel_td {
                    width: 14rem;
                }
                .month_td {
                    width: 14rem;
                }
            }

            /* Desktops and laptops ----------- */

            @media (min-width: 1600px) and (max-width: 1799px) {
                .fuel_td {
                    width: 10rem;
                }
                .month_td {
                    width: 10rem;
                }
            }

            @media (min-width: 1224px) and (max-width: 1600px) {
                .fuel_td {
                    width: 8rem;
                }
                .month_td {
                    width: 8rem;
                }
            }

            /* For Desktop View ----------- */

            @media (min-width: 1024px) and (max-width: 1224px) {
                .fuel_td {
                    width: 6rem;
                }
                .month_td {
                    width: 6rem;
                }
            }

            /* For Tablet View ----------- */

            @media screen and (min-device-width: 768px) and (max-device-width: 1024px) {
                .fuel_td {
                    width: 6rem;
                }
            }

            /* For iPhone 4 Portrait or Landscape View ----------- */

            @media screen and (min-device-width: 320px) and (-webkit-min-device-pixel-ratio: 2) {
                .fuel_td {
                    width: 6rem;
                }
            }

            /* For iPhone 5 Portrait or Landscape View ----------- */

            @media (device-height: 568px) and (device-width: 320px) and (-webkit-min-device-pixel-ratio: 2) {
                .fuel_td {
                    width: 6rem;
                }
            }

            @media (max-width:1024px) and (min-width:992px) {
                .mr-12 {
                    margin-right: 7.25rem;
                }
            }

            .spinner-background {
                width: 100%;
                height: 100%;
                background: #000;
                opacity: 0.4;
                top: 0px;
                left: 0px;
                position: fixed;
                z-index: 1000000;
            }

            .ml-em {
                margin-left: 0.8em !important
            }

            .img-brand {
                padding-top: 0.3125rem;
                padding-bottom: 0.3125rem;
            }

            .sticky .img-brand img.img-fluid {
                height: 40px !important;
            }

            .sticky .img-brand img.img-icon-fluid {
                height: 55px !important;
            }

            .vw-8 {
                width: 8vw;
            }

            .vw-7 {
                width: 7vw;
            }

            .vw-9 {
                width: 9vw;
            }

            .vw-4 {
                width: 4vw !important;
            }

            .font-14 {
                font-size: 14px !important;
            }

            .cursor-type {
                cursor: pointer;
            }

            .vw-6 {
                width: 6vw;
            }

            .underline {
                text-decoration: underline;
            }

            .greenText {
                font-size: 14px;
                font-weight: 600;
                color: #78bc42;
                position: relative;
                top: 36px;
                left: 88px;
            }

            .greenText2 {
                position: relative;
                font-size: 14px;
                font-weight: 600;
                color: #78bc42;
                top: 53px;
                left: 28px;
            }

            .redText {
                position: absolute;
                top: 78px;
                right: 80px;
                font-size: 9px;
                color: #ff0000;
                font-weight: 600;
            }

            .mr-11 {
                margin-right: 12px !important;
            }

            .image-cardtext {
                right: 30px;
                top: 0px;
            }

            .fileupload-title {
                color: #000000 !important;
                font-size: 18px !important;
            }

            .fileupload-title-2 {
                color: #78bc42 !important;
            }

            .insDiv {
                width: 157%;
                margin-left: -80px;
            }

            .tagquestion {
                top: -14px;
                position: relative;
                color: #78bc42;
                right: 5px;
                font-size: 14px;
            }

            .image-Insurancetext {
                position: absolute;
                top: 0px;
            }

            .spinner-load {
                position: fixed;
                top: 49%;
                left: 49%;
                z-index: 1000000;
            }

            .box__dragndrop:hover {
                background-color: #6c757d !important;
            }

            .box__dragndrop:hover .uploadtxt {
                color: #fff;
            }

            .uploadtxt {
                color: #6c757d;
                text-transform: uppercase;
            }

            .box__dragndrop {
                color: #dddddd !important;
                display: inline-block !important;
                background-image: none !important;
                background: none !important;
                border-radius: 0px !important;
                border: 3px solid !important;
                float: right;
                margin-right: 120px !important;
                padding: .375rem .75rem !important;
                transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !important;
            }

            .modal-backdrop.fade {
                opacity: 0.4 !important;
            }

            .pad-0 {
                padding-top: 0rem;
            }

            .fade:not(.show) {
                opacity: 1;
            }

            .modal-dialog {
                z-index: 1057;
            }

            table#driver-dashbord-month-model th {
                position: relative;
            }

            table#driver-dashbord-month-model span.sort-icon {
                position: absolute;
                top: 17px;
                font-size: 14px;
            }

            header {
                display: flex !important;
            }

            .w-100 {
                cursor: pointer;
            }

            .successMsg {
                top: 124px !important;
                left: 230px !important;
                position: absolute !important;
                font-weight: bold;
                font-size: 14px !important;
                color: #78bc42 !important;
            }

            .pagination {
                display: inline-block;
                padding-left: 0;
                margin: 20px 0;
                border-radius: 4px;
            }

            .pagination>li {
                display: inline;
            }

            .pagination>li>a,
            .pagination>li>span {
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.42857143;
                color: #78bc42;
                text-decoration: none;
                background-color: #fff;
                border: 1px solid #ddd;
            }

            .pagination>li:first-child>a,
            .pagination>li:first-child>span {
                margin-left: 0;
                border-top-left-radius: 4px;
                border-bottom-left-radius: 4px;
            }

            .pagination>.disabled>a,
            .pagination>.disabled>a:focus,
            .pagination>.disabled>a:hover,
            .pagination>.disabled>span,
            .pagination>.disabled>span:focus,
            .pagination>.disabled>span:hover {
                color: #777;
                cursor: not-allowed;
                background-color: #fff;
                border-color: #ddd;
            }

            .pagination>.disabled>a,
            .pagination>.disabled>a:focus,
            .pagination>.disabled>a:hover,
            .pagination>.disabled>span,
            .pagination>.disabled>span:focus,
            .pagination>.disabled>span:hover {
                color: #78bc42;
                cursor: not-allowed;
                background-color: #fff;
                border-color: #ddd;
            }

            .pagination>.active>a,
            .pagination>.active>a:focus,
            .pagination>.active>a:hover,
            .pagination>.active>span,
            .pagination>.active>span:focus,
            .pagination>.active>span:hover {
                z-index: 3;
                color: #fff;
                cursor: default;
                background-color: #78bc42;
                border-color: #78bc42;
            }

            .disable-pagination {
                cursor: not-allowed !important;
                pointer-events: none;
            }

            .disable-pagination>a {
                color: #212529 !important;
            }

            .paginationformodal {
                margin: 0px 0 !important;
            }

            .piginationpages {
                color: #78bc42 !important;
            }

            .paginationformodal>a {
                color: #78bc42 !important;
            }

            .paginationformodaldownloadbutton {
                margin-top: 0px;
            }

            .spinner-background {
                width: 100%;
                height: 100%;
                background: #000;
                opacity: 0.4;
                top: 0px;
                left: 0px;
                position: fixed;
                z-index: 1000000;
            }

            .spinner-load {
                position: fixed;
                top: 49%;
                left: 49%;
                z-index: 1000000;
            }

            .rowforplan {
                margin-right: -15px;
                margin-left: -15px;
            }

            .alignitemscenter {
                align-items: center;
            }

            .displayblock {
                display: block !important;
            }

            .displaynone {
                display: none !important;
            }

            .table-nodata {
                text-align: center;
            }

            table.dataTable tbody th,
            table.dataTable tbody td {
                padding: 5px 8px !important;
            }

            table.dataTable tfoot th,
            table.dataTable tfoot td {
                padding: 10px 18px 6px 6px;
            }

            .form-control:focus {
                outline: 0 !important;
                border-color: initial;
                box-shadow: none;
            }

            #example_filter {
                position: absolute;
                right: 0px;
                top: 0px;
            }

            #filtericon {
                padding: 10px;
                right: 0;
                position: absolute;
                display: block;
                z-index: 4;
                cursor: pointer;
            }

            .w-85 {
                width: 89% !important;
            }

            .mr-98 {
                margin-right: 98px !important;
            }

            .mr-12 {
                margin-right: 12rem !important;
            }

            .card-inner-text {
                display: flow-root;
                padding-right: 11px;
            }

            .card-footer {
                padding: 0.35rem 1.15rem !important;
            }

            .f-btn {
                float: right;
            }

            .font-16 {
                font-size: 16px !important;
            }

            .overflow-icon-btn.mburse {
                background-color: #78bc42;
            }

            .overflow-icon-btn {
                text-decoration: none !important;
                padding: 12px 16px;
                color: #fff;
                border-radius: 4px;
                font-family: Arial, Helvetica, sans-serif;
                font-weight: bold;
                font-size: 16px;
                text-shadow: 0 0 8px #78bc42;
                box-shadow: 0 0 4px #78bc42;
                transition: 0.3s;
            }

            .overflow-icon-btn.mburse i {
                vertical-align: sub;
            }

            .overflow-icon-btn i {
                -webkit-text-stroke-color: #78bc42;
                -webkit-text-stroke-width: 0.02em;
            }

            .overflow-icon-btn:hover {
                text-shadow: 0 0 24px #78bc42 !important;
                box-shadow: 0 0 12px #78bc42 !important;
                color: #fff !important;
            }

            .video-container {
                width: 640px;
                border-radius: 4px;
                margin: 0 auto;
                position: relative;
                display: flex;
                flex-direction: column;
                justify-content: center;
                box-shadow: 0px 8px 20px rgba(black, 0.4);
            }

            .video-wrapper {
                width: 100%;
                /* height: 100%; */
                display: flex;
                justify-content: center;
                align-items: center;
            }

            .insurance-rounded{
                min-height: calc(100vh - 3.5rem);
            }

            .pad-0 {
                padding: 0 !important;
            }

            .vf-video-iframe{
                position: fixed;
                z-index: 99;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                padding: 2em;
                /* -webkit-transform: scaleX(0);
                transform: scaleX(0); */
                -webkit-transform-origin: center;
                transform-origin: center;
            }

            .video-title{
                text-transform:  uppercase;
                margin-bottom: 6px;
            }

            .video-icon-fluid{
                width: 80px;
            }

            .overlay-heading{
                color: #fff;
                text-align: center;
                font-size: 18px;
            }

            #overlay {
                position: fixed;
                z-index: 99;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: #929497;
                padding: 2em;
                -webkit-transform: scaleX(0);
                transform: scaleX(0);
                -webkit-transform-origin: right;
                transform-origin: right;
                overflow: hidden;
                overflow-y: auto;
            }

            #overlay .close-button {
                float: right;
                cursor: pointer;
                opacity: 0;
                z-index: 100;
                color: #fff;
            }

            #overlay ul {
                list-style-type: none;
                margin: 2% auto 0 auto;
                padding: 0;
                display: -ms-grid;
                display: grid;
                -ms-grid-columns: (auto)[5];
                    grid-template-columns: repeat(5, auto);
                width: 100%;
            }

            #overlay ul div {
            color: white;
            font-weight: bold;
            font-size: 16px;
            }

            #overlay ul span {
            color: white;
            display: block;
            font-size: 16px;
            }

            #overlay ul li {
                opacity: 0;
                text-align: center;
            }

            .d-none{
                display: none;
            }

            .d-block{
                display: block;
            }

            .show-menu {
                display: block;
                -webkit-animation: slide-menu 1s ease-in forwards;
                        animation: slide-menu 1s ease-in forwards;
            }

            .show-menu .close-button {
                -webkit-animation: show-x 1s 1s forwards;
                        animation: show-x 1s 1s forwards;
            }

            .show-menu li:nth-of-type(1) {
            -webkit-animation: menu-item-anim .6s forwards 1s ease-in-out;
                    animation: menu-item-anim .6s forwards 1s ease-in-out;
            }

            .show-menu li:nth-of-type(2) {
            -webkit-animation: menu-item-anim .6s forwards 1.2s ease-in-out;
                    animation: menu-item-anim .6s forwards 1.2s ease-in-out;
            }

            .show-menu li:nth-of-type(3) {
            -webkit-animation: menu-item-anim .6s forwards 1.6s ease-in-out;
                    animation: menu-item-anim .6s forwards 1.6s ease-in-out;
            }

            .show-menu li:nth-of-type(4) {
            -webkit-animation: menu-item-anim .6s forwards 1.8s ease-in-out;
                    animation: menu-item-anim .6s forwards 1.8s ease-in-out;
            }

            .show-menu li:nth-of-type(5) {
            -webkit-animation: menu-item-anim .6s forwards 2s ease-in-out;
                    animation: menu-item-anim .6s forwards 2s ease-in-out;
            }

            .menu-play{
                cursor: pointer;
            }

            .icon-wrapper{
                cursor: pointer;
            }

            .pd-6{
                padding-top: 6px;
            }
        </style>
        <script type="text/javascript">
            window.onload = function () {
                var iframeurl;
                var siteUrl = location.href;
                var siteUrlString = new URL(siteUrl);
                var accountId = siteUrlString.searchParams.get("accid");
                var emcDriverId = siteUrlString.searchParams.get("id");
                iframeurl = 'https://' + window.location.host + '/app/newdriverdashboard?accid=' + accountId + '&id=' + emcDriverId;
                document.getElementById("vfFrame").setAttribute("src", iframeurl);
                if (window.screen.width > 2391) { // 1824 // "345"
                    if (window.screen.width > 2560) {
                        document.getElementById("vfFrame").height = "350";
                    } else {
                        document.getElementById("vfFrame").height = "340";
                    }
                } else {
                    if (window.screen.width != 1366) {
                        document.getElementById("vfFrame").height = "338";
                    } else {
                        document.getElementById("vfFrame").height = "391";
                    }
                }
                if (window.screen.width != 1366) {
                    addHeight();
                }
            }

            addHeight = function () {
                let vfFrameheight;
                vfFrameheight = document.getElementById('vfFrame').contentWindow.document.body.scrollHeight;
                document.getElementById("vfFrame").height = `${(vfFrameheight)}px`;
            }
            window.onresize = function () {
                let height;
                height = document.getElementById('vfFrame').contentWindow.document.body.offsetHeight;
                document.getElementById("vfFrame").height = `${(height)}px`
                // console.log(document.getElementById('vfFrame').contentWindow.document.body);
            }

        </script>
        <script>
            var app = angular.module('driverDashboardModule', ['ui.bootstrap', 'angularUtils.directives.dirPagination']);
            var MileagesofReimbursements = function (visible) {
                this.visible = visible;
            };

            MileagesofReimbursements.prototype.open = function (filename, month, year, mileageList, totalMileage, totalVariableAmount, modalType) {
                this.filename = filename;
                this.visible = true;
                this.mileageList = mileageList;
                this.clickedMonth = month;
                this.totalMileage = totalMileage;
                this.totalVariableAmount = totalVariableAmount;
                this.modalType = modalType;
            };

            MileagesofReimbursements.prototype.close = function () {
                this.visible = false;
            };
            app.directive('reimbursementsDialogDirective', [
                function () {
                    return {
                        restrict: 'E',
                        scope: {
                            model: '=',
                            data: "&exportData"
                        },

                        link: function (scope, element, attributes) {
                            scope.$watch('model.visible', function (newValue) {
                                var modalElement = element.find('.modal');
                                modalElement.modal(newValue ? 'show' : 'hide');
                                if (newValue == true) {
                                    scope.init();
                                    console.log("Modal Type: ", scope.model.modalType);
                                    let tm = 0, tm1 = 0;
                                    let tv = 0, tv1 = 0;
                                    tm = scope.model.totalMileage;
                                    tm1 = tm.toFixed(2);
                                    scope.totalmileage1 = tm1;
                                    tv = scope.model.totalVariableAmount;
                                    tv1 = tv.toFixed(2);
                                    scope.totalVariableAmount1 = tv1;

                                    if (scope.model.mileageList.length > 8)
                                        scope.showmanagermodalsearchbar = true;
                                    else
                                        scope.showmanagermodalsearchbar = false;
                                }
                            });
                            scope.showData = [];
                            scope.total = 0;
                            scope.totalvariablerate = 0;
                            scope.currentPage = 1;
                            scope.lastIndex = 0;
                            scope.maxPage = 0;
                            scope.totalRecords;
                            scope.reverse = false;
                            scope.search = "";
                            scope.itemPerPage = 8;
                            scope.searchedArray = [];
                            scope.showmanagermodalsearchbar = false;


                            scope.init = function () {
                                scope.showData = [];
                                scope.total = 0.0;
                                scope.totalvariablerate = 0.0;
                                scope.maxPage = 0;
                                scope.totalRecords = scope.model.mileageList.length;
                                scope.model.mileageList
                                let tl = 0;
                                let tv = 0;
                                scope.maxPage = Math.ceil(scope.totalRecords / scope.itemPerPage)
                                scope.totalRecords
                                for (var i = 0; i < scope.itemPerPage; i++) {
                                    scope.currentPage = 1;
                                    if (scope.model.mileageList[i]) {
                                        /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);*/
                                        tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                                        tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                                        /*scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                        scope.showData.push(scope.model.mileageList[i])
                                    }
                                    scope.lastIndex = i + 1;
                                }
                                scope.total = tl.toFixed(2);
                                scope.totalvariablerate = tv.toFixed(2);
                            }
                            scope.next = function () {

                                scope.showData = [];
                                scope.total = 0;
                                scope.totalvariablerate = 0;
                                var lstInd = scope.lastIndex;
                                let tl = 0;
                                let tv = 0;

                                for (var i = scope.lastIndex; i < lstInd + scope.itemPerPage; i++) {
                                    let isSearch = scope.searchedArray.length > 0 ? true : false
                                    if (isSearch) {
                                        if (scope.searchedArray[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                            scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            tl = tl + parseFloat(scope.searchedArray[i].mileage);
                                            tv = tv + parseFloat(scope.searchedArray[i].variableamount);
                                            scope.showData.push(scope.searchedArray[i])
                                        }
                                    } else {
                                        if (scope.model.mileageList[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                            scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                                            tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                                            scope.showData.push(scope.model.mileageList[i])
                                        }
                                    }
                                    //  scope.sort("tripdate");
                                    scope.lastIndex = i + 1;
                                }

                                scope.total = tl.toFixed(2);
                                scope.totalvariablerate = tv.toFixed(2);
                                scope.currentPage++;
                            }
                            scope.previous = function () {
                                scope.showData = [];
                                scope.total = 0;
                                scope.totalvariablerate = 0;
                                let tl = 0;
                                let tv = 0;
                                var lstInd = scope.lastIndex;
                                for (var i = scope.lastIndex - (scope.itemPerPage * 2); i < lstInd - scope.itemPerPage; i++) {
                                    let isSearch = scope.searchedArray.length > 0 ? true : false
                                    if (isSearch) {
                                        if (scope.searchedArray[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                            scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            tl = tl + parseFloat(scope.searchedArray[i].mileage);
                                            tv = tv + parseFloat(scope.searchedArray[i].variableamount);
                                            scope.showData.push(scope.searchedArray[i])
                                        }
                                    } else {
                                        if (scope.model.mileageList[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);
                                            scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                                            tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                                            scope.showData.push(scope.model.mileageList[i])
                                        }
                                    }
                                    // scope.sort("tripdate");
                                    scope.lastIndex = i + 1;
                                }
                                scope.total = tl.toFixed(2);
                                scope.totalvariablerate = tv.toFixed(2);
                                scope.currentPage--;
                            }

                            scope.sortKey = 'tripdate';
                            scope.sort = function (keyName) {

                                //$scope.reverse = !$scope.reverse;
                                scope.reverse = (scope.sortKey === keyName) ? !scope.reverse : false;
                                scope.sortKey = keyName;

                                if (keyName === 'mileage' || keyName === 'variableamount' || keyName === 'variable') {
                                    scope.model.mileageList.sort(function (a, b) {
                                        var nameA = (a[keyName] == null) ? '' : parseInt(a[keyName]),
                                            nameB = (b[keyName] == null) ? '' : parseInt(b[keyName]);

                                        if (scope.reverse) {
                                            if (nameA < nameB) //sort string ascending
                                                return -1
                                            if (nameA > nameB)
                                                return 1
                                            return 0 //default return valuscope.model.mileageList=e (no sorting)
                                        } else {
                                            if (nameA < nameB) //sort string ascending
                                                return 1
                                            if (nameA > nameB)
                                                return -1
                                            return 0 //default return value (no sorting)
                                        }
                                    })
                                }
                                if (keyName === 'originname' || keyName === 'destinationname' || keyName === 'tripActivity') {
                                    scope.model.mileageList.sort(function (a, b) {
                                        var nameA = (a[keyName] == null) ? '' : a[keyName].toLowerCase(),
                                            nameB = (b[keyName] == null) ? '' : b[keyName].toLowerCase()
                                        if (scope.reverse) {
                                            if (nameA < nameB) //sort string ascending
                                                return -1
                                            if (nameA > nameB)
                                                return 1
                                            return 0 //default return value (no sorting)
                                        } else {
                                            if (nameA < nameB) //sort string ascending
                                                return 1
                                            if (nameA > nameB)
                                                return -1
                                            return 0 //default return value (no sorting)
                                        }
                                    })
                                }
                                if (keyName === 'tripdate' || keyName === 'submitteddate') {
                                    scope.model.mileageList.sort(function (a, b) {
                                        var dateA = (a[keyName] == null) ? '' : new Date(a[keyName].toLowerCase()),
                                            dateB = (b[keyName] == null) ? '' : new Date(b[keyName].toLowerCase())
                                        if (scope.reverse) {
                                            if (dateA < dateB) //sort string ascending
                                                return -1
                                            if (dateA > dateB)
                                                return 1
                                            return 0 //default return value (no sorting)
                                        } else {
                                            if (dateA < dateB) //sort string ascending
                                                return 1
                                            if (dateA > dateB)
                                                return -1
                                            return 0 //default return value (no sorting)
                                        }
                                    })
                                }

                                scope.showData = [];

                                scope.total = 0;
                                scope.totalvariablerate = 0;
                                var lstInd = scope.lastIndex;
                                let tl = 0;
                                let tv = 0;
                                for (var i = scope.lastIndex - scope.itemPerPage; i < lstInd; i++) {

                                    if (scope.model.mileageList[i]) {
                                        /*scope.total = scope.total + parseInt(scope.model.mileageList[i].mileage);
                                        scope.totalvariablerate = scope.totalvariablerate + parseInt(scope.model.mileageList[i].variableamount);*/
                                        if (scope.model.mileageList[i].mileage)
                                            tl = tl + parseFloat(scope.model.mileageList[i].mileage);
                                        if (scope.model.mileageList[i].variableamount)
                                            tv = tv + parseFloat(scope.model.mileageList[i].variableamount);
                                        scope.showData.push(scope.model.mileageList[i])
                                    }
                                    scope.lastIndex = i + 1;
                                }
                                scope.total = tl.toFixed(2);
                                scope.totalvariablerate = tv.toFixed(2);
                            }

                            /* scope.sortKey = 'Trip_Date__c';   
                             scope.reverse = false;
                             scope.sortBy = function(keyname) {
                                 scope.reverse = (scope.sortKey === keyname) ? !scope.reverse : false;
                                 scope.sortKey = keyname;
                             };*/
                            scope.updatePagination = function () {
                                if (scope.search.length > 0) {
                                    scope.itemPerPage = 8;
                                    var filteredArray = scope.model.mileageList.filter(function (number) {
                                        if (number.originname != '' && number.originname != null && number.originname != undefined && number.destinationname != '' && number.destinationname != null && number.destinationname != undefined) {
                                            return number.originname.toLowerCase().indexOf(scope.search.toLowerCase()) !== -1 || number.destinationname.toLowerCase().indexOf(scope.search.toLowerCase()) !== -1;
                                        }
                                        return number.originname, number.destinationname;
                                    });

                                    scope.searchedArray = filteredArray;
                                    scope.showData = [];
                                    scope.total = 0.0;
                                    scope.totalvariablerate = 0.0;
                                    scope.maxPage = 0;
                                    scope.totalRecords = filteredArray.length;

                                    let tl = 0;
                                    let tv = 0;
                                    scope.maxPage = Math.ceil(scope.totalRecords / scope.itemPerPage)
                                    scope.totalRecords
                                    for (var i = 0; i < scope.itemPerPage; i++) {
                                        scope.currentPage = 1;
                                        if (filteredArray[i]) {
                                            /*scope.total = scope.total + parseFloat(scope.model.mileageList[i].mileage);*/
                                            tl = tl + parseFloat(filteredArray[i].mileage);
                                            tv = tv + parseFloat(filteredArray[i].variableamount);
                                            /*scope.totalvariablerate = scope.totalvariablerate + parseFloat(scope.model.mileageList[i].variableamount);*/
                                            scope.showData.push(filteredArray[i])
                                        }
                                        scope.lastIndex = i + 1;
                                    }
                                    if (scope.showData.length == 0) {
                                        scope.displayDownloadBtn = false;
                                    }
                                    else {
                                        scope.displayDownloadBtn = true;
                                    }
                                    scope.total = tl.toFixed(2);
                                    scope.totalvariablerate = tv.toFixed(2);


                                } else {
                                    scope.itemPerPage = 8;
                                    scope.init();
                                    scope.searchedArray.length = 0;
                                    scope.displayDownloadBtn = true;
                                }


                            }
                            element.on('shown.bs.modal', function () {
                                scope.$apply(function () {
                                    scope.model.visible = true;
                                    scope.sort("tripdate");
                                });
                            });

                            element.on('hidden.bs.modal', function () {
                                scope.$apply(function () {
                                    scope.model.visible = false;
                                    scope.search = "";
                                    scope.searchedArray.length = 0;

                                });
                            });

                            // scope.isDate = function(dateVal) {
                            //     var d  = moment(dateVal , "MM/DD/YY", true).isValid()
                            //     return d;
                            // }

                            $('input[type=search]').on('search', function () {
                                scope.search = "";
                                scope.searchedArray.length = 0;
                            });
                        },

                        template: '<div class="modal fade driver-dashboard-monthrecord show in" tabindex="-1" role="dialog"aria-labelledby="driver-dashboard-monthrecord" id="driver-dashboard-monthrecord"><div class="modal-dialog modal-xl modal-dialog-centered"><div class="modal-content rounded-0"><button type="button" class="close popup-close-btn" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button><div class="modal-body"><h4>{{model.clickedMonth}}</h4><div class="modal-divider"></div><div class="table-responsive"><div id="example_filter" class="dataTables_filter pull-right d-block" ng-show="showmanagermodalsearchbar"><div class="input-group w-85" ><i id="filtericon" class="fa fa-search" ng-if="search.length===0"></i><input class="form-control py-2 border-right-0 border" type="search" ng-model="search" ng-change="updatePagination()" placeholder="Search..." aria-controls="example" id="example-search-input" /></div></div><table id="driver-dashbord-month-model" class="table table-striped dt-responsive nowrap no-footer dataTable" cellspacing="0" width="100%" ><thead><tr><th ng-click="sort(\'tripdate\')">Trip Date<span ng-show="sortKey == \'tripdate\'" class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}"></span></th><th ng-click="sort(\'originname\')">Origin<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'originname\'"></span></th><th ng-click="sort(\'destinationname\')">Dest.<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'destinationname\'"></span></th><th ng-click="sort(\'submitteddate\')">Submitted<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'submitteddate\'"></span></th><th ng-click="sort(\'approveddate\')">Approved<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'approveddate\'"></span></th><th ng-click="sort(\'mileage\')">Mileage<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'mileage\'"></span></th><th ng-if="model.modalType === \'Monthly\' " ng-click="sort(\'variableamount\')">Variable Amount<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'variableamount\'"></span></th><th ng-if="model.modalType === \'Biweekly\' " ng-click="sort(\'variableamount\')">Variable<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'variableamount\'"></span></th><th ng-if="model.modalType === \'Biweekly\' " ng-click="sort(\'tripActivity\')">Trip Type<span class="sort-icon pull-right" ng-class="{\'fa fa-chevron-up\':reverse,\'fa fa-chevron-down\':!reverse}" ng-show="sortKey == \'tripActivity\'"></span></th></tr></thead><tbody class="table-a-link"><tr ng-repeat="mil in showData | filter:search" class="content-tr"><td ng-model="mil.tripdate">{{ mil.tripdate}}</td><td ng-model="mil.originname" ng-if="mil.originname != \'null\' ">{{ mil.originname}}</td><td ng-model="mil.originname" ng-if="mil.originname === \'null\' "></td><td ng-model="mil.destinationname" ng-if="mil.destinationname != \'null\' ">{{ mil.destinationname }}</td><td ng-model="mil.destinationname" ng-if="mil.destinationname === \'null\' "></td><td ng-model="mil.submitteddate">{{ mil.submitteddate }}</td><td ng-model="mil.approveddate">{{mil.approveddate }}</td><td ng-model="mil.mileage">{{ mil.mileage }}</td><td ng-model="mil.variableamount">${{ mil.variableamount ? mil.variableamount : 0}}</td><td ng-if="model.modalType === \'Biweekly\' " ng-model="mil.tripActivity" id="tripActivityid">{{ mil.tripActivity }}</td></tr><tr ng-if="showData.length == 0"><td colspan="8" class="table-nodata">No Records Available</td></tr></tbody><tfoot ng-if="showData.length > 0"><tr><th scope="row">Total</th><th colspan="4"> </th><th>{{total | number:2}} / {{totalmileage1 | number:2}}</th><th>${{totalvariablerate}} / ${{totalVariableAmount1}}</th><th ng-if="model.modalType === \'Biweekly\' " ></th></tr></tfoot></table></div></div><div class="modal-footer"><div class="col-md-4 mr-12" ng-if="showData.length > 0">Page {{currentPage}} of {{maxPage}} </div><div class="col-md-6"><ul ng-if="showData.length > 0" class="pagination float-right paginationformodal"><li class="page-item " ng-class="{\'disable-pagination\':currentPage === 1}"><a class="page-link" ng-click="previous()">Previous</a></li><li class="page-item"><a class="page-link" >{{currentPage}}</a></li><li class="page-item" ng-class="{\'disable-pagination\':currentPage === maxPage}"><a class="page-link"ng-click="next()" href="#">Next</a></li></ul><div class="paginationformodaldownloadbutton"><div excel-export="true" export-data="data()" ng-if="showData.length > 0" file-name="{{model.filename}}"/></div></div></div></div></div></div></div></div></div>'
                        // <select id="select-beast" class="demo-default" placeholder="Select a person..."><option value=""></option><option value="4">Thomas Edison</option><option value="1">Nikola</option><option value="3">Nikola Tesla</option><option value="5">Arnold Schwarzenegger</option></select>

                    };
                }
            ]);

            app.directive('excelExport', function () {
                return {
                    restrict: 'A',
                    scope: {
                        fileName: "@",
                        data: "&exportData"
                    },
                    replace: true,
                    template: '<button class="btn btn-primary float-right mr-11" ng-click="download()">Download <i class="fa fa-download"></i></button>',
                    link: function (scope, element) {

                        scope.download = function () {
                            function datenum(v, date1904) {
                                if (date1904) v += 1462;
                                var epoch = Date.parse(v);
                                return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);
                            };

                            function getSheet(data, opts) {
                                console.log("Export", JSON.stringify(data));
                                var ws = {};
                                var range = { s: { c: 10000000, r: 10000000 }, e: { c: 0, r: 0 } };
                                for (var R = 0; R != data.length; ++R) {
                                    for (var C = 0; C != data[R].length; ++C) {
                                        if (range.s.r > R) range.s.r = R;
                                        if (range.s.c > C) range.s.c = C;
                                        if (range.e.r < R) range.e.r = R;
                                        if (range.e.c < C) range.e.c = C;
                                        var cell = { v: data[R][C] };
                                        if (cell.v == null) continue;
                                        var cell_ref = XLSX.utils.encode_cell({ c: C, r: R });

                                        if (typeof cell.v === 'number') cell.t = 'n';
                                        else if (typeof cell.v === 'boolean') cell.t = 'b';
                                        else if (cell.v instanceof Date) {
                                            cell.t = 'n'; cell.z = XLSX.SSF._table[14];
                                            cell.v = datenum(cell.v);
                                        }
                                        else cell.t = 's';
                                        ws[cell_ref] = cell;
                                    }
                                }
                                if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);
                                return ws;
                            };

                            function Workbook() {
                                if (!(this instanceof Workbook)) return new Workbook();
                                this.SheetNames = [];
                                this.Sheets = {};
                            }
                            var wb = new Workbook(), ws = getSheet(scope.data());
                            /* add worksheet to workbook */
                            wb.SheetNames.push(scope.fileName);
                            wb.Sheets[scope.fileName] = ws;
                            var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'binary' });
                            function s2ab(s) {
                                var buf = new ArrayBuffer(s.length);
                                var view = new Uint8Array(buf);
                                for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF
                                return buf;
                            }
                            saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), scope.fileName + '.xlsx');
                        };
                    }
                };
            });

            app.controller('DriverDashboardController', ['$scope', '$filter', '$timeout',
                function ($scope, $filter, $timeout) {
                    // console.log(moment("06/22/2015", "MM/DD/YYYY", true).isValid())// true
                    // console.log(moment("06/22/2015", "DD/MM/YYYY", true).isValid()) // false
                    var url_string = $(location).attr("href");
                    var url = new URL(url_string);
                    $scope.id = url.searchParams.get("id");
                    $scope.accid = url.searchParams.get("accid");
                    $scope.driverType = "";
                    $scope.modalType = "Monthly";
                    $scope.ERMIAcc = '{!($Label.ERMI_Account)}';
                    $scope.PLMarketing = '{!($Label.PL_Marketing)}';
                    $scope.years = {!Last2Years
                };

            $('#lightning').hide();
            $scope.years.sort(function (a, b) {
                var numA = parseInt(a),
                    numB = parseInt(b);

                if (numA < numB) {
                    return 1;
                } else if (numA > numB) {
                    return -1;
                } else {
                    return 0; //default return value (no sorting)
                }
            })
            console.log($scope.years);
            $scope.insurancecount = {!insuranceSize};
            $scope.WeiserAccID = '{!($Label.Weiser_Account)}';
            //console.log($scope.years);
            $scope.reimbursementDialog = new MileagesofReimbursements(false);
            $scope.search = "";
            $scope.isVideoVisible = false;
            var choosenfileType = '';
            var chooseFileName = '';
            $scope.driverInsurance = [];

            $('#spinner').hide();
            $scope.tabs = [{ active: true }, { active: false }, { active: false }, { active: false }];

            function escapeSpecialChars(str){
                return str
                .replace(/\\'/g, "\'")
                .replace(/\\&#39;/g, "\'")
                .replace(/(&quot\;)/g,"\"");
            }

            $scope.packetandMeeting = function () {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardController.getPacketandMeeting}', $scope.id,
                    function (result, event) {
                        if (event.status && result != null && result != '') {
                            $scope.pacektstatus = [];
                            $scope.pacektstatus = JSON.parse(result);
                            $scope.pacekt = $scope.pacektstatus[0].Packet__c;
                            $scope.meeting = $scope.pacektstatus[0].Meeting__c;
                            if ($scope.pacekt == 'Sent to Driver') {
                                if (document.getElementById("downloadbtn")) {
                                    document.getElementById("downloadbtn").style.visibility = "hidden";
                                }
                                angular.element(document.querySelector("#beinggenratedsignature")).addClass(" active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforadminsignature")).removeClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("active");
                                angular.element(document.querySelector("#beinggenratedsignature")).addClass("btn.btn-secondary.pull-right");
                            }
                            /*else if ($scope.pacekt == 'Sent for Signature') {
                                if(document.getElementById("downloadbtn")){
                                    document.getElementById("downloadbtn").style.visibility = "hidden";
                                }
                                angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                                angular.element(document.querySelector("#sentforsignature")).addClass("active");
                                angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                               // angular.element(document.querySelector("#waitingforadminsignature")).removeClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("active");
                                angular.element(document.querySelector("#sentforsignature")).addClass("btn.btn-secondary.pull-right");
                            }
                            else if ($scope.pacekt == 'Waiting for Signature') {
                                if (document.getElementById("downloadbtn")) {
                                    document.getElementById("downloadbtn").style.visibility = "hidden";
                                }
                                angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforsignature")).addClass(" active");
                                angular.element(document.querySelector("#completesignature")).removeClass("active");

                            }*/
                            else if ($scope.pacekt == 'Driver Signed') {
                                if (document.getElementById("downloadbtn")) {
                                    document.getElementById("downloadbtn").style.visibility = "hidden";
                                }
                                angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforsignature")).addClass("active");
                                angular.element(document.querySelector("#waitingforadminsignature")).removeClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("active");
                            }
                            else if ($scope.pacekt == 'Admin Signed') {
                                if (document.getElementById("downloadbtn")) {
                                    document.getElementById("downloadbtn").style.visibility = "hidden";
                                }
                                angular.element(document.querySelector("#beinggenratedsignature")).removeClass(" active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforadminsignature")).addClass(" active");
                                angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("active");
                            }
                            else if ($scope.pacekt == 'Completed') {
                                angular.element(document.querySelector("#beinggenratedsignature")).removeClass("active");
                                angular.element(document.querySelector("#sentforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforsignature")).removeClass("active");
                                angular.element(document.querySelector("#waitingforadminsignature")).removeClass(" active");
                                angular.element(document.querySelector("#completesignature")).addClass("active");
                                angular.element(document.querySelector("#completesignature")).removeClass("btn-secondary");
                            }
                            else {
                                angular.element(document.querySelector("#beinggenratedsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#sentforsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#waitingforsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#waitingforadminsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#completesignature")).addClass("blank-stepper");
                            }

                            if ($scope.meeting == 'Scheduled') {
                                angular.element(document.querySelector("#scheduledsignature")).addClass(" active");
                                angular.element(document.querySelector("#sentsignature")).removeClass("active");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");
                                angular.element(document.querySelector("#didnotattendsignature")).removeClass("active");
                                angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                            }
                            else if ($scope.meeting == 'Sent') {
                                angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                angular.element(document.querySelector("#sentsignature")).addClass(" active");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");
                                angular.element(document.querySelector("#didnotattendsignature")).removeClass("active");
                                angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                            }
                            else if ($scope.meeting == 'Attended') {
                                angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                angular.element(document.querySelector("#sentsignature")).removeClass("active");
                                angular.element(document.querySelector("#completedsignature")).addClass(" active");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed"); //mobio
                                angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend-blank"); //mobio
                                angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend"); //mobio : make span colored green
                            }
                            else if ($scope.meeting == 'Did Not Attend') {
                                angular.element(document.querySelector("#scheduledsignature")).removeClass("active");
                                angular.element(document.querySelector("#scheduledsignature")).addClass("schedule");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed-blank");//mobio:to hide Completed div
                                angular.element(document.querySelector("#span-didnotattend")).addClass("span-did-not-attend");//mobio:to color specific span red
                                angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend");//mobio:to make "Did Not Attended" colored red
                            } else {
                                angular.element(document.querySelector("#scheduledsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#sentsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#completedsignature")).addClass("blank-stepper");
                                angular.element(document.querySelector("#completedsignature")).addClass("completed");
                                angular.element(document.querySelector("#span-didnotattend")).removeClass("span-did-not-attend");//mobio
                                angular.element(document.querySelector("#didnotattendsignature")).addClass("didnotattend-blank");
                            }
                        }
                    }, { escape: false }
                );
            }
            $scope.packetandMeeting();

            /* Toaster Option */
            this.setOptions = function () {
                toastr.options.positionClass = "toast-bottom-right";
                toastr.options.closeButton = true;
                toastr.options.progressBar = true;

            };
            this.setOptions();
            this.clear = function () {
                toastr.clear();
            };
            $scope.timeConversion = function (number) {
                var time;
                var hours = Math.floor(number / 60);
                var min = number % 60;
                hours = hours < 10 ? "0" + hours : hours;
                min = min < 10 ? "0" + min : min;
                time = hours + ':' + min;
                //var time = (hours < 12) ? (hours-12 + ':' + min +' PM') : (hours + ':' + min +' AM');
                return time;
            }

            /* Toaster Option Complete with clear funtion */
            $scope.FromDate = $filter('date')(new Date(), "MMddyyyyHHmmss");
            $scope.openmodal = function (clickedMonth) {
                $('#spinner').show();
                $scope.clickedMonth = clickedMonth;
                $scope.modalType = 'Monthly';
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardController.getMileages}', $scope.clickedMonth, $scope.selectedYear, $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                var mileageList = JSON.parse(result[0]);
                                $scope.totalMileage = JSON.parse(result[1]);
                                $scope.totalVariableAmount = JSON.parse(result[2]);
                                angular.forEach(mileageList, function (item) {
                                    item.drivingtime = $scope.timeConversion(item.drivingtime);
                                    item.staytime = $scope.timeConversion(item.staytime);
                                    item.totaltime = $scope.timeConversion(item.totaltime);
                                })
                                $scope.exportManagerList = [];
                                $scope.exportManagerList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable Amount", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageList, function (item, key) {
                                    $scope.exportManagerList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.fileName = $scope.adminname + '\'s Mileage' + $scope.FromDate;
                                $scope.reimbursementDialog.open($scope.fileName, clickedMonth, $scope.selectedYear, mileageList, $scope.totalMileage, $scope.totalVariableAmount, $scope.modalType);
                                $('#spinner').hide();
                            }
                            else {
                                var mileageList = [];
                                $scope.totalMileage = JSON.parse(result[1]);
                                $scope.totalVariableAmount = JSON.parse(result[2]);
                                $scope.exportManagerList = [];
                                $scope.exportManagerList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable Amount", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageList, function (item, key) {
                                    $scope.exportManagerList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.fileName = $scope.adminname + '\'s Mileage' + $scope.FromDate;
                                $scope.reimbursementDialog.open($scope.fileName, clickedMonth, $scope.selectedYear, mileageList, $scope.totalMileage, $scope.totalVariableAmount, $scope.modalType);
                                $('#spinner').hide();
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            };

            // Biweekly modal 
            $scope.openbiweeklymodal = function (stDate, enDate, biweekId) {
                $('#spinner').show();
                let stArr = stDate.split('-');
                let enArr = enDate.split('-');
                $scope.modalType = 'Biweekly';
                $scope.bStartDate = stArr[1] + '/' + stArr[2] + '/' + stArr[0].substring(2, 4);
                $scope.bEndDate = enArr[1] + '/' + enArr[2] + '/' + enArr[0].substring(2, 4);
                $scope.clickedPeriod = "Pay Period" + " " + $scope.bStartDate + " - " + $scope.bEndDate
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardController.getBiweekMileages}', biweekId,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                // let escapeChar = escapeSpecialChars(result[0]);
                                var mileageList = JSON.parse(result[0]);
                                $scope.totalMileage = JSON.parse(result[1]);
                                $scope.totalVariableAmount = JSON.parse(result[2]);
                                angular.forEach(mileageList, function (item) {
                                    item.drivingtime = $scope.timeConversion(item.drivingtime);
                                    item.staytime = $scope.timeConversion(item.staytime);
                                    item.totaltime = $scope.timeConversion(item.totaltime);
                                })
                                $scope.exportManagerList = [];
                                $scope.exportManagerList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable", "Trip Type", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageList, function (item, key) {
                                    $scope.exportManagerList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.tripActivity, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.bFileName = $scope.adminname + '\'s Mileage' + ' ' + $scope.FromDate;
                                $scope.reimbursementDialog.open($scope.bFileName, $scope.clickedPeriod, $scope.selectedYear, mileageList, $scope.totalMileage, $scope.totalVariableAmount, $scope.modalType);
                                $('#spinner').hide();
                            }
                            else {
                                var mileageList = [];
                                $scope.totalMileage = JSON.parse(result[1]);
                                $scope.totalVariableAmount = JSON.parse(result[2]);
                                $scope.exportManagerList = [];
                                $scope.exportManagerList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable", "Trip Type", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageList, function (item, key) {
                                    $scope.exportManagerList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.tripActivity, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.fileName = $scope.adminname + '\'s Mileage' + ' ' + $scope.FromDate;
                                $scope.reimbursementDialog.open($scope.bFileName, $scope.clickedPeriod, $scope.selectedYear, mileageList, $scope.totalMileage, $scope.totalVariableAmount, $scope.modalType);
                                $('#spinner').hide();
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }
            // $scope.totalMonthlyCost = '{!TotalMonthlyCosts}';

            var _driverDetail = {!DriverDetails}
            $scope.empContact = _driverDetail;
            $scope.cRole = $scope.empContact[0].Role__c;
            $scope.driverConDetails = $scope.empContact[0];
            $scope.biWeekContact = $scope.empContact[0].Account.Bi_Weekly_Pay_Period__c;
            $scope.driverType = $scope.empContact[0].Driver_Type__c;
            $scope.contactname = '{!contactDataAsString}';
            console.log($scope.contactname);
            if ($scope.empContact[0].Car_Image__c == null || $scope.empContact[0].Car_Image__c == '' || $scope.empContact[0].Car_Image__c == undefined) {
                $scope.empContact[0].Car_Image__c = '';
            }

            if ($scope.empContact != null && $scope.empContact != '') {
                $scope.adminname = $scope.empContact[0].Name;
            } else {
                $scope.adminname = '';
            }
            if ($scope.empContact[0].Insurance_Attachment_Id__c != '' && $scope.empContact[0].Insurance_Attachment_Id__c != null && $scope.empContact[0].Insurance_Attachment_Id__c != undefined) {
                $scope.attachmentid = $scope.empContact[0].Insurance_Attachment_Id__c;
            }
            else {
                $scope.attachmentid = "";
            }
            //$scope.adminname =  $scope.contactname;
            $scope.empReimList = JSON.parse('{!ReimbursementsList}');
            $scope.mileageList = '';
            $scope.gasrate = {!gasVariableRatePreviosMonth}
            $scope.gaspricedata = {!gaspriceforpreviosmonth};
            if ($scope.gasrate != null && $scope.gasrate != '') {
                if ($scope.gasrate[0] != undefined) {
                    if ($scope.gasrate[0].Fuel_Price__c == null) {
                        $scope.variablefuelprice = JSON.stringify($scope.gasrate);
                    } else {
                        $scope.variablefuelprice = null
                    }
                } else {
                    $scope.variablefuelprice = $scope.gasrate
                }
            } else {
                $scope.variablefuelprice = null;
            }

            /*$scope.fuelprice = JSON.stringify($scope.gaspricedata[0].Fuel_Price__c);*/
            if ($scope.gaspricedata != null && $scope.gaspricedata != '') {
                console.log('fuel price:--' + $scope.gaspricedata[0].Fuel_Price__c);
                if ($scope.gaspricedata[0].Fuel_Price__c != '' && $scope.gaspricedata[0].Fuel_Price__c != null) {
                    $scope.fuelprice = JSON.stringify($scope.gaspricedata[0].Fuel_Price__c);
                } else {
                    $scope.fuelprice = '';
                }
            } else {
                $scope.fuelprice = '';
            }
            var Maintenance, Tires;
            Maintenance = ($scope.empContact[0].Maintenance__c === null || $scope.empContact[0].Maintenance__c === undefined) ? 0 : $scope.empContact[0].Maintenance__c;
            Tires = ($scope.empContact[0].Tires__c === null || $scope.empContact[0].Tires__c === undefined) ? 0 : $scope.empContact[0].Tires__c;
            if ($scope.variablefuelprice != null) {
                $scope.miles = parseFloat($scope.variablefuelprice) + Maintenance + Tires;
            } else {
                $scope.miles = Maintenance + Tires;
            }
            $scope.businessUse = $scope.empContact[0].Total_Monthly_Costs__c * ($scope.empContact[0].Business_Use__c / 100);
            $scope.totalMonthlyAmount = $scope.businessUse / 12;
            if ($scope.empContact[0].Fixed_Cost_Adjustment__c == null || $scope.empContact[0].Fixed_Cost_Adjustment__c == "" || $scope.empContact[0].Fixed_Cost_Adjustment__c == undefined) {
                $scope.fixedcostadjustment = null
            } else {
                $scope.fixedcostadjustment = $scope.empContact[0].Fixed_Cost_Adjustment__c
                $scope.totalMonthlyFixedCost = $scope.fixedcostadjustment + $scope.totalMonthlyAmount;
            }
            $scope.showunapprove = false;
            if ($scope.empReimList == 0) {
                $scope.unapprovemileage = JSON.stringify($scope.empReimList);
                $scope.showunapprove = true;
            }
            else {
                var count = 0;
                angular.forEach($scope.empReimList, function (item, key) {
                    count = count + item.Total_Pending__c;
                });
                $scope.unapprovemileage = count;
                $scope.showunapprove = true;
            }

            $scope.displymodal = function () {
                let redirectUrl = "/app/uploadInsurance?accid=" + $scope.accid + "&id=" + $scope.id;
                location.href = redirectUrl;
            }

            $scope.modal = function () {
                angular.element(document.querySelector("#driver-dashboard-insurance-upload")).removeClass("displaynone");
                angular.element(document.querySelector("#driver-dashboard-insurance-upload")).addClass("displayblock");
            }

            $scope.playVideo = function (Id) {
                $('#spinner').show();
                let vurl = 'https://' + window.location.host + `/app/insightResource?accid=${$scope.accid}&id=${$scope.id}#${Id}`;
                angular.element(document.querySelector("#videoFrame")).removeClass("d-none");
                document.getElementById("videoFrame").setAttribute("src", vurl);
            }
            
            $scope.uploadedInsurance = function () {
                angular.element(document.querySelector("#uploadedInsurance")).addClass("displayblock");
                angular.element(document.querySelector("#notuploadedInsurance")).addClass("displaynone");
            }
            $scope.dismismodal = function () {
                angular.element(document.querySelector("#driver-dashboard-insurance-upload")).removeClass("displayblock");
                angular.element(document.querySelector("#driver-dashboard-insurance-upload")).addClass("displaynone");
                $('.modal-backdrop').remove();
            }
            $scope.showToast = function (message, error) {
                if (error)
                    toastr.error(message);
                else
                    toastr.success(message);
            }

            $scope.loadDriverInsurance = function () {

                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardController.getdriverInsurance}', $scope.attachmentid,
                    function (result, event) {

                        if (event.status) {

                            $scope.driverInsurance = JSON.parse(result);
                            $scope.$apply();
                        }
                    },
                    { escape: false }
                );
            }
            $scope.loadDriverInsurance();

            /* Sorting For table */
            $scope.sortKey1 = 'Month';   //set the sortKey to the param passed   
            $scope.reverse1 = false;
            $scope.sort1 = function (keyname) {
                //set the sortKey to the param passed
                $scope.reverse1 = ($scope.sortKey1 === keyname) ? !$scope.reverse1 : false;//if true make it false 
                $scope.sortKey1 = keyname;
            }
            $scope.active = true;
            $scope.active1 = true;
            $scope.selectedYear = '';
            $scope.fetchMileage = function (clickedYear) {
                console.log("scroll", document.body.scrollHeight)
                $('#spinner').show();
                $scope.selectedYear = clickedYear;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardController.getAllReimbursements}', $scope.selectedYear, $scope.id, $scope.accid,
                    function (result, event) {

                        if (event.status && result != null) {
                            if (result != '') {
                                $scope.mileages = [];
                                $scope.mileages = JSON.parse(result);
                                console.log("mileage", $scope.mileages)
                            }
                            else {
                                $scope.mileages = [];
                            }
                            $('#spinner').hide();
                        }
                        else {
                            $('#spinner').hide();
                            toastr.error('Something went wrong.');
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }

            // excel download
            $scope.downloadToExcel = function (sheetData, excelfile) {
                function datenum(v, date1904) {
                    if (date1904) v += 1462;
                    var epoch = Date.parse(v);
                    return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000);
                };

                function getSheet(data, opts) {
                    var ws = {};
                    var range = { s: { c: 10000000, r: 10000000 }, e: { c: 0, r: 0 } };
                    for (var R = 0; R != data.length; ++R) {
                        for (var C = 0; C != data[R].length; ++C) {
                            if (range.s.r > R) range.s.r = R;
                            if (range.s.c > C) range.s.c = C;
                            if (range.e.r < R) range.e.r = R;
                            if (range.e.c < C) range.e.c = C;
                            var cell = { v: data[R][C] };
                            if (cell.v == null) continue;
                            var cell_ref = XLSX.utils.encode_cell({ c: C, r: R });

                            if (typeof cell.v === 'number') cell.t = 'n';
                            else if (typeof cell.v === 'boolean') cell.t = 'b';
                            else if (cell.v instanceof Date) {
                                cell.t = 'n'; cell.z = XLSX.SSF._table[14];
                                cell.v = datenum(cell.v);
                            }
                            else cell.t = 's';
                            ws[cell_ref] = cell;
                        }
                    }
                    if (range.s.c < 10000000) ws['!ref'] = XLSX.utils.encode_range(range);
                    return ws;
                };

                function Workbook() {
                    if (!(this instanceof Workbook)) return new Workbook();
                    this.SheetNames = [];
                    this.Sheets = {};
                }
                var wb = new Workbook(), ws = getSheet(sheetData);
                /* add worksheet to workbook */
                wb.SheetNames.push(excelfile);
                wb.Sheets[excelfile] = ws;
                var wbout = XLSX.write(wb, { bookType: 'xlsx', bookSST: true, type: 'binary' });
                function s2ab(s) {
                    var buf = new ArrayBuffer(s.length);
                    var view = new Uint8Array(buf);
                    for (var i = 0; i != s.length; ++i) view[i] = s.charCodeAt(i) & 0xFF
                    return buf;
                }
                saveAs(new Blob([s2ab(wbout)], { type: "application/octet-stream" }), excelfile + '.xlsx');
            };
            // Time and Attendence Report
            $scope.fetchTimeAttendence = function (clickedyear) {
                $('#spinner').show();
                $scope.timeAttendence = [];
                $scope.selectedYear = clickedyear;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardController.TimeAttendance}', $scope.id, $scope.selectedYear,
                    function (result, event) {
                        if (event.status && result != null) {
                            $scope.timeAttendence = result;
                            console.log($scope.timeAttendence);
                            $('#spinner').hide();
                        }
                        else {
                            $('#spinner').hide();
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );

            }

            // Reimbursement Link 
            $scope.fetchReimbMileage = function (clickedyear) {
                $('#spinner').show();
                $scope.reimbMileages = [];
                $scope.selectedYear = clickedyear;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardController.biweeklyMileage}', $scope.id, $scope.selectedYear,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                $scope.reimbMileages = [];
                                $scope.reimbMileages = result;
                                console.log($scope.reimbMileages);
                            }
                            else {
                                $scope.reimbMileages = [];
                            }
                            $('#spinner').hide();
                        }
                        else {
                            $('#spinner').hide();
                            toastr.error('Something went wrong');
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }
            // Total Reimbursemnt For Reimbursement For ERMI Account
            function calculateReimb(fixed1, fixed2, fixed3, variable) {
                let nfixed1, nfixed2, nfixed3, nVariable, f1, f2, f3, vr, totalReim;
                nfixed1 = (fixed1 != "null") ? fixed1.split(" $") : fixed1;
                nfixed2 = (fixed2 != "null") ? fixed2.split(" $") : fixed2;
                nfixed3 = (fixed3 != "null") ? fixed3.split(" $") : fixed3;
                nVariable = (variable != "null") ? variable.split(" $") : variable;
                f1 = (nfixed1 != "null") ? parseFloat(nfixed1[1]) : 0.00;
                f2 = (nfixed2 != "null") ? parseFloat(nfixed2[1]) : 0.00;
                f3 = (nfixed3 != "null") ? parseFloat(nfixed3[1]) : 0.00;
                vr = (nVariable != "null") ? parseFloat(nVariable[1]) : 0.00;
                totalReim = f1 + f2 + f3 + vr;
                return totalReim.toFixed(2).toString();
            }
            $scope.fetchErmiReimbMileage = function (clickedyear) {
                $('#spinner').show();
                $scope.reimbMileages = [];
                $scope.selectedYear = clickedyear;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardController.getAllReimbursements}', $scope.selectedYear, $scope.id, $scope.accid,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                $scope.reimbMileages = [];
                                $scope.reimbMileages = JSON.parse(result);
                                angular.forEach($scope.reimbMileages, function (item) {
                                    item.totalForReimbursement = calculateReimb(item.fixed1, item.fixed2, item.fixed3, item.varibleAmount)
                                })
                                console.log($scope.reimbMileages);
                            }
                            else {
                                $scope.reimbMileages = [];
                            }
                            $('#spinner').hide();
                        }
                        else {
                            $('#spinner').hide();
                            toastr.error('Something went wrong');
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }

            //Summary Report For Monthly Reimbursement
            $scope.exportToMonthSummary = function () {
                var summaryFile;
                $scope.excelSummary = [];
                $scope.excelSummary.push(["Month", "Fuel Rate", "Total Mileage", "Approved Mileage", "Fixed Amount", "Variable Amount", "Total Reimbursement"]);
                angular.forEach($scope.mileages, function (item) {
                    let variableFixed = item.varibleAndFixedReimbursements;
                    let fixedAndVariable = variableFixed.split(/[\s$+ ]+/);
                    $scope.excelSummary.push([item.month, item.fuel, item.mileage, item.approveMileage, fixedAndVariable[1], fixedAndVariable[2], item.totalReimbursements]);
                })

                summaryFile = $scope.adminname + '\'s  Summary Report';
                $scope.downloadToExcel($scope.excelSummary, summaryFile);
            }
            //Summary Report For Reimbursement
            $scope.exportToSummary = function () {
                var summaryFile;
                $scope.excelSummary = [];
                $scope.excelSummary.push(["Start Date", "End Date", "Gas Prices", "Mileage", "Variable Rate", "Variable Amount", "Fixed Amount", "Total Reimbursement"]);
                angular.forEach($scope.reimbMileages, function (item) {
                    $scope.excelSummary.push([$filter('date')(item.startDate, 'MM/dd/yyyy'), $filter('date')(item.endDate, 'MM/dd/yyyy'), item.fuel, item.mileage, item.variableRate, item.variable, item.fixedAmount, item.totalReim]);
                })

                summaryFile = $scope.adminname + '\'s  Summary Report';
                $scope.downloadToExcel($scope.excelSummary, summaryFile);
            }

            // Detail Report For Reimbursement

            function compareArray(a, b) {
                var dateA = (a.startDate == null) ? '' : new Date(a.startDate.toLowerCase()),
                    dateB = (b.startDate == null) ? '' : new Date(b.startDate.toLowerCase())
                if (dateA < dateB) {
                    return -1;
                }
                if (dateA > dateB) {
                    return 1;
                }
                return 0;
            }

          

            $scope.exportToDetail = function () {
                var lenOfReimb, stDate, enDate, detailFileName;
                $scope.exportReimDetailList = [];
                $scope.reimbMileages.sort(compareArray);
                lenghtOfReimb = $scope.reimbMileages.length;
                stDate = $scope.reimbMileages[0].startDate;
                enDate = $scope.reimbMileages[lenghtOfReimb - 1].endDate;
                $scope.bStartDate = $filter('date')(new Date(stDate), "yyyy-MM-dd");
                $scope.bEndDate = $filter('date')(new Date(enDate), "yyyy-MM-dd");
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardController.getAllMileages}', stDate, enDate, $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                let escapeChar = escapeSpecialChars(result[0]);
                                var biDetailList = JSON.parse(escapeChar);
                                $scope.exportReimDetailList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable", "Fixed Amount", "Trip Type", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(biDetailList, function (item, key) {
                                    $scope.exportReimDetailList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.halfFixedAmount, item.tripActivity, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                detailFileName = $scope.adminname + '\'s Detail Report';
                                $scope.downloadToExcel($scope.exportReimDetailList, detailFileName);
                            }
                            else {
                                toastr.error(result);
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }
            // download time and attendance detail report or reimbursement report
            $scope.downloadReport = function (startDt, endDt) {
                $scope.timePeriodList = [];
                $scope.driverName = '{!contactDataAsString}';
                $scope.TDate = $filter('date')(new Date(), "MMddyyyyHHmmss");
                $scope.excelFileName = $scope.driverName + '\'s Time And Attendance Report ' + $scope.TDate;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardController.getMileagesBasedTandAtt}', startDt, endDt, $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                let escapeChar = escapeSpecialChars(result);
                                var detailedList = JSON.parse(escapeChar);
                                console.log(detailedList);
                                $scope.exportPeriodList = [];
                                $scope.exportPeriodList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable Amount", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(detailedList, function (item, key) {
                                    $scope.exportPeriodList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.downloadToExcel($scope.exportPeriodList, $scope.excelFileName);
                            } else {
                                $scope.exportPeriodList = [];
                                toastr.error("No mileage found between " + startDt + " to " + endDt);
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );
            }
            $scope.downloadReimbReportForERMI = function (reimYear, reimonth) {
                $scope.exportReimbusList = [];
                $scope.empObj = {!currentDriverDetails            
};
            $scope.driverName = $scope.empObj[0].Name;
            $scope.TDate = $filter('date')(new Date(), "MMddyyyyHHmmss");
            $scope.excelFileName = $scope.driverName + '\'s Reimbursement Report ' + $scope.TDate;
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.DriverDashboardController.getMileages}', reimonth, reimYear, $scope.id,
                function (result, event) {
                    if (event.status && result != null) {
                        if (result != '') {
                            let escapeChar = escapeSpecialChars(result);
                            var mileageReimbList = JSON.parse(escapeChar);
                            if (mileageReimbList.length > 0) {
                                $scope.exportReimbusList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable Amount", "Total Time", "Notes", "Tags"]);
                                angular.forEach(mileageReimbList, function (item, key) {
                                    $scope.exportReimbusList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.downloadToExcel($scope.exportReimbusList, $scope.excelFileName);
                            } else {
                                $scope.exportReimbusList = [];
                                toastr.error("No mileage found for " + reimonth);
                            }
                        }
                    }
                });
             }

            $scope.downloadReimbReport = function (stDate, enDate, biweekId) {
                $scope.exportReimbusList = [];
                $scope.bStartDate = $filter('date')(new Date(stDate), "yyyy-MM-dd");
                $scope.bEndDate = $filter('date')(new Date(enDate), "yyyy-MM-dd");
                $scope.clickedPeriod = "Pay Period" + " " + $filter('date')(new Date(stDate), "MM/dd/yy") + " - " + $filter('date')(new Date(enDate), "MM/dd/yy")
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.DriverDashboardController.getBiweekMileages}', biweekId,
                    function (result, event) {
                        if (event.status && result != null) {
                            if (result != '') {
                                let escapeChar = escapeSpecialChars(result[0]);
                                var biweeklyList = JSON.parse(escapeChar);
                                angular.forEach(biweeklyList, function (item) {
                                    item.drivingtime = $scope.timeConversion(item.drivingtime);
                                    item.staytime = $scope.timeConversion(item.staytime);
                                    item.totaltime = $scope.timeConversion(item.totaltime);
                                })
                                $scope.exportReimbusList.push(["Contact Email", "Tracing Style", "Day Of Week", "Trip Date", "Start Time", "End Time", "Trip Origin", "Trip Destination", "Mileage", "Status", "Date Submitted", "Date Approved", "Maint/Tires", "Fuel Rate", "Variable Rate", "Variable", "Trip Type", "Drive Time", "Stay Time", "Total Time", "Notes", "Tags"]);
                                angular.forEach(biweeklyList, function (item, key) {
                                    $scope.exportReimbusList.push([item.emailaddress, item.tracingstyle, item.dayofweek, item.tripdate, item.starttime, item.endtime, item.originname, item.destinationname, item.mileage, item.status, item.submitteddate, item.approveddate, item.maintTyre, item.fuelVariableRate, item.variablerate, item.variableamount, item.tripActivity, item.drivingtime, item.staytime, item.totaltime, item.notes, item.tag]);
                                });
                                $scope.excelFileName = $scope.adminname + '\'s Mileage' + ' ' + $scope.FromDate;
                                $scope.downloadToExcel($scope.exportReimbusList, $scope.excelFileName);
                            }
                            else {
                                toastr.error(result);
                            }
                        }
                        $scope.$apply();
                    },
                    { escape: false }
                );

            }

            $scope.sortKey = 'intmonth';    //set the sortKey to the param passed   
            $scope.reverse = true;
            $scope.sort = function (keyname) {
                $scope.reverse = ($scope.sortKey === keyname) ? !$scope.reverse : false;
                $scope.sortKey = keyname;
            }

            $scope.sortKey1 = 'intmonth';   //set the sortKey to the param passed   
            $scope.reverse1 = true;
            $scope.sort1 = function (keyname) {
                $scope.reverse1 = ($scope.sortKey1 === keyname) ? !$scope.reverse1 : false;
                $scope.sortKey1 = keyname;
            }

            $scope.complianceCalculation = function () {

                $('#spinner').show();
                $scope.detailreportfordownload = [];
                $scope.summaryreportfordownload = [];
                $scope.filenamefordetail = $scope.adminname + ' Annual Tax Liability Detail Report';
                $scope.fileNameforsummary = $scope.adminname + ' Annual Tax Liability Summary Report';

                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.DriverDashboardController.getCompliance}', $scope.id,
                    function (result, event) {
                        if (event.status && result != null) {

                            $scope.messageofcompliance = JSON.parse(result[1]);
                            if (result.length > 2) {
                                $scope.$apply(function () {
                                    $scope.compliancedata = JSON.parse(result[2]);
                                    $scope.detailreport = JSON.parse(result[3]);
                                    $scope.summaryreport = JSON.parse(result[4]);
                                    $scope.Reimbursements = JSON.parse(result[5]);
                                    $scope.maxallow = JSON.parse(result[6]);
                                    $scope.taxliablity = JSON.parse(result[7]);
                                });

                                $scope.detailreportfordownload.push(["Driver Name", "Email", "Employee Id", "Month", "Year", "Total Reimbursement", "IRS allowable", "Imputed Income"]);
                                angular.forEach($scope.detailreport, function (item) {
                                    $scope.detailreportfordownload.push([item.drivername, item.emailid, item.employeeid, item.month, item.year, "$" + item.totalreim, "$" + item.iRSallowable, "$" + item.imputedincome]);

                                });
                                $scope.detailreportfordownload.push([" ", " ", " ", " ", " ", "$" + $scope.Reimbursements, "$" + $scope.maxallow, "$" + $scope.taxliablity]);

                                $scope.summaryreportfordownload.push(["Driver Name", "Email", "Employee Id", "Total Reimbursement", "IRS allowable", "Imputed Income"]);
                                angular.forEach($scope.summaryreport, function (item) {
                                    $scope.summaryreportfordownload.push([item.drivername, item.emailid, item.employeeid, "$" + $scope.Reimbursements, "$" + $scope.maxallow, "$" + item.imputedincome]);
                                });
                                $scope.$apply(function () {
                                    $scope.summrylenth = $scope.summaryreportfordownload.length
                                });
                                $('#spinner').hide();
                            }
                            else {
                                $scope.$apply(function () {
                                    $scope.compliancedata = [];
                                    $scope.summrylenth = 0;
                                });
                                $('#spinner').hide();
                            }
                        }
                    },
                    { escape: false }
                );
            }
                }]);
        </script>
    </head>

    <body ng-app="driverDashboardModule" ng-controller="DriverDashboardController" ng-cloak="true" id="theBody">
        <header>
            <div class="main-header pad-0 sticky" id="myHeader">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12 pad-0">
                            <nav class="navbar navbar-expand-md my-0 my-md-0 px-0">
                                <a class="navbar-brand col-6 col-sm-6 col-md-3 col-lg-3 col-xl-3 px-0" href="/app/driverDashboardClone?accid={{accid}}&id={{id}}">
                                    <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/logo/mBurse-logo_rev.png')}" class="img-fluid" href="javascript:void(0)"
                                        alt="logo" />

                                </a>
                                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
                                    <span class="navbar-toggler-icon">
                                        <i class="fa fa-bars"></i>
                                    </span>
                                </button>

                                <div class="collapse navbar-collapse flex-column col-12 col-sm-6 col-md-9 col-lg-9 col-xl-9 ml-3 ml-sm-0 ml-lg-0 align-items-end"
                                    id="collapsibleNavbar">
                                    <ul class="navbar-nav flex-row alignitemscenter">
                                        <!-- </ul>
                                        <ul class="navbar-nav"> -->
                                        <li class="nav-item active">
                                            <a class="nav-link text-white" href="/app/driverDashboardClone?accid={{accid}}&id={{id}}">Dashboard</a>
                                        </li>
                                        <li class="nav-item menu-play">
                                            <a id="open-menu" class="img-brand col-6 col-sm-6 col-md-3 col-lg-3 col-xl-3 px-0 ml-em">
                                                <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-2x.png')}" class="img-icon-fluid" href="javascript:void(0)"
                                                    alt="logo" />
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <!-- <button class="btn btn-secondary float-right">Upload Insurance</button> -->
                                            <a class="btn btn-secondary float-right ml-em upload-button" ng-click="displymodal()">
                                                <!--  ng-click="displymodal()" -->
                                                Upload Insurance
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link text-white" href="/app/secur/logout.jsp">Logout</a>
                                        </li>
                                    </ul>
                                </div>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </header>

        <div id="spinner">
            <div class="spinner-background"></div>
            <div class="spinner-load">
                <div class="spinner-border text-light" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            </div>
        </div>

        <nav id="overlay" class="d-none">
            <i class="fa fa-close fa-3x close-button" alt="menu"   id="close-menu"></i>
            <div class="overlay-heading">Gain valuable insights and answers with these mBurse resources</div>
            <ul>
                <li>
                    <div class="video-title">Welcome</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-1-(3).png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" ng-click="playVideo('G1')"/></div>
                    <p><span>Your Plan</span><span>Preview</span></p>
                </li>
                <li>
                    <div class="video-title">Parameters</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/Icon-50@2x.png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" ng-click="playVideo('G2')"/></div>
                    <p><span>Your Plan</span><span>Parameters</span></p>
                </li>
                <li>
                    <div class="video-title">mLog Preview</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-1-(3).png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" ng-click="playVideo('G3')"/></div>
                    <p><span>mLog App</span><span>Overview</span></p>
                </li>
                <li>
                    <div class="video-title">download</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/download-icon-white-24.jpg')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" ng-click="playVideo('G4')"/></div>
                    <p><span>Get the</span><span>mLog app</span></p>
                </li>
                <li>
                    <div class="video-title">driver meeting</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-1-(3).png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" ng-click="playVideo('G5')"/></div>
                    <p><span>Your Company</span><span>Plan</span></p>
                </li>
            </ul>
            <!-- <div class="form-white-divider"></div>
            <div class="overlay-heading pd-6">Program FAQ'S and Resources</div>
            <ul>
                <li>
                    <div class="video-title">Plan parameters</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-1-(3).png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" ng-click="playVideo()"/></div>
                    <p><span>Reimbursement</span><span>Guidelines</span></p>
                </li>
                <li>
                    <div class="video-title">Insurance</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-1-(3).png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" /></div>
                    <p><span>Your Insurance</span><span>Guidelines</span></p>
                </li>
                <li>
                    <div class="video-title">Compliance</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-1-(3).png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" /></div>
                    <p><span>How Compliance</span><span>Works</span></p>
                </li>
                <li>
                    <div class="video-title">Dashboard</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-1-(3).png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" /></div>
                    <p><span>How Compliance</span><span>Works</span></p>
                </li>
                <li>
                    <div class="video-title">Dashboard</div>
                    <div class="icon-wrapper"> <img src="{!URLFOR($Resource.EmcCSS,'emc-design/assets/images/shreds2001-1-(3).png')}" class="video-icon-fluid" href="javascript:void(0)"
                        alt="logo" /></div>
                    <p><span>How Compliance</span><span>Works</span></p>
                </li>
            </ul> -->
        </nav>
        <iframe id="videoFrame" frameborder="0" class="vf-video-iframe d-none" name="videoVf"></iframe>
        <section class="container-fluid">
            <div id="pills-admin-dashbord-myteamprofile" class="myteamprofile">
                <iframe id="vfFrame" height="345" width="100%" style="border: 0" class="vf-iframe"></iframe>
            </div>
            <div class="my-5 admin-roster-tab-section">
                <ul class="nav nav-pills">
                    <li class="nav-item mb-3">
                        <a class="nav-link active" data-toggle="pill" href="#pills-admin-dashbord-myteam">My Trips</a>
                    </li>
                    <li class="nav-item mb-3">
                        <a class="nav-link" data-toggle="pill" href="#pills-admin-dashbord-mileage">Plan Info</a>
                    </li>
                </ul>
                <div class="tab-content timeline" style="padding-bottom: 3rem">
                    <div class="tab-pane active" id="pills-admin-dashbord-myteam">
                        <div id="accordion" role="tablist">
                            <div class="card insurance-declatarion-card" ng-repeat="yr in years">
                                <div class="card-header" role="tab" id="Cardheading">
                                    <h5 class="mb-0">
                                        <a ng-show="driverConDetails.Monthly_Reimbursement__c" class="collapsed" data-toggle="collapse" href="#collapseCard{{$index}}"
                                            aria-expanded="false" aria-controls="collapseCard{{$index}}" ng-click="fetchMileage(yr)" role="button">
                                            {{yr}}
                                        </a>
                                        <!-- Year Link For Pl Marketing Account -->
                                        <a ng-show="driverConDetails.Biweek_Reimbursement__c && biWeekContact" class="collapsed" data-toggle="collapse" href="#collapseReimbPLCard{{$index}}"
                                            aria-expanded="false" aria-controls="collapseReimbPLCard{{$index}}" ng-click="fetchReimbMileage(yr)" role="button">
                                            {{yr}}
                                        </a>
                                        <!-- Year Link For ERMI Account-->
                                        <a ng-show="driverConDetails.Biweek_Reimbursement__c && !biWeekContact" class="collapsed" data-toggle="collapse" href="#collapseReimbCard{{$index}}"
                                            aria-expanded="false" aria-controls="collapseReimbCard{{$index}}" ng-click="fetchErmiReimbMileage(yr)" role="button">
                                            {{yr}}
                                        </a>
                                    </h5>
                                    <!-- Time And Attendance For Account-->
                                    <h5 class="mb-0 ml-5" ng-show="driverConDetails.Time_Attandance__c">
                                        <!--  ng-if="accid === ERMIAcc && driverType != 'Driver - Salary' " -->
                                        <a class="collapsed" data-toggle="collapse" href="#collapseTimeCard{{$index}}" aria-expanded="false" aria-controls="collapseTimeCard{{$index}}"
                                            ng-click="fetchTimeAttendence(yr)" role="button">
                                            T &amp; A
                                        </a>
                                    </h5>
                                    <!-- <h5 class="mb-0 ml-5" ng-if="accid == PLMarketing">
                                                <a class="collapsed" data-toggle="collapse" href="#collapseReimbCard{{$index}}" aria-expanded="false" aria-controls="collapseReimbCard"
                                                    ng-click="fetchReimbMileage(yr)">
                                                    Reimbursement
                                                </a>
                                            </h5>
                                              <h5 class="mb-0 ml-5"  ng-if="accid === ERMIAcc && driverType != 'Driver - Salary' ">
                                                <a class="collapsed" data-toggle="collapse" href="#collapseReimbCard{{$index}}" aria-expanded="false" aria-controls="collapseReimbCard"
                                                    ng-click="fetchErmiReimbMileage(yr)">
                                                    Reimbursement
                                                </a>
                                            </h5> -->
                                </div>
                                <div ng-show="driverConDetails.Monthly_Reimbursement__c" id="collapseCard{{$index}}" class="collapse" role="tabpanel" aria-labelledby="Cardheading"
                                    data-parent="#accordion">
                                    <div class="card-body pad-0">
                                        <div class="table-responsive">
                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th>Month
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='Month'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}"></span>
                                                        </th>
                                                        <th>Fuel
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='Fuel'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}"></span>
                                                        </th>
                                                        <th>Total Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='mileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Approved Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='approveMileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Fixed + Variable
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='Reimbursements'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}">
                                                            </span>
                                                        </th>
                                                        <th>Total Reimbursement
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='totalReimbursements'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}"></span>
                                                        </th>
                                                    </tr>
                                                </thead>
                                                <tbody class="driver-dashboard-table table-a-link">
                                                    <tr ng-repeat="ml in mileages |orderBy:sortKey1:reverse1">
                                                        <td ng-click="openmodal(ml.month)" class="month_td">
                                                            <a>{{ml.month}}</a>
                                                        </td>
                                                        <td ng-if="ml.fuel != null && ml.fuel != ''" class="fuel_td">${{ml.fuel}}</td>
                                                        <td ng-if="ml.fuel == null || ml.fuel == ''" class="fuel_td"></td>
                                                        <td>{{ml.mileage|currency:value=""}}</td>
                                                        <td>{{ml.approveMileage | currency:value=""}}</td>
                                                        <!--AI-000212-->
                                                        <td>{{ml.varibleAndFixedReimbursements}}</td>
                                                        <td>${{ml.totalReimbursements|currency:value=""}}</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <!-- <div class="card-footer text-muted" ng-if="mileages.length > 0">
                                                <div class="card-inner-text">
                                                    <button class="btn btn-primary font-16 mr-11 cursor-type f-btn" ng-click="exportToMonthSummary()">Summary
                                                        <i class="fa fa-download"></i>
                                                    </button>
                                                    <button class="btn btn-primary font-16 mr-11 cursor-type f-btn" ng-click="exportToMonthDetail()">Detail
                                                        <i class="fa fa-download"></i>
                                                    </button>
                                                </div>
                                            </div> -->
                                </div>
                                <div ng-show="driverConDetails.Time_Attandance__c" id="collapseTimeCard{{$index}}" class="collapse" role="tabpanel" aria-labelledby="Cardheading"
                                    data-parent="#accordion">
                                    <div class="card-body pad-0">
                                        <div class="table-responsive">
                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th>Start Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='startDate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>End Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='endDate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Drive Time
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='driveTime'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Stay Time
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='stayTime'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Total Time
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalTime'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Approval Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='approvalDate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody class="driver-dashboard-table table-a-link">
                                                    <tr ng-repeat="time in timeAttendence | orderBy : '-startDate'">
                                                        <td>{{time.startDate}}</td>
                                                        <td>{{time.endDate}}</td>
                                                        <td>{{time.totaldrivingTime}}</td>
                                                        <td>{{time.totalStayTime}}</td>
                                                        <td>{{time.totalTime}}</td>
                                                        <td>{{time.approvalDate}}</td>
                                                        <td class="vw-4">
                                                            <button class="btn btn-primary font-14 mr-11 cursor-type" ng-click="downloadReport(time.startDate,time.endDate)">Download
                                                                <i class="fa fa-download"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                    <tr ng-if="timeAttendence.length == 0">
                                                        <td colspan="7" class="table-nodata">No Data Available</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                                <div ng-show="driverConDetails.Biweek_Reimbursement__c && !biWeekContact" id="collapseReimbCard{{$index}}" class="collapse"
                                    role="tabpanel" aria-labelledby="Cardheading" data-parent="#accordion">
                                    <div class="card-body pad-0">
                                        <div class="table-responsive">
                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th>Month
                                                            <span class="sort-icon pull-right"></span>
                                                        </th>
                                                        <th>Fuel
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='Fuel'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='mileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Mi Rate
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='variableRate'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Variable
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='varibleAmount'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Fixed 1
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='fixed1'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Fixed 2
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='fixed2'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Fixed 3
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='fixed3'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}">
                                                            </span>
                                                        </th>
                                                        <th>Total Reimbursement
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalFixedAmount'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody class="driver-dashboard-table table-a-link">
                                                    <tr ng-repeat="reimbml in reimbMileages |orderBy:sortKey:reverse">
                                                        <td ng-click="openmodal(reimbml.month)">
                                                            <a>{{reimbml.month}}</a>
                                                        </td>
                                                        <td ng-if="reimbml.fuel != null && reimbml.fuel != ''">${{reimbml.fuel}}</td>
                                                        <td ng-if="reimbml.fuel == null || reimbml.fuel == ''"></td>
                                                        <td>{{reimbml.mileage | currency:value=""}}</td>
                                                        <td>{{reimbml.variableRate}}</td>
                                                        <td>{{reimbml.varibleAmount}}</td>
                                                        <td ng-if="reimbml.fixed1 != 'null' && reimbml.fixed1 != ''">{{reimbml.fixed1}}</td>
                                                        <td ng-if="reimbml.fixed1 == 'null' || reimbml.fixed1 == ''"></td>
                                                        <td ng-if="reimbml.fixed2 != 'null' && reimbml.fixed2 != ''">{{reimbml.fixed2}}</td>
                                                        <td ng-if="reimbml.fixed2 == 'null' || reimbml.fixed2 == ''"></td>
                                                        <td ng-if="reimbml.fixed3 != 'null' && reimbml.fixed3 != ''">{{reimbml.fixed3}}</td>
                                                        <td ng-if="reimbml.fixed3 == 'null' || reimbml.fixed3 == ''"></td>
                                                        <td ng-if="reimbml.totalForReimbursement != null && reimbml.totalForReimbursement != ''" class="vw-8">${{reimbml.totalForReimbursement}}</td>
                                                        <td ng-if="reimbml.totalForReimbursement == null || reimbml.totalForReimbursement == '0'" class="vw-8"></td>
                                                        <td class="vw-4">
                                                            <button class="btn btn-primary font-14 mr-11 cursor-type" ng-click="downloadReimbReportForERMI(yr,reimbml.month)">Download
                                                                <i class="fa fa-download"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                    <tr ng-if="reimbMileages.length == 0">
                                                        <td colspan="9" class="table-nodata">No Data Available</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                </div>
                                <div ng-show="driverConDetails.Biweek_Reimbursement__c && biWeekContact" id="collapseReimbPLCard{{$index}}" class="collapse"
                                    role="tabpanel" aria-labelledby="Cardheading" data-parent="#accordion">
                                    <div class="card-body pad-0">
                                        <div class="table-responsive">
                                            <table id="driver-dashbord" class="table table-striped dt-responsive nowrap dataTable" cellspacing="0" width="100%">
                                                <thead>
                                                    <tr>
                                                        <th>Start Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='startDate'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}"></span>
                                                        </th>
                                                        <th>End Date
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='endDate'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}"></span>
                                                        </th>
                                                        <th>Gas Prices
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='fuel'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}"></span>
                                                        </th>
                                                        <th>Fixed Total
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='fixedAmount'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}">
                                                            </span>
                                                        </th>
                                                        <th>Total Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='mileage'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Approved Mileage
                                                            <span class="sort-icon pull-right" ng-show="sortKey=='totalApproved'" ng-class="{'fa fa-chevron-up':reverse,'fa fa-chevron-down':!reverse}"></span>
                                                        </th>
                                                        <th>Variable Amount
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='variable'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}">
                                                            </span>
                                                        </th>
                                                        <th>Total Reimbursement
                                                            <span class="sort-icon pull-right" ng-show="sortKey1=='totalReim'" ng-class="{'fa fa-chevron-up':reverse1,'fa fa-chevron-down':!reverse1}"></span>
                                                        </th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody class="driver-dashboard-table table-a-link">
                                                    <tr ng-repeat="reimbml in reimbMileages | orderBy : '-startDate' ">
                                                        <td ng-click="openbiweeklymodal(reimbml.startDate, reimbml.endDate, reimbml.biweekId)">
                                                            <a>{{reimbml.startDate | date : "'MM/dd/yy"}}</a>
                                                        </td>
                                                        <td>{{reimbml.endDate | date : "'MM/dd/yy"}}</td>
                                                        <td ng-if="reimbml.fuel != null && reimbml.fuel != ''">${{reimbml.fuel}}</td>
                                                        <td ng-if="reimbml.fuel == null || reimbml.fuel == ''"></td>
                                                        <td>{{reimbml.fixedAmount}}</td>
                                                        <td>{{reimbml.mileage | currency:value=""}}</td>
                                                        <td>{{reimbml.totalApproved | currency:value=""}}</td>
                                                        <td>{{reimbml.variable | currency:value=""}}</td>
                                                        <td>{{reimbml.totalReim}}</td>
                                                        <td class="vw-4">
                                                            <button class="btn btn-primary font-14 mr-11 cursor-type" ng-click="downloadReimbReport(reimbml.startDate, reimbml.endDate, reimbml.biweekId)">Download
                                                                <i class="fa fa-download"></i>
                                                            </button>
                                                        </td>
                                                    </tr>
                                                    <tr ng-if="reimbMileages.length == 0">
                                                        <td colspan="9" class="table-nodata">No Data Available</td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>
                                    <div class="card-footer text-muted" ng-if="reimbMileages.length > 0">
                                        <div class="card-inner-text">
                                            <button class="btn btn-primary font-16 mr-11 cursor-type f-btn" ng-click="exportToSummary()">Summary
                                                <i class="fa fa-download"></i>
                                            </button>
                                            <button class="btn btn-primary font-16 mr-11 cursor-type f-btn" ng-click="exportToDetail()">Detail
                                                <i class="fa fa-download"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="pills-admin-dashbord-mileage">
                        <c:PlanInfoComponent driverPacketDocCount="{!packetSize}" insuranceDocCount="{!insuranceSize}" mvrCheckDocCount="{!obj_driverpacket_attachMVRsize}"
                            contentVersionUrl="{!obj_content_version}" driverPacketId="{!If(packetSize> 0, driverPacketAttachmentList[0], null)}"
                            insuranceId="{!If(insuranceSize > 0, driverInsuranceAttachmentList[0], null)}" mvrCheckId="{!If(obj_driverpacket_attachMVRsize > 0, obj_driver_driverMVR[0], null)}"
                        />
                    </div>
                </div>
                <!-- EMC - 324 Introduce mBurse Support Chat On Existing System -->
               <c:mBurseChatBot />
               <!-- EMC - 324 Ends -->
            </div>
        </section>

        <reimbursements-dialog-directive model="reimbursementDialog" export-data="exportManagerList"></reimbursements-dialog-directive>

        <apex:include pageName="EMC_Common_footer" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.13.3/js/standalone/selectize.js" crossorigin="anonymous"
            referrerpolicy="no-referrer"></script>
        <script type="text/javascript">
            $(document).ready(function () {
                $(".demo-default").selectize();
            });

            const overlay = document.getElementById('overlay');
            const closeMenu = document.getElementById('close-menu');

            document.getElementById('open-menu').addEventListener('click', function() {
                overlay.classList.remove('d-none');
                overlay.classList.add('show-menu');
            });
            document.getElementById('close-menu').addEventListener('click', function(){
                overlay.classList.remove('show-menu')
            })

            var iFrame = document.getElementById('vfFrame');
            // console.log("Screen Width: " + window.screen.width);
            let iFrameheight;
            window.onmessage = function (event) {
                if(event.data === 'close-video'){
                  document.getElementById("videoFrame").removeAttribute("src");
                  document.getElementById('videoFrame').classList.add('d-none');
                }
                if(event.data === 'component'){
                    $('#spinner').hide();
                }
                if (window.screen.width > 1366) {
                    if (event.data == 'slds-is-open') {
                        iFrameheight = document.getElementById('vfFrame').contentWindow.document.body.offsetHeight;
                        iFrame.height = `${(iFrameheight)}px`
                        console.log('Reply received!');
                    } else if (event.data == 'slds-is-close') {
                        iFrameheight = document.getElementById('vfFrame').contentWindow.document.body.offsetHeight;
                        iFrame.height = `${(iFrameheight)}px`
                        console.log('Reply received!');
                    }
                } else {
                    if (event.data == 'slds-is-open') {
                        iFrame.height = "762"
                        console.log('Reply received!');
                    } else if (event.data == 'slds-is-close') {
                        iFrame.height = "391";
                        console.log('Reply received!');
                    }
                }

            };
        </script>
    </body>

    </html>
</apex:page>